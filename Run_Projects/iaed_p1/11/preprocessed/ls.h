/*File generated by PreProcessor.py*/

#ifndef LS_H
#define LS_H



typedef int Item;
typedef struct Product
{
  int id;
  char description[64];
  int price;
  int weight;
  int stock;
} Product;
typedef struct Order
{
  int num_products;
  int weight;
  int product_ids[200];
  int product_qty[10000];
} Order;
void add_product(const char *description, const int price, const int weight, const int stock);
void add_stock(const int product_id, const int quantity);
void create_order();
void add_product_to_order(const int order_id, const int product_id, const int quantity);
void remove_stock_from_product(const int product_id, const int quantity);
void remove_product_from_order(const int order_id, const int product_id);
void get_order_cost(const int order_id);
void change_product_price();
void list_product_from_order();
void list_order_with_highest_qty_of_product();
void list_all_products_by_price_asc();
void list_products_by_description(const int order_id);
void print_products(int ids_array[], int size);
void print_order_products(int order_id, int ids_array[], int size);
int compare_product_by_description(const Item i1, const Item i2);
int compare_product_by_price_asc(const Item i1, const Item i2);
void merge(Item a[], int l, int m, int r, int (*comparator)(Item, Item));
void mergesort(Item a[], int l, int r, int (*comparator)(Item, Item));
#endif