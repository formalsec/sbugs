/*File generated by PreProcessor.py*/

#ifndef SDD_PROJ_IAED_H
#define SDD_PROJ_IAED_H



typedef struct 
{
  char desc[64];
  unsigned int price;
  unsigned int weight;
  unsigned int qty;
} product;
typedef struct 
{
  int products[10000][1];
} package;
typedef unsigned int uint;
int CommandProcess();
void CreateProd(char desc[64], uint price, uint weight, uint qty);
void GetProdDesc(uint id, char *buffer);
uint GetProdPeso(uint id);
uint GetProdPrice(uint id);
uint GetProdQty(uint id);
uint GetEncomQtyProd(uint id_encom, uint id_prod);
uint GetEncomPeso(uint id);
void SetProdDesc(uint id, char *desc);
void SetProdPrice(uint id, uint price);
void SetProdPeso(uint id, uint weight);
void SetProdQty(uint id, uint qty);
void SetEncomQtyProd(uint id_encom, uint id_prod, uint qty);
void AddStock(uint id, uint qty);
void RemoveStock(uint id, uint qty);
void CreateEncomenda();
void AddProd(uint id_encom, uint id_prod, uint qty);
void RemoveProd(uint id_encom, uint id_prod);
void ListEncomTotalPrice(uint id);
void ProdNewPrice(uint id, uint price);
void ListDescPrice(uint id_encom, uint id_prod);
void EncomMaxProd(uint id);
void ListProdByID();
void ListEncomByID();
void MergeSortOrder(int arr[], int arr_aux[], uint l_index, uint mid_index, uint r_index, int (*p_comp_func)(int, int));
void MergeSortRecursive(int arr[], int arr_aux[], uint l_index, uint r_index, int (*p_comp_func)(int, int));
void MergeSort(int arr[], uint l_index, uint r_index, int (*p_comp_func)(int, int));
int CompareProdPrice(int id_1, int id_2);
int EncomCompareProdDesc(int id_1, int id_2);
void ListProdByPrice();
void ListEncomProdByDesc(uint id_encom);
#endif