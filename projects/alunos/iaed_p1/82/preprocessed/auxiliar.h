/*File generated by PreProcessor.py*/


#include "estruturas.h"
#include <stdio.h>
#include <strings.h>


int aux[10000];
int get_string(char *);
int ret_preco(int, Produto *);
int cmp_str(int, int, Produto *);
void ordena_counting(Produto *, int, int *, int (*)(int, Produto *));
void merge(int *, int, int, int, Produto *, int (*)(int, int, Produto *));
void ordena_merge(int *, int, int, Produto *, int (*)(int, int, Produto *));
void imprime_ordenado(int *, int, Produto *, int *);
int get_string(char *arg)
{
  char c;
  int i = 0;
  c = getchar();
  while ((c != ':') && (i < (64 - 1)))
  {
    arg[i] = c;
    i++;
    c = getchar();
  }

  while (c != ':')
    c = getchar();

  arg[i] = '\0';
  return i;
}

int ret_preco(int id, Produto *p)
{
  return p[id].preco;
}

int cmp_str(int i, int j, Produto *p)
{
  return strcasecmp(p[j].desc, p[i].desc);
}

void ordena_counting(Produto *p, int size, int *output, int (*ret_aux)(int id, Produto *p))
{
  int conta[32768] = {0};
  int i;
  for (i = 0; i < size; i++)
    ++conta[ret_aux(i, p)];

  for (i = 1; i < 32768; i++)
    conta[i] += conta[i - 1];

  for (i = size - 1; i >= 0; --i)
  {
    output[conta[ret_aux(i, p)] - 1] = p[i].id;
    --conta[ret_aux(i, p)];
  }

}

void merge(int *id, int baixo, int m, int cima, Produto *p, int (*cmp)(int i, int j, Produto *p))
{
  int i;
  int j;
  int k;
  for (i = m + 1; i > baixo; i--)
    aux[i - 1] = id[i - 1];

  for (j = m; j < cima; j++)
    aux[(cima + m) - j] = id[j + 1];

  for (k = baixo; k <= cima; k++)
  {
    if (cmp(aux[i], aux[j], p) < 0)
    {
      id[k] = aux[j--];
    }
    else
    {
      id[k] = aux[i++];
    }

  }

}

void ordena_merge(int *id, int baixo, int cima, Produto *p, int (*cmp)(int i, int j, Produto *p))
{
  int m = (baixo + cima) / 2;
  if (cima <= baixo)
  {
    return;
  }
  else
  {
    
  }

  ordena_merge(id, baixo, m, p, cmp);
  ordena_merge(id, m + 1, cima, p, cmp);
  merge(id, baixo, m, cima, p, cmp);
}

void imprime_ordenado(int *id, int size, Produto *produto, int *stock)
{
  int i;
  for (i = 0; i < size; i++)
  {
    printf("* %s %d %d\n", produto[id[i]].desc, produto[id[i]].preco, stock[id[i]]);
  }

}

