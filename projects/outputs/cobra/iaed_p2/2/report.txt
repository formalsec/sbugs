=== Array-index variable with unchecked min/max value ===
1: /home/fmarques/sbugs/projects/alunos/iaed_p2/2/proj2.c:217..217
   217  		printf("%d * %s\n", line, melhores[i]->nome);

2: /home/fmarques/sbugs/projects/alunos/iaed_p2/2/proj2.c:206..206
   206  			melhores[count] = eq;

3: /home/fmarques/sbugs/projects/alunos/iaed_p2/2/proj2.c:199..199
   199  		eq = (pEquipa) htEquipas.t[i];

4: /home/fmarques/sbugs/projects/alunos/iaed_p2/2/proj2.c:194..194
   194  	pEquipa eq, melhores[MAX_VENCEDORES];	/* lista das melhores equipas */

5: /home/fmarques/sbugs/projects/alunos/iaed_p2/2/proj2.c:194..194
   194  	pEquipa eq, melhores[MAX_VENCEDORES];	/* lista das melhores equipas */

6: /home/fmarques/sbugs/projects/alunos/iaed_p2/2/proj2.c:165..165
   165  	pEquipa eq;					/* ponteiro para equipa */

7: /home/fmarques/sbugs/projects/alunos/iaed_p2/2/proj2.c:121..121
   121  	link p;					/* apontador para no de jogo */

8: /home/fmarques/sbugs/projects/alunos/iaed_p2/2/proj2.c:98..98
    98  	link p;						/* apontador para no de jogo */

9: /home/fmarques/sbugs/projects/alunos/iaed_p2/2/proj2.c:75..75
    75  	link p;					/* ponteiro para o no da lista de jogos */

10: /home/fmarques/sbugs/projects/alunos/iaed_p2/2/proj2.c:58..58
    58  	link p = head;

11: /home/fmarques/sbugs/projects/alunos/iaed_p2/2/proj2.c:31..31
    31  	pEquipa eq1, eq2;						/* ponteiros para as equipas */

12: /home/fmarques/sbugs/projects/alunos/iaed_p2/2/proj2.c:29..29
    29  	char nome1[STR_SIZE], nome2[STR_SIZE];	/* nome das equipas */

13: /home/fmarques/sbugs/projects/alunos/iaed_p2/2/proj2.c:29..29
    29  	char nome1[STR_SIZE], nome2[STR_SIZE];	/* nome das equipas */

14: /home/fmarques/sbugs/projects/alunos/iaed_p2/2/jogo.c:20..20
    20  	ItemDL p = can_fail_malloc(sizeof(struct jogo));

15: /home/fmarques/sbugs/projects/alunos/iaed_p2/2/jogo.c:10..10
    10  	pEquipa eq = can_fail_malloc(sizeof(struct equipa));

16: /home/fmarques/sbugs/projects/alunos/iaed_p2/2/hash.c:81..81
    81  			free(ht->t[i]);

17: /home/fmarques/sbugs/projects/alunos/iaed_p2/2/hash.c:80..80
    80  			free((Itemkey)ht->keyfunc(ht->t[i]));

18: /home/fmarques/sbugs/projects/alunos/iaed_p2/2/hash.c:79..79
    79  		if (ht->t[i] != NULL) {

19: /home/fmarques/sbugs/projects/alunos/iaed_p2/2/hash.c:59..59
    59  		ht->t[i] = NULL;

20: /home/fmarques/sbugs/projects/alunos/iaed_p2/2/hash.c:58..58
    58  		void* v = ht->t[i];

21: /home/fmarques/sbugs/projects/alunos/iaed_p2/2/hash.c:57..57
    57  	while(ht->t[i = (i+1)%ht->M] != NULL) {		/* reinsert affected collisions */

22: /home/fmarques/sbugs/projects/alunos/iaed_p2/2/hash.c:57..57
    57  	while(ht->t[i = (i+1)%ht->M] != NULL) {		/* reinsert affected collisions */

23: /home/fmarques/sbugs/projects/alunos/iaed_p2/2/hash.c:57..57
    57  	while(ht->t[i = (i+1)%ht->M] != NULL) {		/* reinsert affected collisions */

24: /home/fmarques/sbugs/projects/alunos/iaed_p2/2/hash.c:57..57
    57  	while(ht->t[i = (i+1)%ht->M] != NULL) {		/* reinsert affected collisions */

25: /home/fmarques/sbugs/projects/alunos/iaed_p2/2/hash.c:56..56
    56  	ht->t[i] = NULL;

26: /home/fmarques/sbugs/projects/alunos/iaed_p2/2/hash.c:55..55
    55  	if(ht->t[i] == NULL) return;				/* element not found */

27: /home/fmarques/sbugs/projects/alunos/iaed_p2/2/hash.c:53..53
    53  	while(ht->t[i] != NULL && notEqual((Itemkey)ht->keyfunc(ht->t[i]), k))	/* search */

28: /home/fmarques/sbugs/projects/alunos/iaed_p2/2/hash.c:53..53
    53  	while(ht->t[i] != NULL && notEqual((Itemkey)ht->keyfunc(ht->t[i]), k))	/* search */

29: /home/fmarques/sbugs/projects/alunos/iaed_p2/2/hash.c:45..45
    45  	return ht->t[i];	/* returns NULL if not in table, otherwise, returns item */

30: /home/fmarques/sbugs/projects/alunos/iaed_p2/2/hash.c:43..43
    43  	while(ht->t[i] != NULL && notEqual((Itemkey)ht->keyfunc(ht->t[i]), k))

31: /home/fmarques/sbugs/projects/alunos/iaed_p2/2/hash.c:43..43
    43  	while(ht->t[i] != NULL && notEqual((Itemkey)ht->keyfunc(ht->t[i]), k))

32: /home/fmarques/sbugs/projects/alunos/iaed_p2/2/hash.c:33..33
    33  				HTinsert(tmp[i], ht);			/* re-insert items */

33: /home/fmarques/sbugs/projects/alunos/iaed_p2/2/hash.c:32..32
    32  			if (tmp[i] != NULL)

34: /home/fmarques/sbugs/projects/alunos/iaed_p2/2/hash.c:25..25
    25  	ht->t[i] = pItem;

35: /home/fmarques/sbugs/projects/alunos/iaed_p2/2/hash.c:23..23
    23  	while(ht->t[i] != NULL)						/* find free position */

36: /home/fmarques/sbugs/projects/alunos/iaed_p2/2/hash.c:10..10
    10  	HashTable ht;

37: /home/fmarques/sbugs/projects/alunos/iaed_p2/2/doublinklist.c:66..66
    66  	link p;

38: /home/fmarques/sbugs/projects/alunos/iaed_p2/2/doublinklist.c:32..32
    32  	link p = head;

39: /home/fmarques/sbugs/projects/alunos/iaed_p2/2/doublinklist.c:12..12
    12  	link p = can_fail_malloc(sizeof(struct node));
