=== Array-index variable with unchecked min/max value ===
1: /home/fmarques/sbugs/projects/alunos/iaed_p2/228/hash_table.c:99..99
    99          h->row_heads[row] = n->ht_next;

2: /home/fmarques/sbugs/projects/alunos/iaed_p2/228/hash_table.c:94..94
    94    node *n, *prev, *head = h->row_heads[row];

3: /home/fmarques/sbugs/projects/alunos/iaed_p2/228/hash_table.c:93..93
    93    int row = hash(key, h->size);

4: /home/fmarques/sbugs/projects/alunos/iaed_p2/228/hash_table.c:81..81
    81    h->row_heads[row] = new_node;          /* change the head in the sll*/

5: /home/fmarques/sbugs/projects/alunos/iaed_p2/228/hash_table.c:80..80
    80    new_node->ht_next = h->row_heads[row]; /* adding to the single linked list */

6: /home/fmarques/sbugs/projects/alunos/iaed_p2/228/hash_table.c:75..75
    75    int row = hash(h->get_data_key(data), h->size);

7: /home/fmarques/sbugs/projects/alunos/iaed_p2/228/hash_table.c:63..63
    63    node *n = h->row_heads[hash(key, h->size)];

8: /home/fmarques/sbugs/projects/alunos/iaed_p2/228/hash_table.c:63..63
    63    node *n = h->row_heads[hash(key, h->size)];

9: /home/fmarques/sbugs/projects/alunos/iaed_p2/228/hash_table.c:63..63
    63    node *n = h->row_heads[hash(key, h->size)];

10: /home/fmarques/sbugs/projects/alunos/iaed_p2/228/hash_table.c:63..63
    63    node *n = h->row_heads[hash(key, h->size)];

11: /home/fmarques/sbugs/projects/alunos/iaed_p2/228/hash_table.c:58..58
    58      res += str[i]*(i+1);

12: /home/fmarques/sbugs/projects/alunos/iaed_p2/228/hash_table.c:35..35
    35      h->row_heads[i] = NULL; /* every row has no elements in the beginning */

13: /home/fmarques/sbugs/projects/alunos/iaed_p2/228/game.c:9..9
     9    size_t len = strlen(s) + 1;

14: /home/fmarques/sbugs/projects/alunos/iaed_p2/228/commands.c:200..200
   200  			free(winners[i]);

15: /home/fmarques/sbugs/projects/alunos/iaed_p2/228/commands.c:197..197
   197  			printf("%d * %s\n",NL,winners[i]);

16: /home/fmarques/sbugs/projects/alunos/iaed_p2/228/commands.c:190..190
   190  	                strcpy(winners[k], temp);

17: /home/fmarques/sbugs/projects/alunos/iaed_p2/228/commands.c:189..189
   189  	                strcpy(winners[i], winners[k]);

18: /home/fmarques/sbugs/projects/alunos/iaed_p2/228/commands.c:189..189
   189  	                strcpy(winners[i], winners[k]);

19: /home/fmarques/sbugs/projects/alunos/iaed_p2/228/commands.c:188..188
   188  	                strcpy(temp, winners[i]);

20: /home/fmarques/sbugs/projects/alunos/iaed_p2/228/commands.c:187..187
   187          		if (strcmp(winners[i], winners[k]) > 0) {

21: /home/fmarques/sbugs/projects/alunos/iaed_p2/228/commands.c:187..187
   187          		if (strcmp(winners[i], winners[k]) > 0) {

22: /home/fmarques/sbugs/projects/alunos/iaed_p2/228/commands.c:180..180
   180  				strcpy(winners[i],w->name);

23: /home/fmarques/sbugs/projects/alunos/iaed_p2/228/commands.c:172..172
   172  			winners[i] = can_fail_malloc(NAME_DIM*sizeof(char));

24: /home/fmarques/sbugs/projects/alunos/iaed_p2/228/commands.c:151..151
   151  	char temp[NAME_DIM];

25: /home/fmarques/sbugs/projects/alunos/iaed_p2/228/commands.c:115..115
   115  	char name[NAME_DIM];

26: /home/fmarques/sbugs/projects/alunos/iaed_p2/228/commands.c:91..91
    91  	char name[NAME_DIM];

27: /home/fmarques/sbugs/projects/alunos/iaed_p2/228/commands.c:79..79
    79  	char name[NAME_DIM];

28: /home/fmarques/sbugs/projects/alunos/iaed_p2/228/commands.c:66..66
    66  	char name[NAME_DIM];

29: /home/fmarques/sbugs/projects/alunos/iaed_p2/228/commands.c:51..51
    51  	char name[NAME_DIM];

30: /home/fmarques/sbugs/projects/alunos/iaed_p2/228/commands.c:10..10
    10  	char name[NAME_DIM],team1name[NAME_DIM],team2name[NAME_DIM];

31: /home/fmarques/sbugs/projects/alunos/iaed_p2/228/commands.c:10..10
    10  	char name[NAME_DIM],team1name[NAME_DIM],team2name[NAME_DIM];

32: /home/fmarques/sbugs/projects/alunos/iaed_p2/228/commands.c:10..10
    10  	char name[NAME_DIM],team1name[NAME_DIM],team2name[NAME_DIM];
=== Dangerous function calls lacking bounds checking ===
1: /home/fmarques/sbugs/projects/alunos/iaed_p2/228/commands.c:190..190
   190  	                strcpy(winners[k], temp);

2: /home/fmarques/sbugs/projects/alunos/iaed_p2/228/commands.c:189..189
   189  	                strcpy(winners[i], winners[k]);

3: /home/fmarques/sbugs/projects/alunos/iaed_p2/228/commands.c:188..188
   188  	                strcpy(temp, winners[i]);

4: /home/fmarques/sbugs/projects/alunos/iaed_p2/228/commands.c:180..180
   180  				strcpy(winners[i],w->name);
=== Possibly missing sizeof() in memory allocation ===
1: /home/fmarques/sbugs/projects/alunos/iaed_p2/228/game.c:10..10
    10    void *new = can_fail_malloc(len);
=== Source of memcpy is untrusted parameter ===
1: /home/fmarques/sbugs/projects/alunos/iaed_p2/228/game.c:13..13
    13    return (char *)memcpy(new, s, len);
