=== Array-index variable with unchecked min/max value ===
1: /home/fmarques/sbugs/projects/alunos/iaed_p2/318/hashTableJogos.c:101..101
   101              HT[i] = tmp;

2: /home/fmarques/sbugs/projects/alunos/iaed_p2/318/hashTableJogos.c:100..100
   100              free(HT[i]);

3: /home/fmarques/sbugs/projects/alunos/iaed_p2/318/hashTableJogos.c:99..99
    99              tmp = HT[i]->next;

4: /home/fmarques/sbugs/projects/alunos/iaed_p2/318/hashTableJogos.c:97..97
    97          while (HT[i] != NULL)

5: /home/fmarques/sbugs/projects/alunos/iaed_p2/318/hashTableJogos.c:93..93
    93      HT_jogos tmp;

6: /home/fmarques/sbugs/projects/alunos/iaed_p2/318/hashTableJogos.c:76..76
    76      HT_jogos = heads[i];

7: /home/fmarques/sbugs/projects/alunos/iaed_p2/318/hashTableJogos.c:74..74
    74      HT_jogos HT_jogos;

8: /home/fmarques/sbugs/projects/alunos/iaed_p2/318/hashTableJogos.c:73..73
    73      int i = hashU(nome, HT_tam);

9: /home/fmarques/sbugs/projects/alunos/iaed_p2/318/hashTableJogos.c:55..55
    55                  heads[i] = HT_jogos->next;

10: /home/fmarques/sbugs/projects/alunos/iaed_p2/318/hashTableJogos.c:48..48
    48      for (HT_jogos = heads[i]; HT_jogos; HT_jogos = HT_jogos->next)

11: /home/fmarques/sbugs/projects/alunos/iaed_p2/318/hashTableJogos.c:45..45
    45      HT_jogos HT_jogos;

12: /home/fmarques/sbugs/projects/alunos/iaed_p2/318/hashTableJogos.c:43..43
    43      int i = hashU(nome, HT_tam);

13: /home/fmarques/sbugs/projects/alunos/iaed_p2/318/hashTableJogos.c:37..37
    37          heads[i] = novo;

14: /home/fmarques/sbugs/projects/alunos/iaed_p2/318/hashTableJogos.c:33..33
    33          heads[i] = heads[i]->prev;

15: /home/fmarques/sbugs/projects/alunos/iaed_p2/318/hashTableJogos.c:33..33
    33          heads[i] = heads[i]->prev;

16: /home/fmarques/sbugs/projects/alunos/iaed_p2/318/hashTableJogos.c:32..32
    32          heads[i]->prev->next = heads[i];

17: /home/fmarques/sbugs/projects/alunos/iaed_p2/318/hashTableJogos.c:32..32
    32          heads[i]->prev->next = heads[i];

18: /home/fmarques/sbugs/projects/alunos/iaed_p2/318/hashTableJogos.c:31..31
    31          heads[i]->prev->p = jogo;

19: /home/fmarques/sbugs/projects/alunos/iaed_p2/318/hashTableJogos.c:30..30
    30          heads[i]->prev = novo;

20: /home/fmarques/sbugs/projects/alunos/iaed_p2/318/hashTableJogos.c:28..28
    28      if (heads[i]) /*Se a list nao estiver vazia, o elemento e adicionado ao inicio da lista*/

21: /home/fmarques/sbugs/projects/alunos/iaed_p2/318/hashTableJogos.c:24..24
    24      HT_jogos novo;

22: /home/fmarques/sbugs/projects/alunos/iaed_p2/318/hashTableJogos.c:22..22
    22      int i = hashU(jogo->nome, HT_tam);

23: /home/fmarques/sbugs/projects/alunos/iaed_p2/318/hashTableJogos.c:15..15
    15          heads[i] = NULL;

24: /home/fmarques/sbugs/projects/alunos/iaed_p2/318/hashTableEquipas.c:100..100
   100              HT[i] = tmp;

25: /home/fmarques/sbugs/projects/alunos/iaed_p2/318/hashTableEquipas.c:99..99
    99              free(HT[i]);

26: /home/fmarques/sbugs/projects/alunos/iaed_p2/318/hashTableEquipas.c:98..98
    98              tmp = HT[i]->next;

27: /home/fmarques/sbugs/projects/alunos/iaed_p2/318/hashTableEquipas.c:96..96
    96          while (HT[i] != NULL)

28: /home/fmarques/sbugs/projects/alunos/iaed_p2/318/hashTableEquipas.c:92..92
    92      HT_equipas tmp;

29: /home/fmarques/sbugs/projects/alunos/iaed_p2/318/hashTableEquipas.c:77..77
    77      for (HT_equipas = heads[i]; HT_equipas; HT_equipas = HT_equipas->next)

30: /home/fmarques/sbugs/projects/alunos/iaed_p2/318/hashTableEquipas.c:74..74
    74      HT_equipas HT_equipas;

31: /home/fmarques/sbugs/projects/alunos/iaed_p2/318/hashTableEquipas.c:73..73
    73      int i = hashU(nome, HT_tam);

32: /home/fmarques/sbugs/projects/alunos/iaed_p2/318/hashTableEquipas.c:55..55
    55                  heads[i] = HT_equipas->next;

33: /home/fmarques/sbugs/projects/alunos/iaed_p2/318/hashTableEquipas.c:48..48
    48      for (HT_equipas = heads[i]; HT_equipas; HT_equipas = HT_equipas->next)

34: /home/fmarques/sbugs/projects/alunos/iaed_p2/318/hashTableEquipas.c:45..45
    45      HT_equipas HT_equipas;

35: /home/fmarques/sbugs/projects/alunos/iaed_p2/318/hashTableEquipas.c:43..43
    43      int i = hashU(nome, HT_tam);

36: /home/fmarques/sbugs/projects/alunos/iaed_p2/318/hashTableEquipas.c:37..37
    37          heads[i] = novo;

37: /home/fmarques/sbugs/projects/alunos/iaed_p2/318/hashTableEquipas.c:33..33
    33          heads[i] = heads[i]->prev;

38: /home/fmarques/sbugs/projects/alunos/iaed_p2/318/hashTableEquipas.c:33..33
    33          heads[i] = heads[i]->prev;

39: /home/fmarques/sbugs/projects/alunos/iaed_p2/318/hashTableEquipas.c:32..32
    32          heads[i]->prev->next = heads[i];

40: /home/fmarques/sbugs/projects/alunos/iaed_p2/318/hashTableEquipas.c:32..32
    32          heads[i]->prev->next = heads[i];

41: /home/fmarques/sbugs/projects/alunos/iaed_p2/318/hashTableEquipas.c:31..31
    31          heads[i]->prev->equipa = equipa;

42: /home/fmarques/sbugs/projects/alunos/iaed_p2/318/hashTableEquipas.c:30..30
    30          heads[i]->prev = novo;

43: /home/fmarques/sbugs/projects/alunos/iaed_p2/318/hashTableEquipas.c:28..28
    28      if (heads[i]) /*Se a list nao estiver vazia, o elemento e adicionado ao inicio da lista*/

44: /home/fmarques/sbugs/projects/alunos/iaed_p2/318/hashTableEquipas.c:24..24
    24      HT_equipas novo;

45: /home/fmarques/sbugs/projects/alunos/iaed_p2/318/hashTableEquipas.c:22..22
    22      int i = hashU(equipa->nome, HT_tam);

46: /home/fmarques/sbugs/projects/alunos/iaed_p2/318/hashTableEquipas.c:15..15
    15          heads[i] = NULL; /*Inicializa todas as entradas da hashtable a NULL*/

47: /home/fmarques/sbugs/projects/alunos/iaed_p2/318/equipas.c:94..94
    94          printf("%d * %s\n", NL, champs[i].nome);

48: /home/fmarques/sbugs/projects/alunos/iaed_p2/318/equipas.c:87..87
    87              champs[tam] = equipa_[0];
