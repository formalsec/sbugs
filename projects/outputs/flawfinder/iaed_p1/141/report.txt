File,Line,Column,DefaultLevel,Level,Category,Name,Warning,Suggestion,Note,CWEs,Context,Fingerprint,ToolVersion,RuleId,HelpUri
/home/fmarques/sbugs/projects/alunos/iaed_p1/141/proj1.c,20,5,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,    char Descricao[MAX_CHAR];,bcfb1dcc2c9eb0c0358c41755cc0eed6bc5dba7315e0453e3bc256d5fc5e0aa1,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
/home/fmarques/sbugs/projects/alunos/iaed_p1/141/proj1.c,14,9,1,1,buffer,equal,Function does not check the second iterator for over-read conditions (CWE-126).,This function is often discouraged by most C++ coding standards in favor of its safer alternatives provided since C++14. Consider using a form of this function that checks the second iterator before potentially overflowing it.,,CWE-126,"#define equal(A, B) (key(A) == key(B))",33c7afe7c9dcb0b2dee38e97b832fd3a49f202c0f8594d12ecbb2e93eeac68ed,2.0.19,FF1071,https://cwe.mitre.org/data/definitions/126.html
/home/fmarques/sbugs/projects/alunos/iaed_p1/141/proj1.c,60,13,1,1,buffer,getchar,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).",,,"CWE-120, CWE-20",    int car=getchar();,be83d661b9fc8c54d74713ab8245cab80a386c0739a5df97ced9a24fb80173c6,2.0.19,FF1029,https://cwe.mitre.org/data/definitions/120.html
/home/fmarques/sbugs/projects/alunos/iaed_p1/141/proj1.c,100,13,1,1,buffer,getchar,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).",,,"CWE-120, CWE-20",        car=getchar();},2cbf4983e637b5715824e2d9ddc223631a66210f2a6a37a5636f3a8aa0c22fcb,2.0.19,FF1029,https://cwe.mitre.org/data/definitions/120.html
/home/fmarques/sbugs/projects/alunos/iaed_p1/141/proj1.c,110,13,1,1,buffer,getchar,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).",,,"CWE-120, CWE-20","    int i,c=getchar();c=getchar();",886079d3d55a2889b9dcd65cd88abfc42907b83c393b21bbe44c635600865dfb,2.0.19,FF1029,https://cwe.mitre.org/data/definitions/120.html
/home/fmarques/sbugs/projects/alunos/iaed_p1/141/proj1.c,110,25,1,1,buffer,getchar,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).",,,"CWE-120, CWE-20","    int i,c=getchar();c=getchar();",886079d3d55a2889b9dcd65cd88abfc42907b83c393b21bbe44c635600865dfb,2.0.19,FF1029,https://cwe.mitre.org/data/definitions/120.html
/home/fmarques/sbugs/projects/alunos/iaed_p1/141/proj1.c,114,11,1,1,buffer,getchar,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).",,,"CWE-120, CWE-20",        c=getchar();},8ba780dd6e0f868de5d93ba7f8f0f6ec4604f14659875e9b64eb7f8ed37a74ea,2.0.19,FF1029,https://cwe.mitre.org/data/definitions/120.html
/home/fmarques/sbugs/projects/alunos/iaed_p1/141/proj1.c,326,63,1,1,buffer,equal,Function does not check the second iterator for over-read conditions (CWE-126).,This function is often discouraged by most C++ coding standards in favor of its safer alternatives provided since C++14. Consider using a form of this function that checks the second iterator before potentially overflowing it.,,CWE-126,"        if (less(Copia_Prod[j].Preco,Copia_Prod[i].Preco) || (equal(Copia_Prod[j].Preco,Copia_Prod[i].Preco) && Copia_Prod[j].Id < Copia_Prod[i].Id))",084ce8475c3d80259aeed2b79011882368127c2686cf6d3bf61e1b7a50178cae,2.0.19,FF1071,https://cwe.mitre.org/data/definitions/126.html
