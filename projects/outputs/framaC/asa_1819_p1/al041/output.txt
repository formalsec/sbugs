[report] Monitoring events
[report] Loading '/home/fmarques/sbugs/projects/configs/frama-c_report_rules.json'
[kernel] Parsing /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c (with preprocessing)
[kernel:parser:decimal-float] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:10: 
  Floating-point constant 0.10 is not represented exactly. Will use 0x1.999999999999ap-4.
[kernel:parser:decimal-float] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:17: 
  Floating-point constant 0.10 is not represented exactly. Will use 0x1.999999999999ap-4.
[kernel:parser:decimal-float] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:24: 
  Floating-point constant 0.10 is not represented exactly. Will use 0x1.999999999999ap-4.
[eva] Analyzing a complete application starting at main
[eva] Computing initial state
[eva] Initial state computed
[eva:initial-state] Values of globals at initialization
  N ∈ {0}
  M ∈ {0}
  DFSAux_time ∈ {0}
[eva] using specification for function scanf_va_1
[eva] using specification for function time
[eva] using specification for function srand
[eva] using specification for function rand
[eva] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:11: 
  allocating variable __malloc_can_fail_malloc_l11
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:92: 
  out of bounds write. assert \valid(&G->V);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:94: 
  signed overflow. assert V + 1 ≤ 2147483647;
[eva] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:11: 
  allocating variable __malloc_can_fail_malloc_l11_0
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:96: 
  out of bounds write. assert \valid(G->adj + v);
[eva] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:95: 
  starting to merge loop iterations
[eva] using specification for function scanf_va_2
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:52: 
  accessing uninitialized left-value. assert \initialized(G->adj + v);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:52: 
  out of bounds read. assert \valid_read(G->adj + v);
[eva] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:11: 
  allocating variable __malloc_can_fail_malloc_l11_1
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:41: 
  out of bounds write. assert \valid(&x->v);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:52: 
  out of bounds write. assert \valid(G->adj + v);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:53: 
  accessing uninitialized left-value. assert \initialized(G->adj + w);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:53: 
  out of bounds read. assert \valid_read(G->adj + w);
[eva] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:11: 
  allocating variable __malloc_can_fail_malloc_l11_2
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:53: 
  out of bounds write. assert \valid(G->adj + w);
[eva] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:294: 
  starting to merge loop iterations
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:54: 
  signed overflow. assert G->E + 1 ≤ 2147483647;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:194: 
  assertion 'alloca_bounds' got status unknown.
[eva] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:194: 
  allocating variable __malloc_DFS_l194
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:195: 
  assertion 'alloca_bounds' got status unknown.
[eva] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:195: 
  allocating variable __malloc_DFS_l195
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:196: 
  assertion 'alloca_bounds' got status unknown.
[eva] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:196: 
  allocating variable __malloc_DFS_l196
[eva] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:11: 
  allocating variable __malloc_can_fail_malloc_l11_3
[eva] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:11: 
  allocating variable __malloc_can_fail_malloc_l11_4
[eva] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:11: 
  allocating variable __malloc_can_fail_malloc_l11_5
[eva] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:11: 
  allocating variable __malloc_can_fail_malloc_l11_6
[eva] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:11: 
  allocating variable __malloc_can_fail_malloc_l11_7
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:212: 
  out of bounds write. assert \valid(parent + i);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:213: 
  out of bounds write. assert \valid(visited + i);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:214: 
  out of bounds write. assert \valid(ap + i);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:215: 
  out of bounds write. assert \valid(ids + i);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:216: 
  out of bounds write. assert \valid(idsSorted + i);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:217: 
  out of bounds write. assert \valid(aps + i);
[eva] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:211: 
  starting to merge loop iterations
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:221: 
  accessing uninitialized left-value. assert \initialized(visited + i);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:221: 
  out of bounds read. assert \valid_read(visited + i);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:152: 
  accessing uninitialized left-value. assert \initialized(G->adj + v);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:152: 
  out of bounds read. assert \valid_read(G->adj + v);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:153: 
  out of bounds write. assert \valid(visited + v);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:155: 
  out of bounds write. assert \valid(low + v);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:155: 
  out of bounds write. assert \valid(des + v);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:164: 
  accessing uninitialized left-value. assert \initialized(&temp->v);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:164: 
  accessing uninitialized left-value. assert \initialized(visited + temp->v);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:164: 
  out of bounds read. assert \valid_read(visited + temp->v);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:166: 
  accessing uninitialized left-value. assert \initialized(&temp->v);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:166: 
  out of bounds write. assert \valid(parent + temp->v);
[eva:recursion] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:167: 
  detected recursive call of function DFSAux.
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:167: 
  accessing uninitialized left-value. assert \initialized(&temp->v);
[eva] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:167: User Error: 
  Recursive call to DFSAux without assigns clause.
  Generating probably incomplete assigns to interpret the call. Try to increase
  the -eva-unroll-recursive-calls parameter or write a correct specification
  for function DFSAux.
[kernel:annot:missing-spec] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:148: 
  Neither code nor specification for function DFSAux, generating default assigns from the prototype
[eva] using specification for function DFSAux
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:169: 
  accessing uninitialized left-value. assert \initialized(&temp->v);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:169: 
  out of bounds read. assert \valid_read(low + v);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:169: 
  accessing uninitialized left-value. assert \initialized(low + temp->v);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:169: 
  out of bounds read. assert \valid_read(low + temp->v);
[eva] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:32: 
  Assigning imprecise value to tmp.
  The imprecision originates from Misaligned
  {/home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:148}
[eva] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:32: 
  Assigning imprecise value to \result<min>.
  The imprecision originates from Misaligned
  {/home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:148}
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:169: 
  out of bounds write. assert \valid(low + v);
[eva] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:169: 
  Assigning imprecise value to *(low + v)
  (pointing to __malloc_can_fail_malloc_l11_3 with offsets {32}).
  The imprecision originates from Misaligned
  {/home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:148}
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:171: 
  accessing uninitialized left-value. assert \initialized(parent + v);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:171: 
  out of bounds read. assert \valid_read(parent + v);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:175: 
  out of bounds read. assert \valid_read(parent + v);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:175: 
  accessing uninitialized left-value. assert \initialized(&temp->v);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:175: 
  out of bounds read. assert \valid_read(des + v);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:175: 
  accessing uninitialized left-value. assert \initialized(low + temp->v);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:175: 
  out of bounds read. assert \valid_read(low + temp->v);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:176: 
  out of bounds write. assert \valid(ap + v);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:180: 
  accessing uninitialized left-value. assert \initialized(&temp->v);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:180: 
  accessing uninitialized left-value. assert \initialized(parent + v);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:180: 
  out of bounds read. assert \valid_read(parent + v);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:181: 
  accessing uninitialized left-value. assert \initialized(&temp->v);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:181: 
  out of bounds read. assert \valid_read(low + v);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:181: 
  accessing uninitialized left-value. assert \initialized(des + temp->v);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:181: 
  out of bounds read. assert \valid_read(des + temp->v);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:181: 
  out of bounds write. assert \valid(low + v);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:184: 
  accessing uninitialized left-value. assert \initialized(&temp->next);
[eva] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:163: 
  starting to merge loop iterations
[eva] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:167: 
  Using specification of function DFSAux for recursive calls.
  Analysis of function DFSAux is thus incomplete and its soundness
  relies on the written specification.
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:172: 
  out of bounds write. assert \valid(ap + v);
[eva] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:181: 
  Assigning imprecise value to *(low + v)
  (pointing to __malloc_can_fail_malloc_l11_3 with offsets {32}).
  The imprecision originates from Misaligned
  {/home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:148}
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:165: 
  signed overflow. assert children + 1 ≤ 2147483647;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:224: 
  out of bounds write. assert \valid(ids + j);
[eva] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:224: 
  Assigning imprecise value to *(ids + j)
  (pointing to __malloc_can_fail_malloc_l11_5 with offsets {0}).
  The imprecision originates from Misaligned
  {/home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:148}
[eva] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:220: 
  starting to merge loop iterations
[eva] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:152: 
  Assigning imprecise value to temp.
  The imprecision originates from Misaligned
  {/home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:152}
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:160: 
  pointer comparison. assert \pointer_comparable((void *)temp, (void *)0);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:161: 
  signed overflow. assert -2147483648 ≤ *count + 1;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:161: 
  signed overflow. assert *count + 1 ≤ 2147483647;
[eva] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:161: 
  Assigning imprecise value to *count (pointing to count).
  The imprecision originates from Misaligned
  {/home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:148}
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:163: 
  pointer comparison. assert \pointer_comparable((void *)temp, (void *)0);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:164: 
  out of bounds read. assert \valid_read(&temp->v);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:169: 
  accessing uninitialized left-value. assert \initialized(low + v);
[eva] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:32: 
  Assigning imprecise value to tmp.
  The imprecision originates from Misaligned
[eva] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:32: 
  Assigning imprecise value to \result<min>.
  The imprecision originates from Misaligned
[eva] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:169: 
  Assigning imprecise value to *(low + v)
  (pointing to __malloc_can_fail_malloc_l11_3 with offsets {32; 64}).
  The imprecision originates from Misaligned
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:175: 
  accessing uninitialized left-value. assert \initialized(parent + v);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:175: 
  accessing uninitialized left-value. assert \initialized(des + v);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:181: 
  accessing uninitialized left-value. assert \initialized(low + v);
[eva] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:181: 
  Assigning imprecise value to *(low + v)
  (pointing to __malloc_can_fail_malloc_l11_3 with offsets {32; 64}).
  The imprecision originates from Misaligned
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:184: 
  out of bounds read. assert \valid_read(&temp->next);
[eva] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:224: 
  Assigning imprecise value to *(ids + j)
  (pointing to __malloc_can_fail_malloc_l11_5 with offsets {0; 32}).
  The imprecision originates from Misaligned
[eva] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:161: 
  Assigning imprecise value to *count (pointing to count).
  The imprecision originates from Misaligned
[eva] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:169: 
  Assigning imprecise value to *(low + v)
  (pointing to __malloc_can_fail_malloc_l11_3 with offsets {32; 64; 96}).
  The imprecision originates from Misaligned
[eva] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:181: 
  Assigning imprecise value to *(low + v)
  (pointing to __malloc_can_fail_malloc_l11_3 with offsets {32; 64; 96}).
  The imprecision originates from Misaligned
[eva] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:224: 
  Assigning imprecise value to *(ids + j)
  (pointing to __malloc_can_fail_malloc_l11_5 with offsets {0; 32; 64}).
  The imprecision originates from Misaligned
[eva] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:169: 
  Assigning imprecise value to *(low + v)
  (pointing to __malloc_can_fail_malloc_l11_3 with offsets [32..68719476672],0%32).
  The imprecision originates from Misaligned
[eva] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:181: 
  Assigning imprecise value to *(low + v)
  (pointing to __malloc_can_fail_malloc_l11_3 with offsets [32..68719476672],0%32).
  The imprecision originates from Misaligned
[eva] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:224: 
  Assigning imprecise value to *(ids + j)
  (pointing to __malloc_can_fail_malloc_l11_5 with offsets {0; 32; 64; 96}).
  The imprecision originates from Misaligned
[eva] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:224: 
  Assigning imprecise value to *(ids + j)
  (pointing to __malloc_can_fail_malloc_l11_5 with offsets {0; 32; 64; 96; 128}).
  The imprecision originates from Misaligned
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:222: 
  signed overflow. assert subNetworks + 1 ≤ 2147483647;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:154: 
  signed overflow. assert DFSAux_time + 1 ≤ 2147483647;
[eva] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:224: 
  Assigning imprecise value to *(ids + j)
  (pointing to __malloc_can_fail_malloc_l11_5 with offsets [0..68719476704],0%32).
  The imprecision originates from Misaligned
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:225: 
  signed overflow. assert j + 1 ≤ 2147483647;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:231: 
  accessing uninitialized left-value. assert \initialized(ap + i);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:231: 
  out of bounds read. assert \valid_read(ap + i);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:232: 
  out of bounds write. assert \valid(aps + k);
[eva] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:230: 
  starting to merge loop iterations
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:233: 
  signed overflow. assert k + 1 ≤ 2147483647;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:234: 
  signed overflow. assert articulationPoints + 1 ≤ 2147483647;
[eva] using specification for function printf_va_4
[eva:recursion] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:134: 
  detected recursive call of function mergeSort.
[eva] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:134: User Error: 
  Recursive call to mergeSort without assigns clause.
  Generating probably incomplete assigns to interpret the call. Try to increase
  the -eva-unroll-recursive-calls parameter or write a correct specification
  for function mergeSort.
[kernel:annot:missing-spec] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:129: 
  Neither code nor specification for function mergeSort, generating default assigns from the prototype
[eva] using specification for function mergeSort
[eva:recursion] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:135: 
  detected recursive call of function mergeSort.
[eva] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:135: 
  Using specification of function mergeSort for recursive calls.
  Analysis of function mergeSort is thus incomplete and its soundness
  relies on the written specification.
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:108: 
  accessing uninitialized left-value. assert \initialized(a + l1);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:108: 
  accessing uninitialized left-value. assert \initialized(a + l2);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:108: 
  out of bounds read. assert \valid_read(a + l1);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:108: 
  out of bounds read. assert \valid_read(a + l2);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:109: 
  out of bounds write. assert \valid(b + i);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:109: 
  out of bounds read. assert \valid_read(a + tmp);
                      (tmp from l1++)
[eva] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:109: 
  Assigning imprecise value to *(b + i)
  (pointing to __malloc_can_fail_malloc_l11_6 with offsets {0}).
  The imprecision originates from Misaligned
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:111: 
  out of bounds write. assert \valid(b + i);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:111: 
  accessing uninitialized left-value.
  assert \initialized(a + tmp_0);
  (tmp_0 from l2++)
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:111: 
  out of bounds read. assert \valid_read(a + tmp_0);
                      (tmp_0 from l2++)
[eva] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:111: 
  Assigning imprecise value to *(b + i)
  (pointing to __malloc_can_fail_malloc_l11_6 with offsets {0}).
  The imprecision originates from Misaligned
[eva] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:107: 
  starting to merge loop iterations
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:109: 
  accessing uninitialized left-value.
  assert \initialized(a + tmp);
  (tmp from l1++)
[eva] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:109: 
  Assigning imprecise value to *(b + i)
  (pointing to __malloc_can_fail_malloc_l11_6 with offsets {0; 32}).
  The imprecision originates from Misaligned
[eva] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:111: 
  Assigning imprecise value to *(b + i)
  (pointing to __malloc_can_fail_malloc_l11_6 with offsets {0; 32}).
  The imprecision originates from Misaligned
[eva] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:109: 
  Assigning imprecise value to *(b + i)
  (pointing to __malloc_can_fail_malloc_l11_6 with offsets {0; 32; 64}).
  The imprecision originates from Misaligned
[eva] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:111: 
  Assigning imprecise value to *(b + i)
  (pointing to __malloc_can_fail_malloc_l11_6 with offsets {0; 32; 64}).
  The imprecision originates from Misaligned
[eva] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:109: 
  Assigning imprecise value to *(b + i)
  (pointing to __malloc_can_fail_malloc_l11_6 with offsets {0; 32; 64; 96}).
  The imprecision originates from Misaligned
[eva] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:111: 
  Assigning imprecise value to *(b + i)
  (pointing to __malloc_can_fail_malloc_l11_6 with offsets {0; 32; 64; 96}).
  The imprecision originates from Misaligned
[eva] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:109: 
  Assigning imprecise value to *(b + i)
  (pointing to __malloc_can_fail_malloc_l11_6 with offsets {0; 32; 64; 96; 128}).
  The imprecision originates from Misaligned
[eva] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:111: 
  Assigning imprecise value to *(b + i)
  (pointing to __malloc_can_fail_malloc_l11_6 with offsets {0; 32; 64; 96; 128}).
  The imprecision originates from Misaligned
[eva] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:109: 
  Assigning imprecise value to *(b + i)
  (pointing to __malloc_can_fail_malloc_l11_6 with offsets [0..68719476704],0%32).
  The imprecision originates from Misaligned
[eva] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:111: 
  Assigning imprecise value to *(b + i)
  (pointing to __malloc_can_fail_malloc_l11_6 with offsets [0..68719476704],0%32).
  The imprecision originates from Misaligned
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:107: 
  signed overflow. assert i + 1 ≤ 2147483647;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:115: 
  signed overflow. assert i + 1 ≤ 2147483647;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:115: 
  out of bounds write. assert \valid(b + tmp_1);
                       (tmp_1 from i++)
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:115: 
  accessing uninitialized left-value.
  assert \initialized(a + tmp_2);
  (tmp_2 from l1++)
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:115: 
  out of bounds read. assert \valid_read(a + tmp_2);
                      (tmp_2 from l1++)
[eva] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:115: 
  Assigning imprecise value to *(b + tmp_1)
  (pointing to __malloc_can_fail_malloc_l11_6 with offsets [0..68719476704],0%32).
  The imprecision originates from Misaligned
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:118: 
  signed overflow. assert i + 1 ≤ 2147483647;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:118: 
  out of bounds write. assert \valid(b + tmp_3);
                       (tmp_3 from i++)
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:118: 
  accessing uninitialized left-value.
  assert \initialized(a + tmp_4);
  (tmp_4 from l2++)
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:118: 
  out of bounds read. assert \valid_read(a + tmp_4);
                      (tmp_4 from l2++)
[eva] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:118: 
  Assigning imprecise value to *(b + tmp_3)
  (pointing to __malloc_can_fail_malloc_l11_6 with offsets [0..68719476704],0%32).
  The imprecision originates from Misaligned
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:121: 
  out of bounds write. assert \valid(a + i);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:121: 
  accessing uninitialized left-value. assert \initialized(b + i);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:121: 
  out of bounds read. assert \valid_read(b + i);
[eva] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:121: 
  Assigning imprecise value to *(a + i)
  (pointing to __malloc_can_fail_malloc_l11_5 with offsets {0}).
  The imprecision originates from Misaligned
[eva] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:120: 
  starting to merge loop iterations
[eva] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:121: 
  Assigning imprecise value to *(a + i)
  (pointing to __malloc_can_fail_malloc_l11_5 with offsets {0; 32}).
  The imprecision originates from Misaligned
[eva] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:121: 
  Assigning imprecise value to *(a + i)
  (pointing to __malloc_can_fail_malloc_l11_5 with offsets {0; 32; 64}).
  The imprecision originates from Misaligned
[eva] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:121: 
  Assigning imprecise value to *(a + i)
  (pointing to __malloc_can_fail_malloc_l11_5 with offsets [0..68719476672],0%32).
  The imprecision originates from Misaligned
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:243: 
  accessing uninitialized left-value. assert \initialized(idsSorted + i);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:243: 
  out of bounds read. assert \valid_read(idsSorted + i);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:244: 
  out of bounds read. assert \valid_read(idsSorted + i);
[eva] using specification for function printf_va_5
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:245: 
  out of bounds read. assert \valid_read(idsSorted + i);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:246: 
  out of bounds read. assert \valid_read(idsSorted + i);
[eva] using specification for function printf_va_6
[eva] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:242: 
  starting to merge loop iterations
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:244: 
  accessing uninitialized left-value. assert \initialized(idsSorted + i);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:245: 
  accessing uninitialized left-value. assert \initialized(idsSorted + i);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:246: 
  accessing uninitialized left-value. assert \initialized(idsSorted + i);
[eva] using specification for function printf_va_7
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:252: 
  accessing uninitialized left-value. assert \initialized(aps + i);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:252: 
  out of bounds read. assert \valid_read(aps + i);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:253: 
  out of bounds read. assert \valid_read(aps + i);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:253: 
  out of bounds write. assert \valid(G->adj + *(aps + i));
[eva] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:251: 
  starting to merge loop iterations
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:253: 
  accessing uninitialized left-value. assert \initialized(aps + i);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:258: 
  out of bounds write. assert \valid(parent + i);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:259: 
  out of bounds write. assert \valid(visited + i);
[eva] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:257: 
  starting to merge loop iterations
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:264: 
  accessing uninitialized left-value. assert \initialized(visited + i);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:264: 
  out of bounds read. assert \valid_read(visited + i);
[eva] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:169: 
  Assigning imprecise value to *(low + v)
  (pointing to __malloc_can_fail_malloc_l11_3 with offsets {32}).
  The imprecision originates from Misaligned
[eva] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:181: 
  Assigning imprecise value to *(low + v)
  (pointing to __malloc_can_fail_malloc_l11_3 with offsets {32}).
  The imprecision originates from Misaligned
[eva] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:267: 
  Assigning imprecise value to biggestSub.
  The imprecision originates from Misaligned
[eva] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:263: 
  starting to merge loop iterations
[eva] using specification for function printf_va_8
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:275: 
  accessing uninitialized left-value. assert \initialized(G->adj + i);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:275: 
  out of bounds read. assert \valid_read(G->adj + i);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:275: 
  function free: precondition 'freeable' got status unknown.
[eva] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:274: 
  starting to merge loop iterations
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:275: 
  accessing left-value that contains escaping addresses.
  assert ¬\dangling(&G->adj);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:275: 
  accessing left-value that contains escaping addresses.
  assert ¬\dangling(G->adj + i);
[eva] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al041/proj.c:298: 
  freeing automatic bases: {__malloc_DFS_l194, __malloc_DFS_l195,
                            __malloc_DFS_l196}
[eva] done for function main
[scope:rm_asserts] removing 20 assertion(s)
[eva] ====== VALUES COMPUTED ======
[eva:final-states] Values at end of function createEdge:
  e ∈ [--..--]
[eva:final-states] Values at end of function merge:
  l1 ∈ [1..2147483647]
  l2 ∈ [2..2147483647]
  i ∈ [2..2147483647]
  __malloc_can_fail_malloc_l11_5[0..8589934591] ∈
                                {{ garbled mix of &{__malloc_can_fail_malloc_l11_0;
                                                    __malloc_w_can_fail_malloc_l11_1;
                                                    __malloc_w_can_fail_malloc_l11_2}
                                 (origin: Misaligned) }} or UNINITIALIZED
                                [8589934592..18446744073709551611] ∈
                                UNINITIALIZED
  __malloc_can_fail_malloc_l11_6[0..8589934591] ∈
                                {{ garbled mix of &{__malloc_can_fail_malloc_l11_0;
                                                    __malloc_w_can_fail_malloc_l11_1;
                                                    __malloc_w_can_fail_malloc_l11_2}
                                 (origin: Misaligned) }} or UNINITIALIZED
                                [8589934592..18446744073709551611] ∈
                                UNINITIALIZED
[eva:final-states] Values at end of function min:
  
[eva:final-states] Values at end of function can_fail_malloc:
  __fc_heap_status ∈ [--..--]
  __fc_random_counter ∈ [--..--]
  fail ∈ [0. .. 1.]
  __retres ∈
          {{ NULL ; (void *)&__malloc_can_fail_malloc_l11 ;
             (void *)&__malloc_can_fail_malloc_l11_0 ;
             (void *)&__malloc_w_can_fail_malloc_l11_1 ;
             (void *)&__malloc_w_can_fail_malloc_l11_2 ;
             (void *)&__malloc_can_fail_malloc_l11_3 ;
             (void *)&__malloc_can_fail_malloc_l11_4 ;
             (void *)&__malloc_can_fail_malloc_l11_5 ;
             (void *)&__malloc_can_fail_malloc_l11_6 ;
             (void *)&__malloc_can_fail_malloc_l11_7 }}
[eva:final-states] Values at end of function initializeGraph:
  __fc_heap_status ∈ [--..--]
  __fc_random_counter ∈ [--..--]
  v ∈ [0..2147483647]
  G ∈ {{ (struct graph *)&__malloc_can_fail_malloc_l11 }}
  __malloc_can_fail_malloc_l11[0..3] ∈ [--..--]
                              [4..7] ∈ {0}
                              [bits 64 to 127] ∈
                              {{ NULL ;
                                 (? *)&__malloc_can_fail_malloc_l11_0 }}
  __malloc_can_fail_malloc_l11_0[0..17179869175] ∈ {0} or UNINITIALIZED
                                [17179869176..18446744073709551607] ∈
                                UNINITIALIZED
[eva:final-states] Values at end of function insertBegin:
  __fc_heap_status ∈ [--..--]
  __fc_random_counter ∈ [--..--]
  x ∈
   {{ (struct node *)&__malloc_w_can_fail_malloc_l11_1 ;
      (struct node *)&__malloc_w_can_fail_malloc_l11_2 }}
  __malloc_w_can_fail_malloc_l11_1[0..3] ∈ [--..--] or UNINITIALIZED
                                  [4..7] ∈ UNINITIALIZED
                                  [bits 64 to 127] ∈
                                  {{ NULL ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_1 ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_2 }} or UNINITIALIZED
  __malloc_w_can_fail_malloc_l11_2[bits 0 to 31] ∈
                                  [0..2147483647] or UNINITIALIZED
                                  [4..7] ∈ UNINITIALIZED
                                  [bits 64 to 127] ∈
                                  {{ NULL ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_1 ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_2 }} or UNINITIALIZED
[eva:final-states] Values at end of function insertEdge:
  __fc_heap_status ∈ [--..--]
  __fc_random_counter ∈ [--..--]
  v ∈ [0..2147483647]
  w ∈ [0..2147483647]
  __malloc_can_fail_malloc_l11[0..3] ∈ [--..--]
                              [bits 32 to 63] ∈ [1..2147483647]
                              [bits 64 to 127] ∈
                              {{ (? *)&__malloc_can_fail_malloc_l11_0 }}
  __malloc_can_fail_malloc_l11_0[bits 0 to 137438953407]# ∈
                                {{ NULL ;
                                   (? *)&__malloc_w_can_fail_malloc_l11_1 ;
                                   (? *)&__malloc_w_can_fail_malloc_l11_2 }} or UNINITIALIZED repeated %64 
                                [bits 137438953408 to 137438953471] ∈
                                {{ (? *)&__malloc_w_can_fail_malloc_l11_1 ;
                                   (? *)&__malloc_w_can_fail_malloc_l11_2 }} or UNINITIALIZED
                                [17179869184..18446744073709551607] ∈
                                UNINITIALIZED
  __malloc_w_can_fail_malloc_l11_1[0..3] ∈ [--..--] or UNINITIALIZED
                                  [4..7] ∈ UNINITIALIZED
                                  [bits 64 to 127] ∈
                                  {{ NULL ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_1 ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_2 }} or UNINITIALIZED
  __malloc_w_can_fail_malloc_l11_2[bits 0 to 31] ∈
                                  [0..2147483647] or UNINITIALIZED
                                  [4..7] ∈ UNINITIALIZED
                                  [bits 64 to 127] ∈
                                  {{ NULL ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_1 ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_2 }} or UNINITIALIZED
[eva:final-states] Values at end of function DFSAux:
  temp ∈ {0}
  children ∈ [0..2147483647]
  ID ∈
    {{ garbled mix of &{__malloc_can_fail_malloc_l11_0;
                        __malloc_w_can_fail_malloc_l11_1;
                        __malloc_w_can_fail_malloc_l11_2}
     (origin: Misaligned) }}
  count ∈
       {{ garbled mix of &{__malloc_can_fail_malloc_l11_0;
                           __malloc_w_can_fail_malloc_l11_1;
                           __malloc_w_can_fail_malloc_l11_2}
        (origin: Misaligned) }}
  DFSAux_time ∈ [1..2147483647]
  __malloc_can_fail_malloc_l11[0..15] ∈
                              {{ garbled mix of &{__malloc_can_fail_malloc_l11_0;
                                                  __malloc_w_can_fail_malloc_l11_1;
                                                  __malloc_w_can_fail_malloc_l11_2}
                               (origin: Misaligned) }}
  __malloc_w_can_fail_malloc_l11_1[0..7] ∈ [--..--] or UNINITIALIZED
                                  [bits 64 to 127] ∈
                                  {{ NULL + [--..--] ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_1 ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_2 }} or UNINITIALIZED
  __malloc_w_can_fail_malloc_l11_2[0..7] ∈ [--..--] or UNINITIALIZED
                                  [bits 64 to 127] ∈
                                  {{ NULL + [--..--] ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_1 ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_2 }} or UNINITIALIZED
  __malloc_DFS_l194[0] ∈
                   {{ garbled mix of &{__malloc_can_fail_malloc_l11_0;
                                       __malloc_w_can_fail_malloc_l11_1;
                                       __malloc_w_can_fail_malloc_l11_2}
                    (origin: Misaligned) }} or UNINITIALIZED
                   [1..2147483646] ∈ {0; 1} or UNINITIALIZED
                   [2147483647..4611686018427387902] ∈ UNINITIALIZED
  __malloc_DFS_l195[0] ∈
                   {{ garbled mix of &{__malloc_can_fail_malloc_l11_0;
                                       __malloc_w_can_fail_malloc_l11_1;
                                       __malloc_w_can_fail_malloc_l11_2}
                    (origin: Misaligned) }} or UNINITIALIZED
                   [1..2147483646] ∈ {0; 1} or UNINITIALIZED
                   [2147483647..4611686018427387902] ∈ UNINITIALIZED
  __malloc_DFS_l196[0] ∈
                   {{ garbled mix of &{__malloc_can_fail_malloc_l11_0;
                                       __malloc_w_can_fail_malloc_l11_1;
                                       __malloc_w_can_fail_malloc_l11_2}
                    (origin: Misaligned) }} or UNINITIALIZED
                   [1..2147483646] ∈ [1..2147483647] or UNINITIALIZED
                   [2147483647..4611686018427387902] ∈ UNINITIALIZED
  __malloc_can_fail_malloc_l11_3[0..8589934587] ∈
                                {{ garbled mix of &{__malloc_can_fail_malloc_l11_0;
                                                    __malloc_w_can_fail_malloc_l11_1;
                                                    __malloc_w_can_fail_malloc_l11_2}
                                 (origin: Misaligned) }} or UNINITIALIZED
                                [8589934588..18446744073709551611] ∈
                                UNINITIALIZED
  __malloc_can_fail_malloc_l11_4[0..3] ∈
                                {{ garbled mix of &{__malloc_can_fail_malloc_l11_0;
                                                    __malloc_w_can_fail_malloc_l11_1;
                                                    __malloc_w_can_fail_malloc_l11_2}
                                 (origin: Misaligned) }} or UNINITIALIZED
                                [4..18446744073709551611] ∈
                                [--..--] or UNINITIALIZED
[eva:final-states] Values at end of function DFS:
  __fc_heap_status ∈ [--..--]
  __fc_random_counter ∈ [--..--]
  G ∈ ESCAPINGADDR
  visited ∈ ESCAPINGADDR
  __lengthof_visited ∈ [--..--]
  ap ∈ ESCAPINGADDR
  __lengthof_ap ∈ [--..--]
  des ∈ ESCAPINGADDR
  __lengthof_des ∈ [--..--]
  ID ∈
    {{ garbled mix of &{__malloc_can_fail_malloc_l11_0;
                        __malloc_w_can_fail_malloc_l11_1;
                        __malloc_w_can_fail_malloc_l11_2}
     (origin: Misaligned) }} or ESCAPINGADDR
  j ∈ [0..2147483647]
  k ∈ [0..2147483647]
  i ∈ [0..2147483647]
  count ∈ {0}
  biggestSub ∈
            {{ garbled mix of &{__malloc_can_fail_malloc_l11_0;
                                __malloc_w_can_fail_malloc_l11_1;
                                __malloc_w_can_fail_malloc_l11_2}
             (origin: Misaligned) }} or ESCAPINGADDR
  articulationPoints ∈ [0..2147483647]
  subNetworks ∈ [0..2147483647]
  low ∈ {{ NULL ; (int *)&__malloc_can_fail_malloc_l11_3 }} or ESCAPINGADDR
  parent ∈
        {{ NULL ; (int *)&__malloc_can_fail_malloc_l11_4 }} or ESCAPINGADDR
  ids ∈ {{ NULL ; (int *)&__malloc_can_fail_malloc_l11_5 }} or ESCAPINGADDR
  idsSorted ∈
           {{ NULL ; (int *)&__malloc_can_fail_malloc_l11_6 }} or ESCAPINGADDR
  aps ∈ {{ NULL ; (int *)&__malloc_can_fail_malloc_l11_7 }} or ESCAPINGADDR
  G ∈ ESCAPINGADDR
  DFSAux_time ∈ [0..2147483647]
  S___fc_stdout[0].__fc_FILE_id ∈ [--..--]
               [0].__fc_FILE_data ∈
               {{ garbled mix of &{__malloc_can_fail_malloc_l11_0;
                                   __malloc_w_can_fail_malloc_l11_1;
                                   __malloc_w_can_fail_malloc_l11_2}
                (origin: Misaligned) }} or ESCAPINGADDR
               [1] ∈ [--..--]
  __malloc_can_fail_malloc_l11_0[bits 0 to 137438953471]# ∈
                                {{ NULL ;
                                   (? *)&__malloc_w_can_fail_malloc_l11_1 ;
                                   (? *)&__malloc_w_can_fail_malloc_l11_2 }} or UNINITIALIZED or ESCAPINGADDR repeated %64 
                                [17179869184..18446744073709551607] ∈
                                {0} or UNINITIALIZED
  __malloc_w_can_fail_malloc_l11_1[0..7] ∈ [--..--] or UNINITIALIZED
                                  [bits 64 to 127] ∈
                                  {{ NULL + [--..--] ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_1 ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_2 }} or UNINITIALIZED or ESCAPINGADDR
  __malloc_w_can_fail_malloc_l11_2[0..7] ∈ [--..--] or UNINITIALIZED
                                  [bits 64 to 127] ∈
                                  {{ NULL + [--..--] ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_1 ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_2 }} or UNINITIALIZED or ESCAPINGADDR
  __malloc_can_fail_malloc_l11_3[0..8589934587] ∈
                                {{ garbled mix of &{__malloc_can_fail_malloc_l11_0;
                                                    __malloc_w_can_fail_malloc_l11_1;
                                                    __malloc_w_can_fail_malloc_l11_2}
                                 (origin: Misaligned) }} or UNINITIALIZED or ESCAPINGADDR
                                [8589934588..18446744073709551611] ∈
                                UNINITIALIZED
  __malloc_can_fail_malloc_l11_4[0..3] ∈
                                {{ garbled mix of &{__malloc_can_fail_malloc_l11_0;
                                                    __malloc_w_can_fail_malloc_l11_1;
                                                    __malloc_w_can_fail_malloc_l11_2}
                                 (origin: Misaligned) }} or UNINITIALIZED or ESCAPINGADDR
                                [4..18446744073709551611] ∈
                                [--..--] or UNINITIALIZED
  __malloc_can_fail_malloc_l11_5[0..8589934591] ∈
                                {{ garbled mix of &{__malloc_can_fail_malloc_l11_0;
                                                    __malloc_w_can_fail_malloc_l11_1;
                                                    __malloc_w_can_fail_malloc_l11_2}
                                 (origin: Misaligned) }} or UNINITIALIZED or ESCAPINGADDR
                                [8589934592..18446744073709551611] ∈
                                UNINITIALIZED
  __malloc_can_fail_malloc_l11_6[0..8589934591] ∈
                                {{ garbled mix of &{__malloc_can_fail_malloc_l11_0;
                                                    __malloc_w_can_fail_malloc_l11_1;
                                                    __malloc_w_can_fail_malloc_l11_2}
                                 (origin: Misaligned) }} or UNINITIALIZED or ESCAPINGADDR
                                [8589934592..18446744073709551611] ∈
                                UNINITIALIZED
  __malloc_can_fail_malloc_l11_7[bits 0 to 68719476735]# ∈
                                [0..2147483646] or UNINITIALIZED repeated %32 
                                [8589934592..18446744073709551611] ∈
                                UNINITIALIZED
[eva:final-states] Values at end of function main:
  __fc_heap_status ∈ [--..--]
  __fc_random_counter ∈ [--..--]
  N ∈ [-2147483648..2147483646]
  M ∈ [--..--]
  G ∈ ESCAPINGADDR
  v ∈ [--..--] or UNINITIALIZED
  w ∈ [--..--] or UNINITIALIZED
  i ∈ [0..2147483647]
  DFSAux_time ∈ [0..2147483647]
  __retres ∈ {0}
  S___fc_stdin[0..1] ∈ [--..--]
  S___fc_stdout[0].__fc_FILE_id ∈ [--..--]
               [0].__fc_FILE_data ∈
               {{ garbled mix of &{__malloc_can_fail_malloc_l11_0;
                                   __malloc_w_can_fail_malloc_l11_1;
                                   __malloc_w_can_fail_malloc_l11_2}
                (origin: Misaligned) }} or ESCAPINGADDR
               [1] ∈ [--..--]
  __malloc_can_fail_malloc_l11_0[bits 0 to 137438953471]# ∈
                                {{ NULL ;
                                   (? *)&__malloc_w_can_fail_malloc_l11_1 ;
                                   (? *)&__malloc_w_can_fail_malloc_l11_2 }} or UNINITIALIZED or ESCAPINGADDR repeated %64 
                                [17179869184..18446744073709551607] ∈
                                {0} or UNINITIALIZED
  __malloc_w_can_fail_malloc_l11_1[0..7] ∈ [--..--] or UNINITIALIZED
                                  [bits 64 to 127] ∈
                                  {{ NULL + [--..--] ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_1 ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_2 }} or UNINITIALIZED or ESCAPINGADDR
  __malloc_w_can_fail_malloc_l11_2[0..7] ∈ [--..--] or UNINITIALIZED
                                  [bits 64 to 127] ∈
                                  {{ NULL + [--..--] ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_1 ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_2 }} or UNINITIALIZED or ESCAPINGADDR
  __malloc_can_fail_malloc_l11_3[0..8589934587] ∈
                                {{ garbled mix of &{__malloc_can_fail_malloc_l11_0;
                                                    __malloc_w_can_fail_malloc_l11_1;
                                                    __malloc_w_can_fail_malloc_l11_2}
                                 (origin: Misaligned) }} or UNINITIALIZED or ESCAPINGADDR
                                [8589934588..18446744073709551611] ∈
                                UNINITIALIZED
  __malloc_can_fail_malloc_l11_4[0..3] ∈
                                {{ garbled mix of &{__malloc_can_fail_malloc_l11_0;
                                                    __malloc_w_can_fail_malloc_l11_1;
                                                    __malloc_w_can_fail_malloc_l11_2}
                                 (origin: Misaligned) }} or UNINITIALIZED or ESCAPINGADDR
                                [4..18446744073709551611] ∈
                                [--..--] or UNINITIALIZED
  __malloc_can_fail_malloc_l11_5[0..8589934591] ∈
                                {{ garbled mix of &{__malloc_can_fail_malloc_l11_0;
                                                    __malloc_w_can_fail_malloc_l11_1;
                                                    __malloc_w_can_fail_malloc_l11_2}
                                 (origin: Misaligned) }} or UNINITIALIZED or ESCAPINGADDR
                                [8589934592..18446744073709551611] ∈
                                UNINITIALIZED
  __malloc_can_fail_malloc_l11_6[0..8589934591] ∈
                                {{ garbled mix of &{__malloc_can_fail_malloc_l11_0;
                                                    __malloc_w_can_fail_malloc_l11_1;
                                                    __malloc_w_can_fail_malloc_l11_2}
                                 (origin: Misaligned) }} or UNINITIALIZED or ESCAPINGADDR
                                [8589934592..18446744073709551611] ∈
                                UNINITIALIZED
  __malloc_can_fail_malloc_l11_7[bits 0 to 68719476735]# ∈
                                [0..2147483646] or UNINITIALIZED repeated %32 
                                [8589934592..18446744073709551611] ∈
                                UNINITIALIZED
[eva:final-states] Values at end of function mergeSort:
  mid ∈ [0..1073741823] or UNINITIALIZED
  __malloc_can_fail_malloc_l11_5[0..8589934591] ∈
                                {{ garbled mix of &{__malloc_can_fail_malloc_l11_0;
                                                    __malloc_w_can_fail_malloc_l11_1;
                                                    __malloc_w_can_fail_malloc_l11_2}
                                 (origin: Misaligned) }} or UNINITIALIZED
                                [8589934592..18446744073709551611] ∈
                                UNINITIALIZED
  __malloc_can_fail_malloc_l11_6[0..8589934591] ∈
                                {{ garbled mix of &{__malloc_can_fail_malloc_l11_0;
                                                    __malloc_w_can_fail_malloc_l11_1;
                                                    __malloc_w_can_fail_malloc_l11_2}
                                 (origin: Misaligned) }} or UNINITIALIZED
                                [8589934592..18446744073709551611] ∈
                                UNINITIALIZED
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  11 functions analyzed (out of 14): 78% coverage.
  In these functions, 256 statements reached (out of 256): 100% coverage.
  ----------------------------------------------------------------------------
  Some errors and warnings have been raised during the analysis:
    by the Eva analyzer:      2 errors    0 warnings
    by the Frama-C kernel:    0 errors    0 warnings
  ----------------------------------------------------------------------------
  116 alarms generated by the analysis:
      61 invalid memory accesses
      38 accesses to uninitialized left-values
      13 integer overflows
       2 escaping addresses
       2 others
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     3 unknown     0 invalid      3 total
    Preconditions    18 valid     1 unknown     0 invalid     19 total
  81% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[eva] User Error: Deferred error message was emitted during execution. See above messages for more information.
[kernel] Plug-in eva aborted: invalid user input.
