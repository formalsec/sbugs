[report] Monitoring events
[report] Loading '/home/fmarques/sbugs/projects/configs/frama-c_report_rules.json'
[kernel] Parsing /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c (with preprocessing)
[kernel:parser:decimal-float] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:10: 
  Floating-point constant 0.10 is not represented exactly. Will use 0x1.999999999999ap-4.
[kernel:parser:decimal-float] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:17: 
  Floating-point constant 0.10 is not represented exactly. Will use 0x1.999999999999ap-4.
[kernel:parser:decimal-float] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:24: 
  Floating-point constant 0.10 is not represented exactly. Will use 0x1.999999999999ap-4.
[eva] Analyzing a complete application starting at main
[eva] Computing initial state
[eva] Initial state computed
[eva:initial-state] Values of globals at initialization
  
[eva] using specification for function scanf_va_3
[eva] using specification for function time
[eva] using specification for function srand
[eva] using specification for function rand
[eva] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:11: 
  allocating variable __malloc_can_fail_malloc_l11
[eva] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:11: 
  allocating variable __malloc_can_fail_malloc_l11_0
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:61: 
  out of bounds read. assert \valid_read(router + (int)(i - 1));
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:61: 
  out of bounds write. assert \valid(router + (int)(i - 1));
[eva] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:60: 
  starting to merge loop iterations
[kernel] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:61: 
  too many locations to update in array. Approximating.
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:60: 
  signed overflow. assert i + 1 ≤ 2147483647;
[eva] using specification for function scanf_va_1
[eva] using specification for function scanf_va_2
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:67: 
  signed overflow. assert -2147483648 ≤ l1 - 1;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:67: 
  out of bounds read. assert \valid_read(router + (int)(l1 - 1));
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:43: 
  accessing uninitialized left-value. assert \initialized(&v.head);
[eva] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:11: 
  allocating variable __malloc_can_fail_malloc_l11_1
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:16: 
  out of bounds write. assert \valid(&new_head->id);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:67: 
  out of bounds write. assert \valid(router + (int)(l1 - 1));
[kernel] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:67: 
  too many locations to update in array. Approximating.
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:68: 
  signed overflow. assert -2147483648 ≤ l2 - 1;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:68: 
  out of bounds read. assert \valid_read(router + (int)(l2 - 1));
[eva] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:68: 
  Reading left-value *(router + (l2 - 1)).
  The location is {{ __malloc_can_fail_malloc_l11_0 -> [0..549755813376],0%256 }}.
  It contains a garbled mix of {__malloc_can_fail_malloc_l11_1} because of
  Misaligned
  {/home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:67}.
[eva] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:11: 
  allocating variable __malloc_can_fail_malloc_l11_2
[eva] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:17: 
  Assigning imprecise value to new_head->next
  (pointing to __malloc_can_fail_malloc_l11_2 with offsets {64}).
  The imprecision originates from Misaligned
  {/home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:67}
[eva] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:44: 
  Assigning imprecise value to \result<addAdj>.
  The imprecision originates from Misaligned
  {/home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:67}
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:68: 
  out of bounds write. assert \valid(router + (int)(l2 - 1));
[eva] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:68: 
  Assigning imprecise value to *(router + (l2 - 1))
  (pointing to __malloc_can_fail_malloc_l11_0 with offsets [0..549755813376],0%256).
  The imprecision originates from Misaligned
  {/home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:67}
[kernel] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:68: 
  too many locations to update in array. Approximating.
[eva] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:65: 
  starting to merge loop iterations
[eva] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:67: 
  Reading left-value *(router + (l1 - 1)).
  The location is {{ __malloc_can_fail_malloc_l11_0 -> [0..549755813376],0%256 }}.
  It contains a garbled mix of
  {__malloc_can_fail_malloc_l11_1; __malloc_can_fail_malloc_l11_2} because of
  Misaligned.
[eva] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:17: 
  Assigning imprecise value to new_head->next
  (pointing to __malloc_w_can_fail_malloc_l11_1 with offsets {64}).
  The imprecision originates from Misaligned
[eva] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:44: 
  Assigning imprecise value to \result<addAdj>.
  The imprecision originates from Misaligned
[eva] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:67: 
  Assigning imprecise value to *(router + (l1 - 1))
  (pointing to __malloc_can_fail_malloc_l11_0 with offsets [0..549755813376],0%256).
  The imprecision originates from Misaligned
[eva] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:68: 
  Reading left-value *(router + (l2 - 1)).
  The location is {{ __malloc_can_fail_malloc_l11_0 -> [0..549755813376],0%256 }}.
  It contains a garbled mix of
  {__malloc_w_can_fail_malloc_l11_1; __malloc_can_fail_malloc_l11_2} because of
  Misaligned.
[eva] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:17: 
  Assigning imprecise value to new_head->next
  (pointing to __malloc_w_can_fail_malloc_l11_2 with offsets {64}).
  The imprecision originates from Misaligned
[eva] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:68: 
  Assigning imprecise value to *(router + (l2 - 1))
  (pointing to __malloc_can_fail_malloc_l11_0 with offsets [0..549755813376],0%256).
  The imprecision originates from Misaligned
[eva] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:67: 
  Reading left-value *(router + (l1 - 1)).
  The location is {{ __malloc_can_fail_malloc_l11_0 -> [0..549755813376],0%256 }}.
  It contains a garbled mix of
  {__malloc_w_can_fail_malloc_l11_1; __malloc_w_can_fail_malloc_l11_2}
  because of Misaligned.
[eva] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:68: 
  Reading left-value *(router + (l2 - 1)).
  The location is {{ __malloc_can_fail_malloc_l11_0 -> [0..549755813376],0%256 }}.
  It contains a garbled mix of
  {__malloc_w_can_fail_malloc_l11_1; __malloc_w_can_fail_malloc_l11_2}
  because of Misaligned.
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:65: 
  signed overflow. assert i + 1 ≤ 2147483647;
[eva] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:11: 
  allocating variable __malloc_can_fail_malloc_l11_3
[eva] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:11: 
  allocating variable __malloc_can_fail_malloc_l11_4
[eva] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:11: 
  allocating variable __malloc_can_fail_malloc_l11_5
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:80: 
  signed overflow. assert -2147483648 ≤ id - 1;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:80: 
  out of bounds write. assert \valid(&(router + (int)(id - 1))->visited);
[kernel] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:80: 
  more than 200(2147483646) locations to update in array. Approximating.
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:81: 
  out of bounds write. assert \valid(&(router + (int)(id - 1))->depth);
[kernel] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:81: 
  more than 200(2147483646) locations to update in array. Approximating.
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:82: 
  out of bounds write. assert \valid(&(router + (int)(id - 1))->low);
[kernel] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:82: 
  more than 200(2147483646) locations to update in array. Approximating.
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:85: 
  accessing uninitialized left-value.
  assert \initialized(&(router + (int)(id - 1))->head);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:85: 
  out of bounds read. assert \valid_read(&(router + (int)(id - 1))->head);
[eva] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:85: 
  Assigning imprecise value to node.
  The imprecision originates from Misaligned
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:86: 
  pointer comparison. assert \pointer_comparable((void *)node, (void *)0);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:87: 
  accessing uninitialized left-value. assert \initialized(&node->id);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:87: 
  out of bounds read. assert \valid_read(&node->id);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:87: 
  signed overflow. assert -2147483648 ≤ node->id - 1;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:87: 
  signed overflow. assert node->id - 1 ≤ 2147483647;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:87: 
  accessing uninitialized left-value.
  assert \initialized(&(router + (int)(node->id - 1))->visited);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:87: 
  out of bounds read.
  assert \valid_read(&(router + (int)(node->id - 1))->visited);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:88: 
  accessing uninitialized left-value. assert \initialized(&node->id);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:88: 
  signed overflow. assert -2147483648 ≤ node->id - 1;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:88: 
  signed overflow. assert node->id - 1 ≤ 2147483647;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:88: 
  out of bounds write. assert \valid(&(router + (int)(node->id - 1))->parent);
[eva:recursion] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:92: 
  detected recursive call of function Tarjan_Aux.
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:92: 
  accessing uninitialized left-value. assert \initialized(&node->id);
[eva] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:92: User Error: 
  Recursive call to Tarjan_Aux without assigns clause.
  Generating probably incomplete assigns to interpret the call. Try to increase
  the -eva-unroll-recursive-calls parameter or write a correct specification
  for function Tarjan_Aux.
[kernel:annot:missing-spec] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:73: 
  Neither code nor specification for function Tarjan_Aux, generating default assigns from the prototype
[eva] using specification for function Tarjan_Aux
[eva] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:92: 
  Assigning imprecise value to cutVertice.
  The imprecision originates from Misaligned
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:95: 
  accessing uninitialized left-value. assert \initialized(&node->id);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:95: 
  accessing uninitialized left-value.
  assert \initialized(&(router + (int)(id - 1))->depth);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:95: 
  out of bounds read. assert \valid_read(&(router + (int)(id - 1))->depth);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:95: 
  signed overflow. assert -2147483648 ≤ node->id - 1;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:95: 
  signed overflow. assert node->id - 1 ≤ 2147483647;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:95: 
  accessing uninitialized left-value.
  assert \initialized(&(router + (int)(node->id - 1))->low);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:95: 
  out of bounds read. assert \valid_read(&(router + (int)(node->id - 1))->low);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:98: 
  accessing uninitialized left-value. assert \initialized(&node->id);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:98: 
  accessing uninitialized left-value.
  assert \initialized(&(router + (int)(id - 1))->low);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:98: 
  out of bounds read. assert \valid_read(&(router + (int)(id - 1))->low);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:98: 
  signed overflow. assert -2147483648 ≤ node->id - 1;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:98: 
  signed overflow. assert node->id - 1 ≤ 2147483647;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:98: 
  accessing uninitialized left-value.
  assert \initialized(&(router + (int)(node->id - 1))->low);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:98: 
  out of bounds read. assert \valid_read(&(router + (int)(node->id - 1))->low);
[eva] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:50: 
  Assigning imprecise value to __retres.
  The imprecision originates from Misaligned
[eva] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:53: 
  Assigning imprecise value to __retres.
  The imprecision originates from Misaligned
[eva] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:49: 
  Assigning imprecise value to \result<minimum>.
  The imprecision originates from Misaligned
[kernel] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:98: 
  more than 200(2147483646) elements to enumerate. Approximating.
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:98: 
  out of bounds write. assert \valid(&(router + (int)(id - 1))->low);
[eva] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:98: 
  Assigning imprecise value to (router + (id - 1))->low
  (pointing to __malloc_can_fail_malloc_l11_0 with offsets [96..549755813216],96%256).
  The imprecision originates from Misaligned
[kernel] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:98: 
  more than 200(2147483646) locations to update in array. Approximating.
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:100: 
  accessing uninitialized left-value. assert \initialized(&node->id);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:100: 
  accessing uninitialized left-value.
  assert \initialized(&(router + (int)(id - 1))->parent);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:100: 
  out of bounds read. assert \valid_read(&(router + (int)(id - 1))->parent);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:101: 
  accessing uninitialized left-value. assert \initialized(&node->id);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:101: 
  accessing uninitialized left-value.
  assert \initialized(&(router + (int)(id - 1))->low);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:101: 
  out of bounds read. assert \valid_read(&(router + (int)(id - 1))->low);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:101: 
  signed overflow. assert -2147483648 ≤ node->id - 1;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:101: 
  signed overflow. assert node->id - 1 ≤ 2147483647;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:101: 
  accessing uninitialized left-value.
  assert \initialized(&(router + (int)(node->id - 1))->depth);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:101: 
  out of bounds read.
  assert \valid_read(&(router + (int)(node->id - 1))->depth);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:101: 
  out of bounds write. assert \valid(&(router + (int)(id - 1))->low);
[eva] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:101: 
  Assigning imprecise value to (router + (id - 1))->low
  (pointing to __malloc_can_fail_malloc_l11_0 with offsets [96..549755813216],96%256).
  The imprecision originates from Misaligned
[kernel] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:101: 
  more than 200(2147483646) locations to update in array. Approximating.
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:103: 
  accessing uninitialized left-value. assert \initialized(&node->next);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:103: 
  out of bounds read. assert \valid_read(&node->next);
[eva] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:103: 
  Assigning imprecise value to node.
  The imprecision originates from Misaligned
[eva] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:86: 
  starting to merge loop iterations
[eva] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:92: 
  Using specification of function Tarjan_Aux for recursive calls.
  Analysis of function Tarjan_Aux is thus incomplete and its soundness
  relies on the written specification.
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:89: 
  signed overflow. assert aux + 1 ≤ 2147483647;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:94: 
  signed overflow. assert n_childs + 1 ≤ 2147483647;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:105: 
  accessing uninitialized left-value.
  assert \initialized(&(router + (int)(id - 1))->parent);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:105: 
  out of bounds read. assert \valid_read(&(router + (int)(id - 1))->parent);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:105: 
  accessing uninitialized left-value.
  assert \initialized(&(router + (int)(id - 1))->parent);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:105: 
  out of bounds read. assert \valid_read(&(router + (int)(id - 1))->parent);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:106: 
  out of bounds write. assert \valid(&(router + (int)(id - 1))->cutVertice);
[kernel] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:106: 
  more than 200(2147483646) locations to update in array. Approximating.
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:107: 
  signed overflow. assert -2147483648 ≤ cutVertice + 1;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:107: 
  signed overflow. assert cutVertice + 1 ≤ 2147483647;
[eva] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:107: 
  Assigning imprecise value to cutVertice.
  The imprecision originates from Misaligned
[eva] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:111: 
  Assigning imprecise value to \result<Tarjan_Aux>.
  The imprecision originates from Misaligned
[kernel] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:80: 
  more than 200(2147483646) elements to enumerate. Approximating.
[kernel] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:81: 
  more than 200(2147483646) elements to enumerate. Approximating.
[kernel] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:85: 
  more than 200(2147483646) elements to enumerate. Approximating.
[kernel] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:100: 
  more than 200(2147483646) elements to enumerate. Approximating.
[kernel] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:106: 
  more than 200(2147483646) elements to enumerate. Approximating.
[eva:locals-escaping] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:128: 
  locals {aux} escaping the scope of Tarjan_Aux through d
[eva] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:128: 
  Assigning imprecise value to cutVertice.
  The imprecision originates from Misaligned
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:131: 
  accessing uninitialized left-value.
  assert \initialized(&(router + (int)(i - 1))->visited);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:131: 
  out of bounds read. assert \valid_read(&(router + (int)(i - 1))->visited);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:132: 
  accessing uninitialized left-value.
  assert \initialized(&(router + (int)(i - 1))->id);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:132: 
  out of bounds read. assert \valid_read(&(router + (int)(i - 1))->id);
[eva] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:132: 
  Assigning imprecise value to v.
  The imprecision originates from Misaligned
[eva] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:11: 
  allocating variable __malloc_can_fail_malloc_l11_6
[eva] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:126: 
  starting to merge loop iterations
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:74: 
  accessing left-value that contains escaping addresses. assert ¬\dangling(d);
[eva] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:78: 
  Assigning imprecise value to head->id
  (pointing to __malloc_can_fail_malloc_l11_4 with offsets {0};
  __malloc_can_fail_malloc_l11_6 with offsets {0}).
  The imprecision originates from Misaligned
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:80: 
  signed overflow. assert id - 1 ≤ 2147483647;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:81: 
  signed overflow. assert -2147483648 ≤ id - 1;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:81: 
  signed overflow. assert id - 1 ≤ 2147483647;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:82: 
  signed overflow. assert -2147483648 ≤ id - 1;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:82: 
  signed overflow. assert id - 1 ≤ 2147483647;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:85: 
  signed overflow. assert -2147483648 ≤ id - 1;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:85: 
  signed overflow. assert id - 1 ≤ 2147483647;
[eva] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:88: 
  Assigning imprecise value to (router + (node->id - 1))->parent
  (pointing to __malloc_can_fail_malloc_l11_0 with offsets [0..147573952589676412640];
   __malloc_w_can_fail_malloc_l11_1 with offsets [0..96];
  __malloc_w_can_fail_malloc_l11_2 with offsets [0..96]).
  The imprecision originates from Misaligned
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:95: 
  signed overflow. assert -2147483648 ≤ id - 1;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:95: 
  signed overflow. assert id - 1 ≤ 2147483647;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:98: 
  signed overflow. assert -2147483648 ≤ id - 1;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:98: 
  signed overflow. assert id - 1 ≤ 2147483647;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:98: 
  signed overflow. assert -2147483648 ≤ id - 1;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:98: 
  signed overflow. assert id - 1 ≤ 2147483647;
[eva] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:98: 
  Assigning imprecise value to (router + (id - 1))->low
  (pointing to __malloc_can_fail_malloc_l11_0 with offsets [0..147573952589676412640];
   __malloc_w_can_fail_malloc_l11_1 with offsets [0..96];
  __malloc_w_can_fail_malloc_l11_2 with offsets [0..96]).
  The imprecision originates from Misaligned
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:100: 
  signed overflow. assert -2147483648 ≤ id - 1;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:100: 
  signed overflow. assert id - 1 ≤ 2147483647;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:101: 
  signed overflow. assert -2147483648 ≤ id - 1;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:101: 
  signed overflow. assert id - 1 ≤ 2147483647;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:101: 
  signed overflow. assert -2147483648 ≤ id - 1;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:101: 
  signed overflow. assert id - 1 ≤ 2147483647;
[eva] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:101: 
  Assigning imprecise value to (router + (id - 1))->low
  (pointing to __malloc_can_fail_malloc_l11_0 with offsets [0..147573952589676412640];
   __malloc_w_can_fail_malloc_l11_1 with offsets [0..96];
  __malloc_w_can_fail_malloc_l11_2 with offsets [0..96]).
  The imprecision originates from Misaligned
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:105: 
  signed overflow. assert -2147483648 ≤ id - 1;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:105: 
  signed overflow. assert id - 1 ≤ 2147483647;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:105: 
  signed overflow. assert -2147483648 ≤ id - 1;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:105: 
  signed overflow. assert id - 1 ≤ 2147483647;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:106: 
  signed overflow. assert -2147483648 ≤ id - 1;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:106: 
  signed overflow. assert id - 1 ≤ 2147483647;
[eva] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:130: 
  starting to merge loop iterations
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:77: 
  accessing uninitialized left-value. assert \initialized(&head->id);
[eva] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:78: 
  Assigning imprecise value to head->id
  (pointing to __malloc_can_fail_malloc_l11_4 with offsets {0};
  __malloc_w_can_fail_malloc_l11_6 with offsets {0}).
  The imprecision originates from Misaligned
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:134: 
  signed overflow. assert aux + 1 ≤ 2147483647;
[eva] using specification for function printf_va_1
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:142: 
  accessing uninitialized left-value. assert \initialized(&head->id);
[eva] using specification for function printf_va_2
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:143: 
  accessing uninitialized left-value. assert \initialized(&head->next);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:143: 
  pointer comparison.
  assert \pointer_comparable((void *)head->next, (void *)0);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:144: 
  accessing uninitialized left-value. assert \initialized(&head->next);
[eva] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:144: 
  Assigning imprecise value to head.
  The imprecision originates from Misaligned
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:145: 
  accessing uninitialized left-value. assert \initialized(&head->id);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:145: 
  out of bounds read. assert \valid_read(&head->id);
[eva] using specification for function printf_va_3
[eva] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:143: 
  starting to merge loop iterations
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:143: 
  out of bounds read. assert \valid_read(&head->next);
[eva] using specification for function printf_va_4
[eva] using specification for function printf_va_5
[kernel] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:132: 
  more than 200(2147483646) elements to enumerate. Approximating.
[eva] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:11: 
  allocating variable __malloc_can_fail_malloc_l11_7
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:181: 
  accessing uninitialized left-value.
  assert \initialized(&(router + (int)(i - 1))->visited);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:181: 
  out of bounds read. assert \valid_read(&(router + (int)(i - 1))->visited);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:181: 
  accessing uninitialized left-value.
  assert \initialized(&(router + (int)(i - 1))->cutVertice);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:181: 
  out of bounds read. assert \valid_read(&(router + (int)(i - 1))->cutVertice);
[eva] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:180: 
  starting to merge loop iterations
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:182: 
  accessing uninitialized left-value.
  assert \initialized(&(router + (int)(i - 1))->id);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:182: 
  out of bounds read. assert \valid_read(&(router + (int)(i - 1))->id);
[eva] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:182: 
  Assigning imprecise value to v.
  The imprecision originates from Misaligned
[eva] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:11: 
  allocating variable __malloc_can_fail_malloc_l11_8
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:156: 
  signed overflow. assert -2147483648 ≤ id - 1;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:156: 
  signed overflow. assert id - 1 ≤ 2147483647;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:156: 
  out of bounds write. assert \valid(&(router + (int)(id - 1))->visited);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:159: 
  signed overflow. assert -2147483648 ≤ id - 1;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:159: 
  signed overflow. assert id - 1 ≤ 2147483647;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:159: 
  accessing uninitialized left-value.
  assert \initialized(&(router + (int)(id - 1))->head);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:159: 
  out of bounds read. assert \valid_read(&(router + (int)(id - 1))->head);
[eva] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:159: 
  Assigning imprecise value to node.
  The imprecision originates from Misaligned
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:160: 
  pointer comparison. assert \pointer_comparable((void *)node, (void *)0);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:161: 
  accessing uninitialized left-value. assert \initialized(&node->id);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:161: 
  out of bounds read. assert \valid_read(&node->id);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:161: 
  signed overflow. assert -2147483648 ≤ node->id - 1;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:161: 
  signed overflow. assert node->id - 1 ≤ 2147483647;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:161: 
  accessing uninitialized left-value.
  assert \initialized(&(router + (int)(node->id - 1))->visited);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:161: 
  out of bounds read.
  assert \valid_read(&(router + (int)(node->id - 1))->visited);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:161: 
  accessing uninitialized left-value. assert \initialized(&node->id);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:161: 
  signed overflow. assert -2147483648 ≤ node->id - 1;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:161: 
  signed overflow. assert node->id - 1 ≤ 2147483647;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:161: 
  accessing uninitialized left-value.
  assert \initialized(&(router + (int)(node->id - 1))->cutVertice);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:161: 
  out of bounds read.
  assert \valid_read(&(router + (int)(node->id - 1))->cutVertice);
[eva:recursion] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:163: 
  detected recursive call of function DFS_Aux.
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:163: 
  accessing uninitialized left-value. assert \initialized(&node->id);
[eva] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:163: User Error: 
  Recursive call to DFS_Aux without assigns clause.
  Generating probably incomplete assigns to interpret the call. Try to increase
  the -eva-unroll-recursive-calls parameter or write a correct specification
  for function DFS_Aux.
[kernel:annot:missing-spec] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:152: 
  Neither code nor specification for function DFS_Aux, generating default assigns from the prototype
[eva] using specification for function DFS_Aux
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:165: 
  accessing uninitialized left-value. assert \initialized(&node->next);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:165: 
  out of bounds read. assert \valid_read(&node->next);
[eva] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:165: 
  Assigning imprecise value to node.
  The imprecision originates from Misaligned
[eva:locals-escaping] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:191: 
  locals {aux} escaping the scope of DFS_Aux through d
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:192: 
  accessing left-value that contains escaping addresses.
  assert ¬\dangling(&d);
[eva] done for function main
[eva] /home/fmarques/sbugs/projects/alunos/asa_1819_p1/al054/proj1.c:192: 
  assertion 'Eva,dangling_pointer' got final status invalid.
[scope:rm_asserts] removing 46 assertion(s)
[eva] ====== VALUES COMPUTED ======
[eva:final-states] Values at end of function initVertice:
  v.id ∈ [1..2147483647]
   .visited ∈ {0}
   {.depth; .low} ∈ [--..--] or UNINITIALIZED
   .parent ∈ {-1}
   {.cutVertice; .head} ∈ {0}
[eva:final-states] Values at end of function minimum:
  __retres ∈
          {{ garbled mix of &{__malloc_w_can_fail_malloc_l11_1;
                              __malloc_w_can_fail_malloc_l11_2}
           (origin: Misaligned) }}
[eva:final-states] Values at end of function can_fail_malloc:
  __fc_heap_status ∈ [--..--]
  __fc_random_counter ∈ [--..--]
  fail ∈ [0. .. 1.]
  __retres ∈
          {{ NULL ; (void *)&__malloc_can_fail_malloc_l11 ;
             (void *)&__malloc_can_fail_malloc_l11_0 ;
             (void *)&__malloc_w_can_fail_malloc_l11_1 ;
             (void *)&__malloc_w_can_fail_malloc_l11_2 ;
             (void *)&__malloc_can_fail_malloc_l11_3 ;
             (void *)&__malloc_can_fail_malloc_l11_4 ;
             (void *)&__malloc_w_can_fail_malloc_l11_5 ;
             (void *)&__malloc_w_can_fail_malloc_l11_6 ;
             (void *)&__malloc_can_fail_malloc_l11_7 ;
             (void *)&__malloc_can_fail_malloc_l11_8 }}
[eva:final-states] Values at end of function addtoList:
  __fc_heap_status ∈ [--..--]
  __fc_random_counter ∈ [--..--]
  new_head ∈
          {{ (node_t *)&__malloc_w_can_fail_malloc_l11_1 ;
             (node_t *)&__malloc_w_can_fail_malloc_l11_2 ;
             (node_t *)&__malloc_can_fail_malloc_l11_4 ;
             (node_t *)&__malloc_w_can_fail_malloc_l11_6 }}
  __malloc_w_can_fail_malloc_l11_1[0..15] ∈
                                  {{ garbled mix of &{__malloc_w_can_fail_malloc_l11_1;
                                                      __malloc_w_can_fail_malloc_l11_2}
                                   (origin: Misaligned) }} or UNINITIALIZED
  __malloc_w_can_fail_malloc_l11_2[0..15] ∈
                                  {{ garbled mix of &{__malloc_w_can_fail_malloc_l11_1;
                                                      __malloc_w_can_fail_malloc_l11_2}
                                   (origin: Misaligned) }} or UNINITIALIZED
  __malloc_can_fail_malloc_l11_4[0..3] ∈
                                {{ garbled mix of &{__malloc_w_can_fail_malloc_l11_1;
                                                    __malloc_w_can_fail_malloc_l11_2;
                                                    __malloc_can_fail_malloc_l11_4;
                                                    __malloc_w_can_fail_malloc_l11_6}
                                 (origin: Misaligned) }}
                                [4..7] ∈
                                {{ garbled mix of &{__malloc_w_can_fail_malloc_l11_1;
                                                    __malloc_w_can_fail_malloc_l11_2;
                                                    __malloc_can_fail_malloc_l11_4;
                                                    __malloc_w_can_fail_malloc_l11_6}
                                 (origin: Misaligned) }} or UNINITIALIZED
                                [8..15] ∈
                                {{ garbled mix of &{__malloc_w_can_fail_malloc_l11_1;
                                                    __malloc_w_can_fail_malloc_l11_2;
                                                    __malloc_can_fail_malloc_l11_4;
                                                    __malloc_w_can_fail_malloc_l11_6}
                                 (origin: Misaligned) }}
  __malloc_w_can_fail_malloc_l11_6[0..15] ∈
                                  {{ garbled mix of &{__malloc_w_can_fail_malloc_l11_1;
                                                      __malloc_w_can_fail_malloc_l11_2;
                                                      __malloc_can_fail_malloc_l11_4;
                                                      __malloc_w_can_fail_malloc_l11_6}
                                   (origin: Misaligned) }} or UNINITIALIZED
[eva:final-states] Values at end of function addAdj:
  __fc_heap_status ∈ [--..--]
  __fc_random_counter ∈ [--..--]
  v{.id; .visited; .depth; .low; .parent; .cutVertice} ∈
   {{ garbled mix of &{__malloc_w_can_fail_malloc_l11_1;
                       __malloc_w_can_fail_malloc_l11_2}
    (origin: Misaligned) }} or UNINITIALIZED
   .head ∈
   {{ (node_t *)&__malloc_w_can_fail_malloc_l11_1 ;
      (node_t *)&__malloc_w_can_fail_malloc_l11_2 }}
  __malloc_w_can_fail_malloc_l11_1[0..3] ∈ [--..--] or UNINITIALIZED
                                  [4..7] ∈ UNINITIALIZED
                                  [8..15] ∈
                                  {{ garbled mix of &{__malloc_w_can_fail_malloc_l11_1;
                                                      __malloc_w_can_fail_malloc_l11_2}
                                   (origin: Misaligned) }} or UNINITIALIZED
  __malloc_w_can_fail_malloc_l11_2[bits 0 to 31] ∈
                                  [1..2147483647] or UNINITIALIZED
                                  [4..7] ∈ UNINITIALIZED
                                  [8..15] ∈
                                  {{ garbled mix of &{__malloc_w_can_fail_malloc_l11_1;
                                                      __malloc_w_can_fail_malloc_l11_2}
                                   (origin: Misaligned) }} or UNINITIALIZED
[eva:final-states] Values at end of function readInput:
  __fc_heap_status ∈ [--..--]
  __fc_random_counter ∈ [--..--]
  router ∈ {{ NULL ; (struct Vertice *)&__malloc_can_fail_malloc_l11_0 }}
  i ∈ [1..2147483647]
  l1 ∈ [1..2147483647] or UNINITIALIZED
  l2 ∈ [1..2147483647] or UNINITIALIZED
  c ∈ [-2147483648..2147483646]
  routers ∈ {{ NULL ; (struct Vertice *)&__malloc_can_fail_malloc_l11_0 }}
  S___fc_stdin[0..1] ∈ [--..--]
  __malloc_can_fail_malloc_l11_0[0..68719476703] ∈
                                {{ garbled mix of &{__malloc_w_can_fail_malloc_l11_1;
                                                    __malloc_w_can_fail_malloc_l11_2}
                                 (origin: Misaligned) }} or UNINITIALIZED
                                [68719476704..18446744073709551583] ∈
                                UNINITIALIZED
  __malloc_w_can_fail_malloc_l11_1[0..3] ∈ [--..--] or UNINITIALIZED
                                  [4..7] ∈ UNINITIALIZED
                                  [8..15] ∈
                                  {{ garbled mix of &{__malloc_w_can_fail_malloc_l11_1;
                                                      __malloc_w_can_fail_malloc_l11_2}
                                   (origin: Misaligned) }} or UNINITIALIZED
  __malloc_w_can_fail_malloc_l11_2[bits 0 to 31] ∈
                                  [1..2147483647] or UNINITIALIZED
                                  [4..7] ∈ UNINITIALIZED
                                  [8..15] ∈
                                  {{ garbled mix of &{__malloc_w_can_fail_malloc_l11_1;
                                                      __malloc_w_can_fail_malloc_l11_2}
                                   (origin: Misaligned) }} or UNINITIALIZED
[eva:final-states] Values at end of function DFS_Aux:
  __fc_heap_status ∈ [--..--]
  __fc_random_counter ∈ [--..--]
  router ∈ {{ NULL ; (struct Vertice *)&__malloc_can_fail_malloc_l11_0 }}
  aux ∈ {1}
  node ∈ {0}
  router ∈ {{ NULL ; (struct Vertice *)&__malloc_can_fail_malloc_l11_0 }}
  d ∈ {{ &aux }}
  __malloc_can_fail_malloc_l11_0[0..18446744073709551583] ∈
                                {{ garbled mix of &{__malloc_w_can_fail_malloc_l11_1;
                                                    __malloc_w_can_fail_malloc_l11_2}
                                 (origin: Misaligned) }} or UNINITIALIZED
  __malloc_w_can_fail_malloc_l11_1[0..15] ∈
                                  {{ garbled mix of &{__malloc_w_can_fail_malloc_l11_1;
                                                      __malloc_w_can_fail_malloc_l11_2}
                                   (origin: Misaligned) }} or UNINITIALIZED
  __malloc_w_can_fail_malloc_l11_2[0..15] ∈
                                  {{ garbled mix of &{__malloc_w_can_fail_malloc_l11_1;
                                                      __malloc_w_can_fail_malloc_l11_2}
                                   (origin: Misaligned) }} or UNINITIALIZED
[eva:final-states] Values at end of function DFS:
  NON TERMINATING FUNCTION
[eva:final-states] Values at end of function Tarjan_Aux:
  __fc_heap_status ∈ [--..--]
  __fc_random_counter ∈ [--..--]
  cutVertice ∈
            {{ garbled mix of &{__malloc_w_can_fail_malloc_l11_1;
                                __malloc_w_can_fail_malloc_l11_2;
                                __malloc_can_fail_malloc_l11_4;
                                __malloc_w_can_fail_malloc_l11_6}
             (origin: Misaligned) }}
  aux ∈ [0..2147483647]
  router ∈ {{ NULL ; (struct Vertice *)&__malloc_can_fail_malloc_l11_0 }}
  n_childs ∈ [0..2147483647]
  articul ∈ {0; 1}
  node ∈ {0}
  router ∈ {{ NULL ; (struct Vertice *)&__malloc_can_fail_malloc_l11_0 }}
  d ∈ {{ &aux }}
  __malloc_can_fail_malloc_l11_0[0..18446744073709551583] ∈
                                {{ garbled mix of &{__malloc_w_can_fail_malloc_l11_1;
                                                    __malloc_w_can_fail_malloc_l11_2}
                                 (origin: Misaligned) }} or UNINITIALIZED
  __malloc_w_can_fail_malloc_l11_1[0..15] ∈
                                  {{ garbled mix of &{__malloc_w_can_fail_malloc_l11_1;
                                                      __malloc_w_can_fail_malloc_l11_2}
                                   (origin: Misaligned) }} or UNINITIALIZED
  __malloc_w_can_fail_malloc_l11_2[0..15] ∈
                                  {{ garbled mix of &{__malloc_w_can_fail_malloc_l11_1;
                                                      __malloc_w_can_fail_malloc_l11_2}
                                   (origin: Misaligned) }} or UNINITIALIZED
  __malloc_can_fail_malloc_l11_4[0..3] ∈
                                {{ garbled mix of &{__malloc_w_can_fail_malloc_l11_1;
                                                    __malloc_w_can_fail_malloc_l11_2;
                                                    __malloc_can_fail_malloc_l11_4;
                                                    __malloc_w_can_fail_malloc_l11_6}
                                 (origin: Misaligned) }}
                                [4..7] ∈
                                {{ garbled mix of &{__malloc_w_can_fail_malloc_l11_1;
                                                    __malloc_w_can_fail_malloc_l11_2;
                                                    __malloc_can_fail_malloc_l11_4;
                                                    __malloc_w_can_fail_malloc_l11_6}
                                 (origin: Misaligned) }} or UNINITIALIZED
                                [8..15] ∈
                                {{ garbled mix of &{__malloc_w_can_fail_malloc_l11_1;
                                                    __malloc_w_can_fail_malloc_l11_2;
                                                    __malloc_can_fail_malloc_l11_4;
                                                    __malloc_w_can_fail_malloc_l11_6}
                                 (origin: Misaligned) }}
  __malloc_w_can_fail_malloc_l11_6[0..15] ∈
                                  {{ garbled mix of &{__malloc_w_can_fail_malloc_l11_1;
                                                      __malloc_w_can_fail_malloc_l11_2;
                                                      __malloc_can_fail_malloc_l11_4;
                                                      __malloc_w_can_fail_malloc_l11_6}
                                   (origin: Misaligned) }} or UNINITIALIZED
[eva:final-states] Values at end of function Tarjan:
  __fc_heap_status ∈ [--..--]
  __fc_random_counter ∈ [--..--]
  routers ∈ {{ &router ; &routers }}
  a ∈ {1}
  router ∈ {{ NULL ; (struct Vertice *)&__malloc_can_fail_malloc_l11_0 }}
  d ∈ {{ &a }} or ESCAPINGADDR
  cutVertice ∈
            {{ garbled mix of &{__malloc_w_can_fail_malloc_l11_1;
                                __malloc_w_can_fail_malloc_l11_2;
                                __malloc_can_fail_malloc_l11_4;
                                __malloc_w_can_fail_malloc_l11_6}
             (origin: Misaligned) }}
  head ∈
      {{ (node_t *)&__malloc_w_can_fail_malloc_l11_1 ;
         (node_t *)&__malloc_w_can_fail_malloc_l11_2 ;
         (node_t *)&__malloc_can_fail_malloc_l11_4 ;
         (node_t *)&__malloc_w_can_fail_malloc_l11_6 }}
  aux ∈ [1..2147483647]
  v ∈
   {{ garbled mix of &{__malloc_w_can_fail_malloc_l11_1;
                       __malloc_w_can_fail_malloc_l11_2}
    (origin: Misaligned) }}
  i ∈ [-2147483648..2147483646]
  routers ∈ {{ NULL ; (struct Vertice *)&__malloc_can_fail_malloc_l11_0 }}
  S___fc_stdout[0].__fc_FILE_id ∈ [--..--]
               [0].__fc_FILE_data ∈
               {{ garbled mix of &{__malloc_w_can_fail_malloc_l11_1;
                                   __malloc_w_can_fail_malloc_l11_2;
                                   __malloc_can_fail_malloc_l11_4;
                                   __malloc_w_can_fail_malloc_l11_6}
                (origin: Misaligned) }}
               [1] ∈ [--..--]
  __malloc_can_fail_malloc_l11_0[0..18446744073709551583] ∈
                                {{ garbled mix of &{__malloc_w_can_fail_malloc_l11_1;
                                                    __malloc_w_can_fail_malloc_l11_2}
                                 (origin: Misaligned) }} or UNINITIALIZED
  __malloc_w_can_fail_malloc_l11_1[0..15] ∈
                                  {{ garbled mix of &{__malloc_w_can_fail_malloc_l11_1;
                                                      __malloc_w_can_fail_malloc_l11_2}
                                   (origin: Misaligned) }} or UNINITIALIZED
  __malloc_w_can_fail_malloc_l11_2[0..15] ∈
                                  {{ garbled mix of &{__malloc_w_can_fail_malloc_l11_1;
                                                      __malloc_w_can_fail_malloc_l11_2}
                                   (origin: Misaligned) }} or UNINITIALIZED
  __malloc_can_fail_malloc_l11_4[0..3] ∈
                                {{ garbled mix of &{__malloc_w_can_fail_malloc_l11_1;
                                                    __malloc_w_can_fail_malloc_l11_2;
                                                    __malloc_can_fail_malloc_l11_4;
                                                    __malloc_w_can_fail_malloc_l11_6}
                                 (origin: Misaligned) }}
                                [4..7] ∈
                                {{ garbled mix of &{__malloc_w_can_fail_malloc_l11_1;
                                                    __malloc_w_can_fail_malloc_l11_2;
                                                    __malloc_can_fail_malloc_l11_4;
                                                    __malloc_w_can_fail_malloc_l11_6}
                                 (origin: Misaligned) }} or UNINITIALIZED
                                [8..15] ∈
                                {{ garbled mix of &{__malloc_w_can_fail_malloc_l11_1;
                                                    __malloc_w_can_fail_malloc_l11_2;
                                                    __malloc_can_fail_malloc_l11_4;
                                                    __malloc_w_can_fail_malloc_l11_6}
                                 (origin: Misaligned) }}
  __malloc_w_can_fail_malloc_l11_6[0..15] ∈
                                  {{ garbled mix of &{__malloc_w_can_fail_malloc_l11_1;
                                                      __malloc_w_can_fail_malloc_l11_2;
                                                      __malloc_can_fail_malloc_l11_4;
                                                      __malloc_w_can_fail_malloc_l11_6}
                                   (origin: Misaligned) }} or UNINITIALIZED
[eva:final-states] Values at end of function main:
  NON TERMINATING FUNCTION
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  11 functions analyzed (out of 14): 78% coverage.
  In these functions, 181 statements reached (out of 187): 96% coverage.
  ----------------------------------------------------------------------------
  Some errors and warnings have been raised during the analysis:
    by the Eva analyzer:      2 errors    0 warnings
    by the Frama-C kernel:    0 errors    0 warnings
  ----------------------------------------------------------------------------
  135 alarms generated by the analysis:
      53 integer overflows
      40 invalid memory accesses
      37 accesses to uninitialized left-values
       2 escaping addresses
       3 others
  1 of them is a sure alarm (invalid status).
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    13 valid     0 unknown     0 invalid     13 total
  100% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[eva] User Error: Deferred error message was emitted during execution. See above messages for more information.
[kernel] Plug-in eva aborted: invalid user input.
