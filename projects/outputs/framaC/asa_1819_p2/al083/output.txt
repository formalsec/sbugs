[report] Monitoring events
[report] Loading '/home/fmarques/sbugs/projects/configs/frama-c_report_rules.json'
[kernel] Parsing /home/fmarques/sbugs/projects/alunos/asa_1819_p2/al083/asap2.c (with preprocessing)
[kernel:parser:decimal-float] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:10: 
  Floating-point constant 0.10 is not represented exactly. Will use 0x1.999999999999ap-4.
[kernel:parser:decimal-float] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:17: 
  Floating-point constant 0.10 is not represented exactly. Will use 0x1.999999999999ap-4.
[kernel:parser:decimal-float] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:24: 
  Floating-point constant 0.10 is not represented exactly. Will use 0x1.999999999999ap-4.
[kernel:typing:no-proto] /home/fmarques/sbugs/projects/alunos/asa_1819_p2/al083/asap2.c:55: 
  Calling function create_Graph that is declared without prototype.
  Its formals will be inferred from actual arguments
[eva] Analyzing a complete application starting at main
[eva] Computing initial state
[eva] Initial state computed
[eva:initial-state] Values of globals at initialization
  
[eva] using specification for function time
[eva] using specification for function srand
[eva] using specification for function rand
[eva] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:11: 
  allocating variable __malloc_can_fail_malloc_l11
[eva] using specification for function scanf_va_1
[eva] using specification for function exit
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p2/al083/asap2.c:72: 
  out of bounds write. assert \valid(&flow_graph->size);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p2/al083/asap2.c:72: 
  signed overflow. assert -2147483648 ≤ 2 * middle_nodes;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p2/al083/asap2.c:72: 
  signed overflow. assert 2 * middle_nodes ≤ 2147483647;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p2/al083/asap2.c:72: 
  signed overflow. assert -2147483648 ≤ sources + (int)(2 * middle_nodes);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p2/al083/asap2.c:72: 
  signed overflow. assert sources + (int)(2 * middle_nodes) ≤ 2147483647;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p2/al083/asap2.c:72: 
  signed overflow.
  assert (int)(sources + (int)(2 * middle_nodes)) + 2 ≤ 2147483647;
[eva] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:11: 
  allocating variable __malloc_can_fail_malloc_l11_0
[eva] using specification for function scanf_va_2
[eva] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:11: 
  allocating variable __malloc_can_fail_malloc_l11_1
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p2/al083/asap2.c:125: 
  out of bounds write. assert \valid(&newNode->id);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p2/al083/asap2.c:119: 
  accessing uninitialized left-value.
  assert \initialized(flow_graph->lista_adj + NodeA);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p2/al083/asap2.c:119: 
  out of bounds read. assert \valid_read(flow_graph->lista_adj + NodeA);
[eva] using specification for function scanf_va_3
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p2/al083/asap2.c:86: 
  signed overflow.
  assert (int)((int)(sources + 2) + i) + middle_nodes ≤ 2147483647;
[eva] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:11: 
  allocating variable __malloc_can_fail_malloc_l11_2
[eva] using specification for function scanf_va_4
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p2/al083/asap2.c:94: 
  signed overflow. assert -2147483648 ≤ origin + middle_nodes;
[eva] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:11: 
  allocating variable __malloc_can_fail_malloc_l11_3
[eva] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:11: 
  allocating variable __malloc_can_fail_malloc_l11_4
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p2/al083/asap2.c:147: 
  out of bounds write. assert \valid(parent + i);
[eva] /home/fmarques/sbugs/projects/alunos/asa_1819_p2/al083/asap2.c:147: 
  starting to merge loop iterations
[eva] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:11: 
  allocating variable __malloc_can_fail_malloc_l11_5
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p2/al083/asap2.c:208: 
  out of bounds write. assert \valid(visited + i);
[eva] /home/fmarques/sbugs/projects/alunos/asa_1819_p2/al083/asap2.c:208: 
  starting to merge loop iterations
[eva] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:11: 
  allocating variable __malloc_can_fail_malloc_l11_6
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p2/al083/asap2.c:323: 
  out of bounds write. assert \valid(&(q->head)->node_id);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p2/al083/asap2.c:212: 
  out of bounds write. assert \valid(visited + 0);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p2/al083/asap2.c:215: 
  accessing uninitialized left-value.
  assert \initialized(flow_graph->lista_adj + parent_id);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1819_p2/al083/asap2.c:215: 
  out of bounds read. assert \valid_read(flow_graph->lista_adj + parent_id);
[eva] done for function main
[eva] ====== VALUES COMPUTED ======
[eva:final-states] Values at end of function init:
  q{.head; .tail; .size} ∈ {0}
   .[bits 160 to 191] ∈ UNINITIALIZED
[eva:final-states] Values at end of function pop:
  q.head ∈ {0}
   .tail ∈ ESCAPINGADDR
   .size ∈ {0}
   .[bits 160 to 191] ∈ UNINITIALIZED
  node_id ∈ {0}
  temp ∈ ESCAPINGADDR
[eva:final-states] Values at end of function can_fail_malloc:
  __fc_heap_status ∈ [--..--]
  __fc_random_counter ∈ [--..--]
  fail ∈ [0. .. 1.]
  __retres ∈
          {{ NULL ; (void *)&__malloc_can_fail_malloc_l11 ;
             (void *)&__malloc_can_fail_malloc_l11_0 ;
             (void *)&__malloc_can_fail_malloc_l11_1 ;
             (void *)&__malloc_can_fail_malloc_l11_2 ;
             (void *)&__malloc_can_fail_malloc_l11_3 ;
             (void *)&__malloc_can_fail_malloc_l11_4 ;
             (void *)&__malloc_can_fail_malloc_l11_5 ;
             (void *)&__malloc_can_fail_malloc_l11_6 }}
[eva:final-states] Values at end of function createNode:
  __fc_heap_status ∈ [--..--]
  __fc_random_counter ∈ [--..--]
  newNode ∈
         {{ (struct node *)&__malloc_can_fail_malloc_l11_1 ;
            (struct node *)&__malloc_can_fail_malloc_l11_2 ;
            (struct node *)&__malloc_can_fail_malloc_l11_3 }}
  __malloc_can_fail_malloc_l11_1[bits 0 to 31] ∈ {2}
                                [4..7] ∈ [--..--]
                                [8..15] ∈ {0}
  __malloc_can_fail_malloc_l11_2[bits 0 to 31] ∈ [-2147483645..2147483647]
                                [4..7] ∈ [--..--]
                                [8..15] ∈ {0}
  __malloc_can_fail_malloc_l11_3[0..7] ∈ [--..--]
                                [8..15] ∈ {0}
[eva:final-states] Values at end of function addEdge:
  NON TERMINATING FUNCTION
[eva:final-states] Values at end of function create_Graph:
  __fc_heap_status ∈ [--..--]
  __fc_random_counter ∈ [--..--]
  i ∈ {0}
  test ∈ {3}
  sources ∈ [-2147483648..0]
  middle_nodes ∈ [-2147483648..0]
  edges ∈ [-2147483648..0]
  capacity_sourcei ∈ {0}
  capacity_middlenodei ∈ {0}
  origin ∈ {0}
  destination ∈ {0}
  capacity_edgei ∈ {0}
  flow_graph ∈ {{ (struct graph *)&__malloc_can_fail_malloc_l11 }}
  S___fc_stdin[0..1] ∈ [--..--]
  __malloc_can_fail_malloc_l11[bits 0 to 63] ∈
                              {{ NULL ;
                                 (? *)&__malloc_can_fail_malloc_l11_0 }}
                              [bits 64 to 95] ∈ [-2147483646..2147483647]
                              [12..19] ∈ [--..--]
                              [20..23] ∈ UNINITIALIZED
[eva:final-states] Values at end of function push:
  __fc_heap_status ∈ [--..--]
  __fc_random_counter ∈ [--..--]
  q{.head; .tail} ∈ {{ (FIFO_Node *)&__malloc_can_fail_malloc_l11_6 }}
   .size ∈ {1}
   .[bits 160 to 191] ∈ UNINITIALIZED
  __malloc_can_fail_malloc_l11_6[0..3] ∈ {0}
                                [4..7] ∈ UNINITIALIZED
                                [8..15] ∈ {0}
[eva:final-states] Values at end of function BFS:
  NON TERMINATING FUNCTION
[eva:final-states] Values at end of function Edmonds_Karp:
  NON TERMINATING FUNCTION
[eva:final-states] Values at end of function main:
  NON TERMINATING FUNCTION
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  10 functions analyzed (out of 19): 52% coverage.
  In these functions, 108 statements reached (out of 171): 63% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  17 alarms generated by the analysis:
       8 invalid memory accesses
       7 integer overflows
       2 accesses to uninitialized left-values
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    14 valid     0 unknown     0 invalid     14 total
  100% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[report] Classification
[report] Output /home/fmarques/sbugs/projects/outputs/framaC/asa_1819_p2/al083/errors.json
[report] Reviews     :   17
[report] Unclassified:   17
