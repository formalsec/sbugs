[report] Monitoring events
[report] Loading '/home/fmarques/sbugs/projects/configs/frama-c_report_rules.json'
[kernel] Parsing /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al146/main.c (with preprocessing)
[kernel:parser:decimal-float] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:10: 
  Floating-point constant 0.10 is not represented exactly. Will use 0x1.999999999999ap-4.
[kernel:parser:decimal-float] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:17: 
  Floating-point constant 0.10 is not represented exactly. Will use 0x1.999999999999ap-4.
[kernel:parser:decimal-float] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:24: 
  Floating-point constant 0.10 is not represented exactly. Will use 0x1.999999999999ap-4.
[eva] Analyzing a complete application starting at main
[eva] Computing initial state
[eva] Initial state computed
[eva:initial-state] Values of globals at initialization
  graph ∈ {0}
  grades ∈ {0}
  stack ∈ {0}
  scc ∈ {0}
  dist ∈ {0}
  low ∈ {0}
  onStack ∈ {0}
  visited ∈ {0}
  color ∈ {0}
[eva] using specification for function fscanf_va_1
[eva] using specification for function printf_va_1
[eva] using specification for function exit
[eva] using specification for function time
[eva] using specification for function srand
[eva] using specification for function rand
[eva] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:11: 
  allocating variable __malloc_can_fail_malloc_l11
[eva] using specification for function perror
[eva] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:11: 
  allocating variable __malloc_can_fail_malloc_l11_0
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al146/main.c:257: 
  out of bounds write. assert \valid(graph_0->vertices + i);
[eva] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al146/main.c:256: 
  starting to merge loop iterations
[eva] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:11: 
  allocating variable __malloc_can_fail_malloc_l11_1
[eva] using specification for function fscanf_va_2
[eva] using specification for function printf_va_2
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al146/main.c:108: 
  out of bounds write. assert \valid(grades + i);
[eva] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al146/main.c:101: 
  starting to merge loop iterations
[eva] using specification for function fscanf_va_3
[eva] using specification for function printf_va_3
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al146/main.c:118: 
  signed overflow. assert -2147483648 ≤ aux[1] - 1;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al146/main.c:118: 
  signed overflow. assert -2147483648 ≤ aux[0] - 1;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al146/main.c:263: 
  accessing uninitialized left-value.
  assert \initialized(graph->vertices + src);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al146/main.c:263: 
  out of bounds read. assert \valid_read(graph->vertices + src);
[eva] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:11: 
  allocating variable __malloc_can_fail_malloc_l11_2
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al146/main.c:264: 
  out of bounds write. assert \valid(graph->vertices + src);
[eva] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al146/main.c:111: 
  starting to merge loop iterations
[eva] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:11: 
  allocating variable __malloc_can_fail_malloc_l11_3
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al146/main.c:268: 
  accessing uninitialized left-value.
  assert \initialized(graph->vertices + src);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al146/main.c:268: 
  out of bounds read. assert \valid_read(graph->vertices + src);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al146/main.c:269: 
  out of bounds write. assert \valid(graph->vertices + src);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al146/main.c:271: 
  signed overflow. assert graph->E + 1 ≤ 2147483647;
[eva] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:11: 
  allocating variable __malloc_can_fail_malloc_l11_4
[eva] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:11: 
  allocating variable __malloc_can_fail_malloc_l11_5
[eva] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:11: 
  allocating variable __malloc_can_fail_malloc_l11_6
[eva] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:11: 
  allocating variable __malloc_can_fail_malloc_l11_7
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al146/main.c:326: 
  out of bounds write. assert \valid(onStack + i);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al146/main.c:327: 
  out of bounds write. assert \valid(dist + i);
[eva] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al146/main.c:324: 
  starting to merge loop iterations
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al146/main.c:331: 
  accessing uninitialized left-value. assert \initialized(dist + i);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al146/main.c:331: 
  out of bounds read. assert \valid_read(dist + i);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al146/main.c:340: 
  out of bounds write. assert \valid(low + vertex);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al146/main.c:340: 
  out of bounds write. assert \valid(dist + vertex);
[eva] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:11: 
  allocating variable __malloc_can_fail_malloc_l11_8
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al146/main.c:345: 
  out of bounds write. assert \valid(onStack + vertex);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al146/main.c:347: 
  accessing uninitialized left-value.
  assert \initialized(graph->vertices + vertex);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al146/main.c:347: 
  out of bounds read. assert \valid_read(graph->vertices + vertex);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al146/main.c:348: 
  accessing uninitialized left-value. assert \initialized(&node->dest);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al146/main.c:348: 
  accessing uninitialized left-value. assert \initialized(dist + node->dest);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al146/main.c:348: 
  out of bounds read. assert \valid_read(dist + node->dest);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al146/main.c:348: 
  accessing uninitialized left-value. assert \initialized(&node->dest);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al146/main.c:348: 
  accessing uninitialized left-value.
  assert \initialized(onStack + node->dest);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al146/main.c:348: 
  out of bounds read. assert \valid_read(onStack + node->dest);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al146/main.c:350: 
  accessing uninitialized left-value. assert \initialized(&node->dest);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al146/main.c:350: 
  accessing uninitialized left-value. assert \initialized(dist + node->dest);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al146/main.c:350: 
  out of bounds read. assert \valid_read(dist + node->dest);
[eva:recursion] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al146/main.c:351: 
  detected recursive call of function strongConnect.
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al146/main.c:351: 
  accessing uninitialized left-value. assert \initialized(&node->dest);
[eva] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al146/main.c:351: User Error: 
  Recursive call to strongConnect without assigns clause.
  Generating probably incomplete assigns to interpret the call. Try to increase
  the -eva-unroll-recursive-calls parameter or write a correct specification
  for function strongConnect.
[kernel:annot:missing-spec] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al146/main.c:337: 
  Neither code nor specification for function strongConnect, generating default assigns from the prototype
[eva] using specification for function strongConnect
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al146/main.c:352: 
  accessing uninitialized left-value. assert \initialized(&node->dest);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al146/main.c:352: 
  out of bounds read. assert \valid_read(low + vertex);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al146/main.c:352: 
  accessing uninitialized left-value. assert \initialized(low + node->dest);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al146/main.c:352: 
  out of bounds read. assert \valid_read(low + node->dest);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al146/main.c:352: 
  out of bounds write. assert \valid(low + vertex);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al146/main.c:347: 
  accessing uninitialized left-value. assert \initialized(&node->next);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al146/main.c:355: 
  out of bounds read. assert \valid_read(low + vertex);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al146/main.c:355: 
  out of bounds read. assert \valid_read(dist + vertex);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al146/main.c:359: 
  out of bounds write. assert \valid(onStack + aux);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al146/main.c:360: 
  out of bounds write. assert \valid(scc + aux);
[eva] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al146/main.c:330: 
  starting to merge loop iterations
[eva] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al146/main.c:351: 
  Using specification of function strongConnect for recursive calls.
  Analysis of function strongConnect is thus incomplete and its soundness
  relies on the written specification.
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al146/main.c:352: 
  accessing uninitialized left-value. assert \initialized(low + vertex);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al146/main.c:355: 
  accessing uninitialized left-value. assert \initialized(low + vertex);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al146/main.c:355: 
  accessing uninitialized left-value. assert \initialized(dist + vertex);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al146/main.c:369: 
  accessing uninitialized left-value.
  assert \initialized(graph->vertices + vertex2);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al146/main.c:369: 
  out of bounds read. assert \valid_read(graph->vertices + vertex2);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al146/main.c:371: 
  accessing uninitialized left-value. assert \initialized(grades + vertex2);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al146/main.c:371: 
  accessing uninitialized left-value. assert \initialized(grades + vertex);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al146/main.c:371: 
  out of bounds read. assert \valid_read(grades + vertex2);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al146/main.c:371: 
  out of bounds read. assert \valid_read(grades + vertex);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al146/main.c:371: 
  out of bounds write. assert \valid(grades + vertex);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al146/main.c:375: 
  accessing uninitialized left-value. assert \initialized(&node->next);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al146/main.c:376: 
  accessing uninitialized left-value. assert \initialized(&node->next);
[eva] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al146/main.c:375: 
  starting to merge loop iterations
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al146/main.c:375: 
  out of bounds read. assert \valid_read(&node->next);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al146/main.c:378: 
  accessing uninitialized left-value.
  assert \initialized(graph->vertices + vertex);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al146/main.c:378: 
  out of bounds read. assert \valid_read(graph->vertices + vertex);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al146/main.c:379: 
  out of bounds write. assert \valid(graph->vertices + vertex);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al146/main.c:379: 
  accessing uninitialized left-value.
  assert \initialized(graph->vertices + vertex2);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al146/main.c:379: 
  out of bounds read. assert \valid_read(graph->vertices + vertex2);
[eva] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al146/main.c:357: 
  starting to merge loop iterations
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al146/main.c:212: 
  accessing uninitialized left-value. assert \initialized(&stack->next);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al146/main.c:213: 
  accessing uninitialized left-value. assert \initialized(&aux->number);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al146/main.c:205: 
  accessing left-value that contains escaping addresses.
  assert ¬\dangling(&stack);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al146/main.c:212: 
  accessing left-value that contains escaping addresses.
  assert ¬\dangling(&stack->next);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al146/main.c:195: 
  accessing left-value that contains escaping addresses.
  assert ¬\dangling(&stack);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al146/main.c:341: 
  signed overflow. assert visited + 1 ≤ 2147483647;
[eva] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:11: 
  allocating variable __malloc_can_fail_malloc_l11_9
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al146/main.c:390: 
  out of bounds write. assert \valid(color + i);
[eva] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al146/main.c:389: 
  starting to merge loop iterations
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al146/main.c:393: 
  accessing uninitialized left-value. assert \initialized(scc + i);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al146/main.c:393: 
  out of bounds read. assert \valid_read(scc + i);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al146/main.c:393: 
  accessing uninitialized left-value. assert \initialized(color + *(scc + i));
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al146/main.c:393: 
  out of bounds read. assert \valid_read(color + *(scc + i));
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al146/main.c:394: 
  out of bounds read. assert \valid_read(scc + i);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al146/main.c:401: 
  out of bounds write. assert \valid(color + vertex);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al146/main.c:403: 
  accessing uninitialized left-value.
  assert \initialized(graph->vertices + vertex);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al146/main.c:403: 
  out of bounds read. assert \valid_read(graph->vertices + vertex);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al146/main.c:405: 
  accessing uninitialized left-value. assert \initialized(&node->dest);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al146/main.c:405: 
  accessing uninitialized left-value. assert \initialized(scc + node->dest);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al146/main.c:405: 
  out of bounds read. assert \valid_read(scc + node->dest);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al146/main.c:405: 
  accessing uninitialized left-value.
  assert \initialized(color + *(scc + node->dest));
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al146/main.c:405: 
  out of bounds read. assert \valid_read(color + *(scc + node->dest));
[eva:recursion] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al146/main.c:406: 
  detected recursive call of function visitDFS.
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al146/main.c:406: 
  accessing uninitialized left-value. assert \initialized(&node->dest);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al146/main.c:406: 
  accessing uninitialized left-value. assert \initialized(scc + node->dest);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al146/main.c:406: 
  out of bounds read. assert \valid_read(scc + node->dest);
[eva] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al146/main.c:406: User Error: 
  Recursive call to visitDFS without assigns clause.
  Generating probably incomplete assigns to interpret the call. Try to increase
  the -eva-unroll-recursive-calls parameter or write a correct specification
  for function visitDFS.
[kernel:annot:missing-spec] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al146/main.c:399: 
  Neither code nor specification for function visitDFS, generating default assigns from the prototype
[eva] using specification for function visitDFS
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al146/main.c:408: 
  accessing uninitialized left-value. assert \initialized(&node->dest);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al146/main.c:408: 
  accessing uninitialized left-value. assert \initialized(grades + vertex);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al146/main.c:408: 
  out of bounds read. assert \valid_read(grades + vertex);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al146/main.c:408: 
  accessing uninitialized left-value. assert \initialized(scc + node->dest);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al146/main.c:408: 
  out of bounds read. assert \valid_read(scc + node->dest);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al146/main.c:408: 
  accessing uninitialized left-value.
  assert \initialized(grades + *(scc + node->dest));
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al146/main.c:408: 
  out of bounds read. assert \valid_read(grades + *(scc + node->dest));
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al146/main.c:408: 
  out of bounds write. assert \valid(grades + vertex);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al146/main.c:403: 
  accessing uninitialized left-value. assert \initialized(&node->next);
[eva] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al146/main.c:392: 
  starting to merge loop iterations
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al146/main.c:394: 
  accessing uninitialized left-value. assert \initialized(scc + i);
[eva] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al146/main.c:406: 
  Using specification of function visitDFS for recursive calls.
  Analysis of function visitDFS is thus incomplete and its soundness
  relies on the written specification.
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al146/main.c:127: 
  accessing uninitialized left-value. assert \initialized(scc + i);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al146/main.c:127: 
  out of bounds read. assert \valid_read(scc + i);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al146/main.c:127: 
  accessing uninitialized left-value. assert \initialized(grades + *(scc + i));
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al146/main.c:127: 
  out of bounds read. assert \valid_read(grades + *(scc + i));
[eva] using specification for function printf_va_4
[eva] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al146/main.c:126: 
  starting to merge loop iterations
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al146/main.c:306: 
  accessing uninitialized left-value. assert \initialized(scc + i);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al146/main.c:306: 
  out of bounds read. assert \valid_read(scc + i);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al146/main.c:306: 
  accessing uninitialized left-value.
  assert \initialized(graph->vertices + *(scc + i));
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al146/main.c:306: 
  out of bounds read. assert \valid_read(graph->vertices + *(scc + i));
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al146/main.c:308: 
  out of bounds read. assert \valid_read(scc + i);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al146/main.c:308: 
  accessing uninitialized left-value.
  assert \initialized(graph->vertices + *(scc + i));
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al146/main.c:308: 
  out of bounds read. assert \valid_read(graph->vertices + *(scc + i));
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al146/main.c:309: 
  out of bounds read. assert \valid_read(scc + i);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al146/main.c:309: 
  out of bounds write. assert \valid(graph->vertices + *(scc + i));
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al146/main.c:309: 
  accessing uninitialized left-value. assert \initialized(&aux->next);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al146/main.c:309: 
  out of bounds read. assert \valid_read(&aux->next);
[eva] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al146/main.c:306: 
  starting to merge loop iterations
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al146/main.c:306: 
  accessing left-value that contains escaping addresses.
  assert ¬\dangling(graph->vertices + *(scc + i));
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al146/main.c:308: 
  accessing left-value that contains escaping addresses.
  assert ¬\dangling(graph->vertices + *(scc + i));
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al146/main.c:309: 
  accessing left-value that contains escaping addresses.
  assert ¬\dangling(&aux->next);
[eva] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al146/main.c:305: 
  starting to merge loop iterations
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al146/main.c:308: 
  accessing uninitialized left-value. assert \initialized(scc + i);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al146/main.c:309: 
  accessing uninitialized left-value. assert \initialized(scc + i);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al146/main.c:234: 
  accessing left-value that contains escaping addresses.
  assert ¬\dangling(&stack);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al146/main.c:237: 
  accessing uninitialized left-value. assert \initialized(&stack->next);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al146/main.c:237: 
  accessing left-value that contains escaping addresses.
  assert ¬\dangling(&stack->next);
[eva] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al146/main.c:234: 
  starting to merge loop iterations
[eva] done for function main
[scope:rm_asserts] removing 27 assertion(s)
[eva] ====== VALUES COMPUTED ======
[eva:final-states] Values at end of function freeGraph:
  graph ∈ ESCAPINGADDR
  i ∈ [0..2147483647]
  aux ∈
     {{ (Node *)&__malloc_w_can_fail_malloc_l11_2 ;
        (Node *)&__malloc_w_can_fail_malloc_l11_3 }} or UNINITIALIZED or ESCAPINGADDR
  __malloc_w_can_fail_malloc_l11_2[bits 0 to 31] ∈
                                  [-2147483648..2147483646] or UNINITIALIZED
                                  [4..7] ∈ UNINITIALIZED
                                  [bits 64 to 127] ∈
                                  {{ NULL ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_2 ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_3 }} or UNINITIALIZED or ESCAPINGADDR
  __malloc_w_can_fail_malloc_l11_3[bits 0 to 31] ∈
                                  [-2147483648..2147483646] or UNINITIALIZED
                                  [4..7] ∈ UNINITIALIZED
                                  [bits 64 to 127] ∈
                                  {{ NULL ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_2 ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_3 }} or UNINITIALIZED or ESCAPINGADDR
[eva:final-states] Values at end of function freeStack:
  stack ∈ {0}
  aux ∈
     {{ (Stack *)&__malloc_w_can_fail_malloc_l11_8 }} or UNINITIALIZED or ESCAPINGADDR
  __malloc_w_can_fail_malloc_l11_8[bits 0 to 31] ∈
                                  [0..2147483646] or UNINITIALIZED
                                  [4..7] ∈ UNINITIALIZED
                                  [bits 64 to 127] ∈
                                  {{ NULL ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_8 }} or UNINITIALIZED or ESCAPINGADDR
[eva:final-states] Values at end of function max:
  
[eva:final-states] Values at end of function min:
  
[eva:final-states] Values at end of function newStack:
  __retres ∈ {0}
[eva:final-states] Values at end of function popStack:
  stack ∈
       {{ NULL ; (Stack *)&__malloc_w_can_fail_malloc_l11_8 }} or ESCAPINGADDR
  aux ∈
     {{ (Stack *)&__malloc_w_can_fail_malloc_l11_8 }} or UNINITIALIZED or ESCAPINGADDR
  this ∈ [0..2147483646] or UNINITIALIZED
  __retres ∈ [-1..2147483646]
  __malloc_w_can_fail_malloc_l11_8[bits 0 to 31] ∈
                                  [0..2147483646] or UNINITIALIZED
                                  [4..7] ∈ UNINITIALIZED
                                  [bits 64 to 127] ∈
                                  {{ NULL ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_8 }} or UNINITIALIZED or ESCAPINGADDR
[eva:final-states] Values at end of function reduceSCC:
  node ∈
      {{ NULL ; (Node *)&__malloc_w_can_fail_malloc_l11_2 ;
         (Node *)&__malloc_w_can_fail_malloc_l11_3 }}
  __malloc_can_fail_malloc_l11_0[bits 0 to 137438953407]# ∈
                                {{ NULL ;
                                   (? *)&__malloc_w_can_fail_malloc_l11_2 ;
                                   (? *)&__malloc_w_can_fail_malloc_l11_3 }} or UNINITIALIZED repeated %64 
                                [17179869176..18446744073709551599] ∈
                                UNINITIALIZED
  __malloc_can_fail_malloc_l11_1[0..8589934587] ∈ [--..--] or UNINITIALIZED
                                [8589934588..18446744073709551611] ∈
                                UNINITIALIZED
  __malloc_w_can_fail_malloc_l11_2[bits 0 to 31] ∈
                                  [-2147483648..2147483646] or UNINITIALIZED
                                  [4..7] ∈ UNINITIALIZED
                                  [bits 64 to 127] ∈
                                  {{ NULL ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_2 ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_3 }} or UNINITIALIZED
  __malloc_w_can_fail_malloc_l11_3[bits 0 to 31] ∈
                                  [-2147483648..2147483646] or UNINITIALIZED
                                  [4..7] ∈ UNINITIALIZED
                                  [bits 64 to 127] ∈
                                  {{ NULL ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_2 ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_3 }} or UNINITIALIZED
[eva:final-states] Values at end of function can_fail_malloc:
  __fc_heap_status ∈ [--..--]
  __fc_random_counter ∈ [--..--]
  fail ∈ [0. .. 1.]
  __retres ∈
          {{ NULL ; (void *)&__malloc_can_fail_malloc_l11 ;
             (void *)&__malloc_can_fail_malloc_l11_0 ;
             (void *)&__malloc_can_fail_malloc_l11_1 ;
             (void *)&__malloc_w_can_fail_malloc_l11_2 ;
             (void *)&__malloc_w_can_fail_malloc_l11_3 ;
             (void *)&__malloc_can_fail_malloc_l11_4 ;
             (void *)&__malloc_can_fail_malloc_l11_5 ;
             (void *)&__malloc_can_fail_malloc_l11_6 ;
             (void *)&__malloc_can_fail_malloc_l11_7 ;
             (void *)&__malloc_w_can_fail_malloc_l11_8 ;
             (void *)&__malloc_can_fail_malloc_l11_9 }}
[eva:final-states] Values at end of function safeMalloc:
  __fc_heap_status ∈ [--..--]
  __fc_random_counter ∈ [--..--]
  __fc_stdout ∈ {{ NULL ; &S___fc_stdout[0] }}
  pointer ∈
         {{ (void *)&__malloc_can_fail_malloc_l11 ;
            (void *)&__malloc_can_fail_malloc_l11_0 ;
            (void *)&__malloc_can_fail_malloc_l11_1 ;
            (void *)&__malloc_w_can_fail_malloc_l11_2 ;
            (void *)&__malloc_w_can_fail_malloc_l11_3 ;
            (void *)&__malloc_can_fail_malloc_l11_4 ;
            (void *)&__malloc_can_fail_malloc_l11_5 ;
            (void *)&__malloc_can_fail_malloc_l11_6 ;
            (void *)&__malloc_can_fail_malloc_l11_7 ;
            (void *)&__malloc_w_can_fail_malloc_l11_8 ;
            (void *)&__malloc_can_fail_malloc_l11_9 }}
[eva:final-states] Values at end of function newGraph:
  __fc_heap_status ∈ [--..--]
  __fc_random_counter ∈ [--..--]
  __fc_stdout ∈ {{ NULL ; &S___fc_stdout[0] }}
  i ∈ [0..2147483647]
  graph_0 ∈ {{ (Graph *)&__malloc_can_fail_malloc_l11 }}
  __malloc_can_fail_malloc_l11[0..3] ∈ [--..--]
                              [4..7] ∈ {0}
                              [bits 64 to 127] ∈
                              {{ (? *)&__malloc_can_fail_malloc_l11_0 }}
  __malloc_can_fail_malloc_l11_0[0..17179869175] ∈ {0} or UNINITIALIZED
                                [17179869176..18446744073709551599] ∈
                                UNINITIALIZED
[eva:final-states] Values at end of function newNode:
  __fc_heap_status ∈ [--..--]
  __fc_random_counter ∈ [--..--]
  __fc_stdout ∈ {{ NULL ; &S___fc_stdout[0] }}
  new ∈
     {{ (Node *)&__malloc_w_can_fail_malloc_l11_2 ;
        (Node *)&__malloc_w_can_fail_malloc_l11_3 }}
  __malloc_w_can_fail_malloc_l11_2[bits 0 to 31] ∈
                                  [-2147483648..2147483646] or UNINITIALIZED
                                  [4..7] ∈ UNINITIALIZED
                                  [8..15] ∈ {0} or UNINITIALIZED
  __malloc_w_can_fail_malloc_l11_3[bits 0 to 31] ∈
                                  [-2147483648..2147483646] or UNINITIALIZED
                                  [4..7] ∈ UNINITIALIZED
                                  [bits 64 to 127] ∈
                                  {{ NULL ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_2 ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_3 }} or UNINITIALIZED
[eva:final-states] Values at end of function addGraphEdge:
  __fc_heap_status ∈ [--..--]
  __fc_random_counter ∈ [--..--]
  __fc_stdout ∈ {{ NULL ; &S___fc_stdout[0] }}
  __malloc_can_fail_malloc_l11[0..3] ∈ [--..--]
                              [bits 32 to 63] ∈ [1..2147483647]
                              [bits 64 to 127] ∈
                              {{ (? *)&__malloc_can_fail_malloc_l11_0 }}
  __malloc_can_fail_malloc_l11_0[bits 0 to 137438953407]# ∈
                                {{ NULL ;
                                   (? *)&__malloc_w_can_fail_malloc_l11_2 ;
                                   (? *)&__malloc_w_can_fail_malloc_l11_3 }} or UNINITIALIZED repeated %64 
                                [17179869176..18446744073709551599] ∈
                                UNINITIALIZED
  __malloc_w_can_fail_malloc_l11_2[bits 0 to 31] ∈
                                  [-2147483648..2147483646] or UNINITIALIZED
                                  [4..7] ∈ UNINITIALIZED
                                  [8..15] ∈ {0} or UNINITIALIZED
  __malloc_w_can_fail_malloc_l11_3[bits 0 to 31] ∈
                                  [-2147483648..2147483646] or UNINITIALIZED
                                  [4..7] ∈ UNINITIALIZED
                                  [bits 64 to 127] ∈
                                  {{ NULL ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_2 ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_3 }} or UNINITIALIZED
[eva:final-states] Values at end of function pushStack:
  __fc_heap_status ∈ [--..--]
  __fc_random_counter ∈ [--..--]
  __fc_stdout ∈ {{ NULL ; &S___fc_stdout[0] }}
  stack ∈ {{ (Stack *)&__malloc_w_can_fail_malloc_l11_8 }}
  new ∈ {{ (Stack *)&__malloc_w_can_fail_malloc_l11_8 }}
  __malloc_w_can_fail_malloc_l11_8[bits 0 to 31] ∈
                                  [0..2147483646] or UNINITIALIZED
                                  [4..7] ∈ UNINITIALIZED
                                  [bits 64 to 127] ∈
                                  {{ NULL ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_8 }} or UNINITIALIZED or ESCAPINGADDR
[eva:final-states] Values at end of function readInput:
  __fc_heap_status ∈ [--..--]
  __fc_random_counter ∈ [--..--]
  __fc_stdout ∈ {{ NULL ; &S___fc_stdout[0] }}
  graph ∈ {{ (Graph *)&__malloc_can_fail_malloc_l11 }}
  grades ∈ {{ (int *)&__malloc_can_fail_malloc_l11_1 }}
  v ∈ [--..--]
  e ∈ [--..--]
  i ∈ [0..2147483647]
  aux[0] ∈ [--..--] or UNINITIALIZED
     [1] ∈ [-2147483647..2147483647] or UNINITIALIZED
  S___fc_stdin[0..1] ∈ [--..--]
  S___fc_stdout[0..1] ∈ [--..--]
  __malloc_can_fail_malloc_l11[0..3] ∈ [--..--]
                              [bits 32 to 63] ∈ [0..2147483647]
                              [bits 64 to 127] ∈
                              {{ (? *)&__malloc_can_fail_malloc_l11_0 }}
  __malloc_can_fail_malloc_l11_0[bits 0 to 137438953407]# ∈
                                {{ NULL ;
                                   (? *)&__malloc_w_can_fail_malloc_l11_2 ;
                                   (? *)&__malloc_w_can_fail_malloc_l11_3 }} or UNINITIALIZED repeated %64 
                                [17179869176..18446744073709551599] ∈
                                UNINITIALIZED
  __malloc_can_fail_malloc_l11_1[0..8589934587] ∈ [--..--] or UNINITIALIZED
                                [8589934588..18446744073709551611] ∈
                                UNINITIALIZED
  __malloc_w_can_fail_malloc_l11_2[bits 0 to 31] ∈
                                  [-2147483648..2147483646] or UNINITIALIZED
                                  [4..7] ∈ UNINITIALIZED
                                  [8..15] ∈ {0} or UNINITIALIZED
  __malloc_w_can_fail_malloc_l11_3[bits 0 to 31] ∈
                                  [-2147483648..2147483646] or UNINITIALIZED
                                  [4..7] ∈ UNINITIALIZED
                                  [bits 64 to 127] ∈
                                  {{ NULL ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_2 ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_3 }} or UNINITIALIZED
[eva:final-states] Values at end of function writeOutput:
  i ∈ [0..2147483647]
  S___fc_stdout[0..1] ∈ [--..--]
[eva:final-states] Values at end of function strongConnect:
  __fc_heap_status ∈ [--..--]
  __fc_random_counter ∈ [--..--]
  __fc_stdout ∈ {{ NULL ; &S___fc_stdout[0] }}
  stack ∈
       {{ NULL ; (Stack *)&__malloc_w_can_fail_malloc_l11_8 }} or ESCAPINGADDR
  visited ∈ [1..2147483647]
  node ∈ {0}
  aux ∈ [0..2147483646] or UNINITIALIZED
  __malloc_can_fail_malloc_l11_0[bits 0 to 137438953407]# ∈
                                {{ NULL ;
                                   (? *)&__malloc_w_can_fail_malloc_l11_2 ;
                                   (? *)&__malloc_w_can_fail_malloc_l11_3 }} or UNINITIALIZED repeated %64 
                                [17179869176..18446744073709551599] ∈
                                UNINITIALIZED
  __malloc_can_fail_malloc_l11_1[0..8589934587] ∈ [--..--] or UNINITIALIZED
                                [8589934588..18446744073709551611] ∈
                                UNINITIALIZED
  __malloc_w_can_fail_malloc_l11_2[bits 0 to 31] ∈
                                  [-2147483648..2147483646] or UNINITIALIZED
                                  [4..7] ∈ UNINITIALIZED
                                  [bits 64 to 127] ∈
                                  {{ NULL ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_2 ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_3 }} or UNINITIALIZED
  __malloc_w_can_fail_malloc_l11_3[bits 0 to 31] ∈
                                  [-2147483648..2147483646] or UNINITIALIZED
                                  [4..7] ∈ UNINITIALIZED
                                  [bits 64 to 127] ∈
                                  {{ NULL ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_2 ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_3 }} or UNINITIALIZED
  __malloc_can_fail_malloc_l11_4[bits 0 to 68719476703]# ∈
                                [0..2147483646] or UNINITIALIZED repeated %32 
                                [8589934588..18446744073709551611] ∈
                                UNINITIALIZED
  __malloc_can_fail_malloc_l11_5[bits 0 to 68719476703]# ∈
                                [-1..2147483647] or UNINITIALIZED repeated %32 
                                [8589934588..18446744073709551611] ∈
                                UNINITIALIZED
  __malloc_can_fail_malloc_l11_6[bits 0 to 68719476703]# ∈
                                [0..2147483647] or UNINITIALIZED repeated %32 
                                [8589934588..18446744073709551611] ∈
                                UNINITIALIZED
  __malloc_can_fail_malloc_l11_7[bits 0 to 68719476703]# ∈
                                {0; 1} or UNINITIALIZED repeated %32 
                                [8589934588..18446744073709551611] ∈
                                UNINITIALIZED
  __malloc_w_can_fail_malloc_l11_8[bits 0 to 31] ∈
                                  [0..2147483646] or UNINITIALIZED
                                  [4..7] ∈ UNINITIALIZED
                                  [bits 64 to 127] ∈
                                  {{ NULL ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_8 }} or UNINITIALIZED or ESCAPINGADDR
[eva:final-states] Values at end of function doTarjan:
  __fc_heap_status ∈ [--..--]
  __fc_random_counter ∈ [--..--]
  __fc_stdout ∈ {{ NULL ; &S___fc_stdout[0] }}
  stack ∈
       {{ NULL ; (Stack *)&__malloc_w_can_fail_malloc_l11_8 }} or ESCAPINGADDR
  visited ∈ [0..2147483647]
  i ∈ [0..2147483647]
  __malloc_can_fail_malloc_l11_0[bits 0 to 137438953407]# ∈
                                {{ NULL ;
                                   (? *)&__malloc_w_can_fail_malloc_l11_2 ;
                                   (? *)&__malloc_w_can_fail_malloc_l11_3 }} or UNINITIALIZED repeated %64 
                                [17179869176..18446744073709551599] ∈
                                UNINITIALIZED
  __malloc_can_fail_malloc_l11_1[0..8589934587] ∈ [--..--] or UNINITIALIZED
                                [8589934588..18446744073709551611] ∈
                                UNINITIALIZED
  __malloc_w_can_fail_malloc_l11_2[bits 0 to 31] ∈
                                  [-2147483648..2147483646] or UNINITIALIZED
                                  [4..7] ∈ UNINITIALIZED
                                  [bits 64 to 127] ∈
                                  {{ NULL ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_2 ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_3 }} or UNINITIALIZED
  __malloc_w_can_fail_malloc_l11_3[bits 0 to 31] ∈
                                  [-2147483648..2147483646] or UNINITIALIZED
                                  [4..7] ∈ UNINITIALIZED
                                  [bits 64 to 127] ∈
                                  {{ NULL ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_2 ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_3 }} or UNINITIALIZED
  __malloc_can_fail_malloc_l11_4[bits 0 to 68719476703]# ∈
                                [0..2147483646] or UNINITIALIZED repeated %32 
                                [8589934588..18446744073709551611] ∈
                                UNINITIALIZED
  __malloc_can_fail_malloc_l11_5[bits 0 to 68719476703]# ∈
                                [-1..2147483647] or UNINITIALIZED repeated %32 
                                [8589934588..18446744073709551611] ∈
                                UNINITIALIZED
  __malloc_can_fail_malloc_l11_6[bits 0 to 68719476703]# ∈
                                [0..2147483647] or UNINITIALIZED repeated %32 
                                [8589934588..18446744073709551611] ∈
                                UNINITIALIZED
  __malloc_can_fail_malloc_l11_7[bits 0 to 68719476703]# ∈
                                {0; 1} or UNINITIALIZED repeated %32 
                                [8589934588..18446744073709551611] ∈
                                UNINITIALIZED
  __malloc_w_can_fail_malloc_l11_8[bits 0 to 31] ∈
                                  [0..2147483646] or UNINITIALIZED
                                  [4..7] ∈ UNINITIALIZED
                                  [bits 64 to 127] ∈
                                  {{ NULL ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_8 }} or UNINITIALIZED or ESCAPINGADDR
[eva:final-states] Values at end of function visitDFS:
  node ∈ {0}
  __malloc_can_fail_malloc_l11_1[0..8589934587] ∈ [--..--] or UNINITIALIZED
                                [8589934588..18446744073709551611] ∈
                                UNINITIALIZED
  __malloc_can_fail_malloc_l11_9[bits 0 to 68719476703]# ∈
                                {0; 1} or UNINITIALIZED repeated %32 
                                [8589934588..18446744073709551611] ∈
                                UNINITIALIZED
[eva:final-states] Values at end of function doDFS:
  i ∈ [0..2147483647]
  __malloc_can_fail_malloc_l11_1[0..8589934587] ∈ [--..--] or UNINITIALIZED
                                [8589934588..18446744073709551611] ∈
                                UNINITIALIZED
  __malloc_can_fail_malloc_l11_9[bits 0 to 68719476703]# ∈
                                {0; 1} or UNINITIALIZED repeated %32 
                                [8589934588..18446744073709551611] ∈
                                UNINITIALIZED
[eva:final-states] Values at end of function main:
  __fc_heap_status ∈ [--..--]
  __fc_random_counter ∈ [--..--]
  __fc_stdout ∈ {{ NULL ; &S___fc_stdout[0] }}
  graph ∈ ESCAPINGADDR
  grades ∈ ESCAPINGADDR
  stack ∈ {0}
  scc ∈ ESCAPINGADDR
  dist ∈ ESCAPINGADDR
  low ∈ ESCAPINGADDR
  onStack ∈ ESCAPINGADDR
  visited ∈ [0..2147483647]
  color ∈ ESCAPINGADDR
  __retres ∈ {0}
  S___fc_stdin[0..1] ∈ [--..--]
  S___fc_stdout[0..1] ∈ [--..--]
  __malloc_w_can_fail_malloc_l11_2[bits 0 to 31] ∈
                                  [-2147483648..2147483646] or UNINITIALIZED
                                  [4..7] ∈ UNINITIALIZED
                                  [bits 64 to 127] ∈
                                  {{ NULL ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_2 ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_3 }} or UNINITIALIZED or ESCAPINGADDR
  __malloc_w_can_fail_malloc_l11_3[bits 0 to 31] ∈
                                  [-2147483648..2147483646] or UNINITIALIZED
                                  [4..7] ∈ UNINITIALIZED
                                  [bits 64 to 127] ∈
                                  {{ NULL ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_2 ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_3 }} or UNINITIALIZED or ESCAPINGADDR
  __malloc_w_can_fail_malloc_l11_8[bits 0 to 31] ∈
                                  [0..2147483646] or UNINITIALIZED
                                  [4..7] ∈ UNINITIALIZED
                                  [bits 64 to 127] ∈
                                  {{ NULL ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_8 }} or UNINITIALIZED or ESCAPINGADDR
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  20 functions analyzed (out of 25): 80% coverage.
  In these functions, 227 statements reached (out of 227): 100% coverage.
  ----------------------------------------------------------------------------
  Some errors and warnings have been raised during the analysis:
    by the Eva analyzer:      2 errors    0 warnings
    by the Frama-C kernel:    0 errors    0 warnings
  ----------------------------------------------------------------------------
  114 alarms generated by the analysis:
      53 invalid memory accesses
      49 accesses to uninitialized left-values
       8 escaping addresses
       4 integer overflows
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    25 valid     0 unknown     0 invalid     25 total
  100% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[eva] User Error: Deferred error message was emitted during execution. See above messages for more information.
[kernel] Plug-in eva aborted: invalid user input.
