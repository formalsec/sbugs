[report] Monitoring events
[report] Loading '/home/fmarques/sbugs/projects/configs/frama-c_report_rules.json'
[kernel] Parsing /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al150/al150.c (with preprocessing)
[kernel:parser:decimal-float] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:10: 
  Floating-point constant 0.10 is not represented exactly. Will use 0x1.999999999999ap-4.
[kernel:parser:decimal-float] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:17: 
  Floating-point constant 0.10 is not represented exactly. Will use 0x1.999999999999ap-4.
[kernel:parser:decimal-float] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:24: 
  Floating-point constant 0.10 is not represented exactly. Will use 0x1.999999999999ap-4.
[eva] Analyzing a complete application starting at main
[eva] Computing initial state
[eva] Initial state computed
[eva:initial-state] Values of globals at initialization
  new ∈ {0}
  aux2 ∈ {0}
  aux ∈ {0}
  G ∈ {0}
  visited ∈ {0}
  d ∈ {0}
  low ∈ {0}
  est ∈ {0}
  highest_est ∈ {-2147483648}
  scc_counter ∈ {0}
  scc ∈ {0}
  scc_highest_est ∈ {0}
  bridges ∈ {0}
  top ∈ {0}
[eva] using specification for function scanf_va_1
[eva] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al150/al150.c:199: 
  starting to merge loop iterations
[eva] using specification for function time
[eva] using specification for function srand
[eva] using specification for function rand
[eva] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:11: 
  allocating variable __malloc_can_fail_malloc_l11
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al150/al150.c:71: 
  out of bounds write. assert \valid(&G->V);
[eva] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:11: 
  allocating variable __malloc_can_fail_malloc_l11_0
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al150/al150.c:75: 
  out of bounds write. assert \valid(G->adj + v);
[eva] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al150/al150.c:74: 
  starting to merge loop iterations
[eva] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:11: 
  allocating variable __malloc_can_fail_malloc_l11_1
[eva] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:11: 
  allocating variable __malloc_can_fail_malloc_l11_2
[eva] using specification for function scanf_va_2
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al150/al150.c:209: 
  function scanf_va_2: precondition \valid(param0) got status unknown.
[eva] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al150/al150.c:208: 
  starting to merge loop iterations
[eva] using specification for function scanf_va_3
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al150/al150.c:81: 
  signed overflow. assert -2147483648 ≤ v - 1;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al150/al150.c:81: 
  accessing uninitialized left-value.
  assert \initialized(G_0->adj + (int)(v - 1));
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al150/al150.c:81: 
  out of bounds read. assert \valid_read(G_0->adj + (int)(v - 1));
[eva] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:11: 
  allocating variable __malloc_can_fail_malloc_l11_3
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al150/al150.c:37: 
  out of bounds write. assert \valid(&x->v);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al150/al150.c:81: 
  out of bounds write. assert \valid(G_0->adj + (int)(v - 1));
[eva] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al150/al150.c:213: 
  starting to merge loop iterations
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al150/al150.c:82: 
  signed overflow. assert G_0->E + 1 ≤ 2147483647;
[eva] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:11: 
  allocating variable __malloc_can_fail_malloc_l11_4
[eva] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:11: 
  allocating variable __malloc_can_fail_malloc_l11_5
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al150/al150.c:187: 
  out of bounds write. assert \valid(d + u);
[eva] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al150/al150.c:186: 
  starting to merge loop iterations
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al150/al150.c:189: 
  accessing uninitialized left-value. assert \initialized(d + u);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al150/al150.c:189: 
  out of bounds read. assert \valid_read(d + u);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al150/al150.c:145: 
  out of bounds write. assert \valid(low + u);
[eva] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:11: 
  allocating variable __malloc_can_fail_malloc_l11_6
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al150/al150.c:99: 
  out of bounds write. assert \valid(&new_0->value);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al150/al150.c:150: 
  accessing uninitialized left-value. assert \initialized(G->adj + u);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al150/al150.c:150: 
  out of bounds read. assert \valid_read(G->adj + u);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al150/al150.c:151: 
  accessing uninitialized left-value. assert \initialized(&i->v);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al150/al150.c:151: 
  signed overflow. assert -2147483648 ≤ i->v - 1;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al150/al150.c:151: 
  accessing uninitialized left-value. assert \initialized(d + (int)(i->v - 1));
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al150/al150.c:151: 
  out of bounds read. assert \valid_read(d + (int)(i->v - 1));
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al150/al150.c:151: 
  accessing uninitialized left-value. assert \initialized(&i->v);
[eva] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al150/al150.c:125: 
  starting to merge loop iterations
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al150/al150.c:152: 
  accessing uninitialized left-value. assert \initialized(&i->v);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al150/al150.c:152: 
  signed overflow. assert -2147483648 ≤ i->v - 1;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al150/al150.c:152: 
  accessing uninitialized left-value. assert \initialized(d + (int)(i->v - 1));
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al150/al150.c:152: 
  out of bounds read. assert \valid_read(d + (int)(i->v - 1));
[eva:recursion] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al150/al150.c:153: 
  detected recursive call of function Tarjan_Visit.
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al150/al150.c:153: 
  accessing uninitialized left-value. assert \initialized(&i->v);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al150/al150.c:153: 
  signed overflow. assert -2147483648 ≤ i->v - 1;
[eva] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al150/al150.c:153: User Error: 
  Recursive call to Tarjan_Visit without assigns clause.
  Generating probably incomplete assigns to interpret the call. Try to increase
  the -eva-unroll-recursive-calls parameter or write a correct specification
  for function Tarjan_Visit.
[kernel:annot:missing-spec] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al150/al150.c:143: 
  Neither code nor specification for function Tarjan_Visit, generating default assigns from the prototype
[eva] using specification for function Tarjan_Visit
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al150/al150.c:154: 
  accessing uninitialized left-value. assert \initialized(&i->v);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al150/al150.c:154: 
  signed overflow. assert -2147483648 ≤ i->v - 1;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al150/al150.c:154: 
  accessing uninitialized left-value.
  assert \initialized(low + (int)(i->v - 1));
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al150/al150.c:154: 
  out of bounds read. assert \valid_read(low + (int)(i->v - 1));
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al150/al150.c:154: 
  accessing uninitialized left-value. assert \initialized(&i->v);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al150/al150.c:154: 
  signed overflow. assert -2147483648 ≤ i->v - 1;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al150/al150.c:154: 
  accessing uninitialized left-value.
  assert \initialized(low + (int)(i->v - 1));
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al150/al150.c:154: 
  out of bounds read. assert \valid_read(low + (int)(i->v - 1));
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al150/al150.c:155: 
  accessing uninitialized left-value. assert \initialized(&i->v);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al150/al150.c:155: 
  signed overflow. assert -2147483648 ≤ i->v - 1;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al150/al150.c:155: 
  accessing uninitialized left-value.
  assert \initialized(low + (int)(i->v - 1));
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al150/al150.c:155: 
  out of bounds read. assert \valid_read(low + (int)(i->v - 1));
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al150/al150.c:158: 
  accessing uninitialized left-value. assert \initialized(&i->v);
[eva] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:11: 
  allocating variable __malloc_can_fail_malloc_l11_7
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al150/al150.c:57: 
  out of bounds write. assert \valid(&new_0->v);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al150/al150.c:150: 
  accessing uninitialized left-value. assert \initialized(&i->next);
[eva] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al150/al150.c:150: 
  starting to merge loop iterations
[eva] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al150/al150.c:153: 
  Using specification of function Tarjan_Visit for recursive calls.
  Analysis of function Tarjan_Visit is thus incomplete and its soundness
  relies on the written specification.
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al150/al150.c:62: 
  out of bounds write. assert \valid(&tail->next);
[eva] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:11: 
  allocating variable __malloc_can_fail_malloc_l11_8
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al150/al150.c:165: 
  out of bounds write. assert \valid(scc + (int)(v - 1));
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al150/al150.c:166: 
  accessing uninitialized left-value. assert \initialized(est + (int)(v - 1));
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al150/al150.c:166: 
  out of bounds read. assert \valid_read(est + (int)(v - 1));
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al150/al150.c:45: 
  out of bounds write. assert \valid(&new->v);
[eva] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al150/al150.c:188: 
  starting to merge loop iterations
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al150/al150.c:154: 
  accessing uninitialized left-value. assert \initialized(low + u);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al150/al150.c:154: 
  accessing uninitialized left-value. assert \initialized(low + u);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al150/al150.c:155: 
  accessing uninitialized left-value. assert \initialized(d + u);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al150/al150.c:156: 
  accessing uninitialized left-value. assert \initialized(&i->v);
[eva] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:11: 
  allocating variable __malloc_can_fail_malloc_l11_9
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al150/al150.c:161: 
  accessing uninitialized left-value. assert \initialized(d + u);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al150/al150.c:161: 
  accessing uninitialized left-value. assert \initialized(low + u);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al150/al150.c:166: 
  accessing uninitialized left-value. assert \initialized(est + (int)(v - 1));
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al150/al150.c:170: 
  out of bounds write. assert \valid(scc + (int)(v - 1));
[kernel] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al150/al150.c:170: 
  all target addresses were invalid. This path is assumed to be dead.
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al150/al150.c:49: 
  out of bounds write. assert \valid(&tail->next);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al150/al150.c:144: 
  out of bounds write. assert \valid(d + u);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al150/al150.c:126: 
  accessing uninitialized left-value. assert \initialized(&t->value);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al150/al150.c:130: 
  accessing uninitialized left-value. assert \initialized(&t->next);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al150/al150.c:154: 
  out of bounds read. assert \valid_read(low + u);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al150/al150.c:154: 
  out of bounds write. assert \valid(low + u);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al150/al150.c:154: 
  out of bounds write. assert \valid(low + u);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al150/al150.c:155: 
  out of bounds read. assert \valid_read(d + u);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al150/al150.c:161: 
  out of bounds read. assert \valid_read(d + u);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al150/al150.c:161: 
  out of bounds read. assert \valid_read(low + u);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al150/al150.c:112: 
  accessing uninitialized left-value. assert \initialized(&top->value);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al150/al150.c:114: 
  accessing uninitialized left-value. assert \initialized(&top->next);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al150/al150.c:166: 
  out of bounds read. assert \valid_read(est + (int)(v - 1));
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al150/al150.c:105: 
  accessing left-value that contains escaping addresses.
  assert ¬\dangling(&top);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al150/al150.c:112: 
  out of bounds read. assert \valid_read(&top->value);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al150/al150.c:114: 
  accessing left-value that contains escaping addresses.
  assert ¬\dangling(&top->next);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al150/al150.c:171: 
  accessing uninitialized left-value. assert \initialized(est + (int)(v - 1));
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al150/al150.c:171: 
  out of bounds read. assert \valid_read(est + (int)(v - 1));
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al150/al150.c:171: 
  accessing uninitialized left-value. assert \initialized(est + (int)(v - 1));
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al150/al150.c:171: 
  out of bounds read. assert \valid_read(est + (int)(v - 1));
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al150/al150.c:100: 
  accessing left-value that contains escaping addresses.
  assert ¬\dangling(&top);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al150/al150.c:130: 
  accessing left-value that contains escaping addresses.
  assert ¬\dangling(&t->next);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al150/al150.c:146: 
  signed overflow. assert visited + 1 ≤ 2147483647;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al150/al150.c:175: 
  signed overflow. assert scc_counter + 1 ≤ 2147483647;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al150/al150.c:225: 
  accessing uninitialized left-value. assert \initialized(&e->v);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al150/al150.c:225: 
  accessing uninitialized left-value. assert \initialized(&e->w);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al150/al150.c:225: 
  signed overflow. assert -2147483648 ≤ e->w - 1;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al150/al150.c:225: 
  accessing uninitialized left-value.
  assert \initialized(scc + (int)(e->v - 1));
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al150/al150.c:225: 
  accessing uninitialized left-value.
  assert \initialized(scc + (int)(e->w - 1));
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al150/al150.c:225: 
  out of bounds read. assert \valid_read(scc + (int)(e->v - 1));
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al150/al150.c:225: 
  out of bounds read. assert \valid_read(scc + (int)(e->w - 1));
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al150/al150.c:225: 
  accessing uninitialized left-value.
  assert \initialized(&(*(scc + (int)(e->v - 1)))->v);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al150/al150.c:225: 
  accessing uninitialized left-value.
  assert \initialized(&(*(scc + (int)(e->w - 1)))->v);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al150/al150.c:225: 
  out of bounds read. assert \valid_read(&(*(scc + (int)(e->v - 1)))->v);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al150/al150.c:225: 
  out of bounds read. assert \valid_read(&(*(scc + (int)(e->w - 1)))->v);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al150/al150.c:225: 
  accessing uninitialized left-value. assert \initialized(&e->v);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al150/al150.c:225: 
  accessing uninitialized left-value.
  assert \initialized(scc + (int)(e->v - 1));
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al150/al150.c:225: 
  out of bounds read. assert \valid_read(scc + (int)(e->v - 1));
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al150/al150.c:225: 
  out of bounds write. assert \valid(&(*(scc + (int)(e->v - 1)))->v);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al150/al150.c:225: 
  accessing uninitialized left-value.
  assert \initialized(&(*(scc + (int)(e->v - 1)))->v);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al150/al150.c:225: 
  accessing uninitialized left-value. assert \initialized(&e->v);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al150/al150.c:225: 
  accessing uninitialized left-value.
  assert \initialized(scc + (int)(e->v - 1));
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al150/al150.c:225: 
  out of bounds read. assert \valid_read(scc + (int)(e->v - 1));
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al150/al150.c:225: 
  out of bounds write. assert \valid(&(*(scc + (int)(e->v - 1)))->v);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al150/al150.c:225: 
  accessing uninitialized left-value. assert \initialized(&e->w);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al150/al150.c:225: 
  signed overflow. assert -2147483648 ≤ e->w - 1;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al150/al150.c:225: 
  accessing uninitialized left-value.
  assert \initialized(scc + (int)(e->w - 1));
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al150/al150.c:225: 
  out of bounds read. assert \valid_read(scc + (int)(e->w - 1));
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al150/al150.c:225: 
  accessing uninitialized left-value.
  assert \initialized(&(*(scc + (int)(e->w - 1)))->v);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al150/al150.c:225: 
  out of bounds read. assert \valid_read(&(*(scc + (int)(e->w - 1)))->v);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al150/al150.c:224: 
  accessing uninitialized left-value. assert \initialized(&e->next);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al150/al150.c:230: 
  accessing uninitialized left-value. assert \initialized(scc + i);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al150/al150.c:230: 
  out of bounds read. assert \valid_read(scc + i);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al150/al150.c:230: 
  accessing uninitialized left-value. assert \initialized(&(*(scc + i))->v);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al150/al150.c:230: 
  out of bounds read. assert \valid_read(&(*(scc + i))->v);
[eva] using specification for function printf_va_1
[eva] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al150/al150.c:229: 
  starting to merge loop iterations
[eva] done for function main
[scope:rm_asserts] removing 38 assertion(s)
[eva] ====== VALUES COMPUTED ======
[eva:final-states] Values at end of function EDGE:
  e{.v; .w} ∈ [--..--]
   .next ∈ UNINITIALIZED
[eva:final-states] Values at end of function InsertEnd:
  aux2 ∈ {{ (struct node *)&__malloc_w_can_fail_malloc_l11_8 }}
  __retres ∈ {{ (struct node *)&__malloc_w_can_fail_malloc_l11_8 }}
  __malloc_w_can_fail_malloc_l11_8[0..3] ∈ [--..--] or UNINITIALIZED
                                  [4..7] ∈ UNINITIALIZED
                                  [bits 64 to 127] ∈
                                  {{ NULL ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_8 }} or UNINITIALIZED
[eva:final-states] Values at end of function STACKfind_index:
  t ∈ {{ NULL ; (struct stack_node *)&__malloc_w_can_fail_malloc_l11_6 }}
  f ∈ {0; 1}
  __retres ∈
          {{ NULL ; (struct stack_node *)&__malloc_w_can_fail_malloc_l11_6 }}
[eva:final-states] Values at end of function STACKinit:
  top ∈ {0}
[eva:final-states] Values at end of function STACKis_empty:
  __retres ∈ {0; 1}
[eva:final-states] Values at end of function STACKpop:
  value ∈ [1..2147483647] or UNINITIALIZED
  old ∈
     {{ (struct stack_node *)&__malloc_w_can_fail_malloc_l11_6 }} or UNINITIALIZED or ESCAPINGADDR
  top ∈
     {{ NULL ; (struct stack_node *)&__malloc_w_can_fail_malloc_l11_6 }} or ESCAPINGADDR
  __retres ∈ [-1..2147483647]
  __malloc_w_can_fail_malloc_l11_6[bits 0 to 31] ∈
                                  [1..2147483647] or UNINITIALIZED
                                  [4..7] ∈ UNINITIALIZED
                                  [bits 64 to 127] ∈
                                  {{ NULL ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_6 }} or UNINITIALIZED or ESCAPINGADDR
[eva:final-states] Values at end of function can_fail_malloc:
  __fc_heap_status ∈ [--..--]
  __fc_random_counter ∈ [--..--]
  fail ∈ [0. .. 1.]
  __retres ∈
          {{ NULL ; (void *)&__malloc_can_fail_malloc_l11 ;
             (void *)&__malloc_can_fail_malloc_l11_0 ;
             (void *)&__malloc_can_fail_malloc_l11_1 ;
             (void *)&__malloc_can_fail_malloc_l11_2 ;
             (void *)&__malloc_w_can_fail_malloc_l11_3 ;
             (void *)&__malloc_can_fail_malloc_l11_4 ;
             (void *)&__malloc_can_fail_malloc_l11_5 ;
             (void *)&__malloc_w_can_fail_malloc_l11_6 ;
             (void *)&__malloc_w_can_fail_malloc_l11_7 ;
             (void *)&__malloc_w_can_fail_malloc_l11_8 ;
             (void *)&__malloc_w_can_fail_malloc_l11_9 }}
[eva:final-states] Values at end of function GRAPHinit:
  __fc_heap_status ∈ [--..--]
  __fc_random_counter ∈ [--..--]
  G ∈ {{ (struct graph *)&__malloc_can_fail_malloc_l11 }}
  v ∈ [2..2147483647]
  __malloc_can_fail_malloc_l11[bits 0 to 31] ∈ [2..2147483647]
                              [4..7] ∈ {0}
                              [bits 64 to 127] ∈
                              {{ NULL ;
                                 (? *)&__malloc_can_fail_malloc_l11_0 }}
  __malloc_can_fail_malloc_l11_0[0..17179869175] ∈ {0} or UNINITIALIZED
[eva:final-states] Values at end of function InsertBegin:
  __fc_heap_status ∈ [--..--]
  __fc_random_counter ∈ [--..--]
  x ∈ {{ (struct node *)&__malloc_w_can_fail_malloc_l11_3 }}
  __malloc_w_can_fail_malloc_l11_3[0..3] ∈ [--..--] or UNINITIALIZED
                                  [4..7] ∈ UNINITIALIZED
                                  [bits 64 to 127] ∈
                                  {{ NULL ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_3 }} or UNINITIALIZED
[eva:final-states] Values at end of function GRAPHinsertE:
  __fc_heap_status ∈ [--..--]
  __fc_random_counter ∈ [--..--]
  v ∈ [1..2147483647]
  w ∈ [--..--]
  __malloc_can_fail_malloc_l11[bits 0 to 31] ∈ [2..2147483647]
                              [bits 32 to 63] ∈ [1..2147483647]
                              [bits 64 to 127] ∈
                              {{ (? *)&__malloc_can_fail_malloc_l11_0 }}
  __malloc_can_fail_malloc_l11_0[bits 0 to 137438953407]# ∈
                                {{ NULL ;
                                   (? *)&__malloc_w_can_fail_malloc_l11_3 }} or UNINITIALIZED repeated %64 
  __malloc_w_can_fail_malloc_l11_3[0..3] ∈ [--..--] or UNINITIALIZED
                                  [4..7] ∈ UNINITIALIZED
                                  [bits 64 to 127] ∈
                                  {{ NULL ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_3 }} or UNINITIALIZED
[eva:final-states] Values at end of function InsertEndEdge:
  __fc_heap_status ∈ [--..--]
  __fc_random_counter ∈ [--..--]
  aux ∈
     {{ (Edge *)&__malloc_w_can_fail_malloc_l11_7 ;
        (Edge *)&__malloc_w_can_fail_malloc_l11_9 }}
  new_0 ∈
       {{ (Edge *)&__malloc_w_can_fail_malloc_l11_7 ;
          (Edge *)&__malloc_w_can_fail_malloc_l11_9 }}
  __retres ∈
          {{ (Edge *)&__malloc_w_can_fail_malloc_l11_7 ;
             (Edge *)&__malloc_w_can_fail_malloc_l11_9 }}
  __malloc_w_can_fail_malloc_l11_7[bits 0 to 31] ∈
                                  [1..2147483647] or UNINITIALIZED
                                  [4..7] ∈ [--..--] or UNINITIALIZED
                                  [bits 64 to 127] ∈
                                  {{ NULL ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_7 ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_9 }} or UNINITIALIZED
  __malloc_w_can_fail_malloc_l11_9[bits 0 to 31] ∈
                                  [1..2147483647] or UNINITIALIZED
                                  [4..7] ∈ [--..--] or UNINITIALIZED
                                  [bits 64 to 127] ∈
                                  {{ NULL ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_7 ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_9 }} or UNINITIALIZED
[eva:final-states] Values at end of function STACKpush:
  __fc_heap_status ∈ [--..--]
  __fc_random_counter ∈ [--..--]
  new_0 ∈ {{ (struct stack_node *)&__malloc_w_can_fail_malloc_l11_6 }}
  top ∈ {{ (struct stack_node *)&__malloc_w_can_fail_malloc_l11_6 }}
  __malloc_w_can_fail_malloc_l11_6[bits 0 to 31] ∈
                                  [1..2147483647] or UNINITIALIZED
                                  [4..7] ∈ UNINITIALIZED
                                  [bits 64 to 127] ∈
                                  {{ NULL ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_6 }} or UNINITIALIZED or ESCAPINGADDR
[eva:final-states] Values at end of function Tarjan_Visit:
  __fc_heap_status ∈ [--..--]
  __fc_random_counter ∈ [--..--]
  new ∈ {{ NULL ; (struct node *)&__malloc_w_can_fail_malloc_l11_8 }}
  aux2 ∈ {{ NULL ; (struct node *)&__malloc_w_can_fail_malloc_l11_8 }}
  aux ∈
     {{ NULL ; (Edge *)&__malloc_w_can_fail_malloc_l11_7 ;
        (Edge *)&__malloc_w_can_fail_malloc_l11_9 }}
  visited ∈ [1..2147483647]
  highest_est ∈ {-2147483648}
  scc_counter ∈ [0..2147483647]
  scc_highest_est ∈
                 {{ NULL ;
                    (struct node *)&__malloc_w_can_fail_malloc_l11_8 }}
  bridges ∈
         {{ NULL ; (Edge *)&__malloc_w_can_fail_malloc_l11_7 ;
            (Edge *)&__malloc_w_can_fail_malloc_l11_9 }}
  i ∈ {0}
  top ∈
     {{ NULL ; (struct stack_node *)&__malloc_w_can_fail_malloc_l11_6 }} or ESCAPINGADDR
  __malloc_can_fail_malloc_l11_2[bits 0 to 137438953407]# ∈
                                {{ NULL ;
                                   (? *)&__malloc_w_can_fail_malloc_l11_8 }} or UNINITIALIZED repeated %64 
  __malloc_can_fail_malloc_l11_4[bits 0 to 68719476703]# ∈
                                [0..2147483647] or UNINITIALIZED repeated %32 
  __malloc_can_fail_malloc_l11_5[bits 0 to 68719476703]# ∈
                                [0..2147483647] or UNINITIALIZED repeated %32 
  __malloc_w_can_fail_malloc_l11_6[bits 0 to 31] ∈
                                  [1..2147483647] or UNINITIALIZED
                                  [4..7] ∈ UNINITIALIZED
                                  [bits 64 to 127] ∈
                                  {{ NULL ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_6 }} or UNINITIALIZED or ESCAPINGADDR
  __malloc_w_can_fail_malloc_l11_7[bits 0 to 31] ∈
                                  [1..2147483647] or UNINITIALIZED
                                  [4..7] ∈ [--..--] or UNINITIALIZED
                                  [bits 64 to 127] ∈
                                  {{ NULL ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_7 ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_9 }} or UNINITIALIZED
  __malloc_w_can_fail_malloc_l11_8[0..3] ∈ [--..--] or UNINITIALIZED
                                  [4..7] ∈ UNINITIALIZED
                                  [bits 64 to 127] ∈
                                  {{ NULL ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_8 }} or UNINITIALIZED
  __malloc_w_can_fail_malloc_l11_9[bits 0 to 31] ∈
                                  [1..2147483647] or UNINITIALIZED
                                  [4..7] ∈ [--..--] or UNINITIALIZED
                                  [bits 64 to 127] ∈
                                  {{ NULL ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_7 ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_9 }} or UNINITIALIZED
[eva:final-states] Values at end of function SCC_Tarjan:
  __fc_heap_status ∈ [--..--]
  __fc_random_counter ∈ [--..--]
  new ∈ {{ NULL ; (struct node *)&__malloc_w_can_fail_malloc_l11_8 }}
  aux2 ∈ {{ NULL ; (struct node *)&__malloc_w_can_fail_malloc_l11_8 }}
  aux ∈
     {{ NULL ; (Edge *)&__malloc_w_can_fail_malloc_l11_7 ;
        (Edge *)&__malloc_w_can_fail_malloc_l11_9 }}
  visited ∈ [0..2147483647]
  highest_est ∈ {-2147483648}
  scc_counter ∈ [0..2147483647]
  scc_highest_est ∈
                 {{ NULL ;
                    (struct node *)&__malloc_w_can_fail_malloc_l11_8 }}
  bridges ∈
         {{ NULL ; (Edge *)&__malloc_w_can_fail_malloc_l11_7 ;
            (Edge *)&__malloc_w_can_fail_malloc_l11_9 }}
  u ∈ [2..2147483647]
  top ∈
     {{ NULL ; (struct stack_node *)&__malloc_w_can_fail_malloc_l11_6 }} or ESCAPINGADDR
  __malloc_can_fail_malloc_l11_2[bits 0 to 137438953407]# ∈
                                {{ NULL ;
                                   (? *)&__malloc_w_can_fail_malloc_l11_8 }} or UNINITIALIZED repeated %64 
  __malloc_can_fail_malloc_l11_4[bits 0 to 68719476703]# ∈
                                [0..2147483647] or UNINITIALIZED repeated %32 
  __malloc_can_fail_malloc_l11_5[bits 0 to 68719476703]# ∈
                                [0..2147483647] or UNINITIALIZED repeated %32 
  __malloc_w_can_fail_malloc_l11_6[bits 0 to 31] ∈
                                  [1..2147483647] or UNINITIALIZED
                                  [4..7] ∈ UNINITIALIZED
                                  [bits 64 to 127] ∈
                                  {{ NULL ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_6 }} or UNINITIALIZED or ESCAPINGADDR
  __malloc_w_can_fail_malloc_l11_7[bits 0 to 31] ∈
                                  [1..2147483647] or UNINITIALIZED
                                  [4..7] ∈ [--..--] or UNINITIALIZED
                                  [bits 64 to 127] ∈
                                  {{ NULL ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_7 ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_9 }} or UNINITIALIZED
  __malloc_w_can_fail_malloc_l11_8[0..3] ∈ [--..--] or UNINITIALIZED
                                  [4..7] ∈ UNINITIALIZED
                                  [bits 64 to 127] ∈
                                  {{ NULL ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_8 }} or UNINITIALIZED
  __malloc_w_can_fail_malloc_l11_9[bits 0 to 31] ∈
                                  [1..2147483647] or UNINITIALIZED
                                  [4..7] ∈ [--..--] or UNINITIALIZED
                                  [bits 64 to 127] ∈
                                  {{ NULL ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_7 ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_9 }} or UNINITIALIZED
[eva:final-states] Values at end of function main:
  __fc_heap_status ∈ [--..--]
  __fc_random_counter ∈ [--..--]
  new ∈ {{ NULL ; (struct node *)&__malloc_w_can_fail_malloc_l11_8 }}
  aux2 ∈ {{ NULL ; (struct node *)&__malloc_w_can_fail_malloc_l11_8 }}
  aux ∈
     {{ NULL ; (Edge *)&__malloc_w_can_fail_malloc_l11_7 ;
        (Edge *)&__malloc_w_can_fail_malloc_l11_9 }}
  G ∈ {{ (struct graph *)&__malloc_can_fail_malloc_l11 }}
  visited ∈ [0..2147483647]
  d ∈ {{ NULL ; (int *)&__malloc_can_fail_malloc_l11_4 }}
  low ∈ {{ NULL ; (int *)&__malloc_can_fail_malloc_l11_5 }}
  est ∈ {{ NULL ; (int *)&__malloc_can_fail_malloc_l11_1 }}
  highest_est ∈ {-2147483648}
  scc_counter ∈ [0..2147483647]
  scc ∈ {{ NULL ; (link *)&__malloc_can_fail_malloc_l11_2 }}
  scc_highest_est ∈
                 {{ NULL ;
                    (struct node *)&__malloc_w_can_fail_malloc_l11_8 }}
  bridges ∈
         {{ NULL ; (Edge *)&__malloc_w_can_fail_malloc_l11_7 ;
            (Edge *)&__malloc_w_can_fail_malloc_l11_9 }}
  N ∈ [2..2147483647]
  M ∈ [1..2147483647]
  G_0 ∈ {{ (struct graph *)&__malloc_can_fail_malloc_l11 }}
  i ∈ [2..2147483647]
  v ∈ [--..--] or UNINITIALIZED
  w ∈ [--..--] or UNINITIALIZED
  e ∈ {0}
  top ∈
     {{ NULL ; (struct stack_node *)&__malloc_w_can_fail_malloc_l11_6 }} or ESCAPINGADDR
  __retres ∈ {0}
  S___fc_stdin[0..1] ∈ [--..--]
  S___fc_stdout[0..1] ∈ [--..--]
  __malloc_can_fail_malloc_l11[bits 0 to 31] ∈ [2..2147483647]
                              [bits 32 to 63] ∈ [0..2147483647]
                              [bits 64 to 127] ∈
                              {{ NULL ;
                                 (? *)&__malloc_can_fail_malloc_l11_0 }}
  __malloc_can_fail_malloc_l11_0[bits 0 to 137438953407]# ∈
                                {{ NULL ;
                                   (? *)&__malloc_w_can_fail_malloc_l11_3 }} or UNINITIALIZED repeated %64 
  __malloc_can_fail_malloc_l11_1[0..8589934587] ∈ [--..--] or UNINITIALIZED
  __malloc_can_fail_malloc_l11_2[bits 0 to 137438953407]# ∈
                                {{ NULL ;
                                   (? *)&__malloc_w_can_fail_malloc_l11_8 }} or UNINITIALIZED repeated %64 
  __malloc_w_can_fail_malloc_l11_3[0..3] ∈ [--..--] or UNINITIALIZED
                                  [4..7] ∈ UNINITIALIZED
                                  [bits 64 to 127] ∈
                                  {{ NULL ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_3 }} or UNINITIALIZED
  __malloc_can_fail_malloc_l11_4[bits 0 to 68719476703]# ∈
                                [0..2147483647] or UNINITIALIZED repeated %32 
  __malloc_can_fail_malloc_l11_5[bits 0 to 68719476703]# ∈
                                [0..2147483647] or UNINITIALIZED repeated %32 
  __malloc_w_can_fail_malloc_l11_6[bits 0 to 31] ∈
                                  [1..2147483647] or UNINITIALIZED
                                  [4..7] ∈ UNINITIALIZED
                                  [bits 64 to 127] ∈
                                  {{ NULL ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_6 }} or UNINITIALIZED or ESCAPINGADDR
  __malloc_w_can_fail_malloc_l11_7[bits 0 to 31] ∈
                                  [1..2147483647] or UNINITIALIZED
                                  [4..7] ∈ [--..--] or UNINITIALIZED
                                  [bits 64 to 127] ∈
                                  {{ NULL ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_7 ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_9 }} or UNINITIALIZED
  __malloc_w_can_fail_malloc_l11_8[0..3] ∈ [--..--] or UNINITIALIZED
                                  [4..7] ∈ UNINITIALIZED
                                  [bits 64 to 127] ∈
                                  {{ NULL ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_8 }} or UNINITIALIZED
  __malloc_w_can_fail_malloc_l11_9[bits 0 to 31] ∈
                                  [1..2147483647] or UNINITIALIZED
                                  [4..7] ∈ [--..--] or UNINITIALIZED
                                  [bits 64 to 127] ∈
                                  {{ NULL ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_7 ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_9 }} or UNINITIALIZED
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  15 functions analyzed (out of 17): 88% coverage.
  In these functions, 208 statements reached (out of 208): 100% coverage.
  ----------------------------------------------------------------------------
  Some errors and warnings have been raised during the analysis:
    by the Eva analyzer:      1 error    0 warnings
    by the Frama-C kernel:    0 errors    0 warnings
  ----------------------------------------------------------------------------
  109 alarms generated by the analysis:
      48 accesses to uninitialized left-values
      45 invalid memory accesses
      12 integer overflows
       4 escaping addresses
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    10 valid     1 unknown     0 invalid     11 total
  90% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[eva] User Error: Deferred error message was emitted during execution. See above messages for more information.
[kernel] Plug-in eva aborted: invalid user input.
