[report] Monitoring events
[report] Loading '/home/fmarques/sbugs/projects/configs/frama-c_report_rules.json'
[kernel] Parsing /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al156/projeto1.c (with preprocessing)
[kernel:parser:decimal-float] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:10: 
  Floating-point constant 0.10 is not represented exactly. Will use 0x1.999999999999ap-4.
[kernel:parser:decimal-float] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:17: 
  Floating-point constant 0.10 is not represented exactly. Will use 0x1.999999999999ap-4.
[kernel:parser:decimal-float] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:24: 
  Floating-point constant 0.10 is not represented exactly. Will use 0x1.999999999999ap-4.
[eva] Analyzing a complete application starting at main
[eva] Computing initial state
[eva] Initial state computed
[eva:initial-state] Values of globals at initialization
  
[eva] using specification for function scanf_va_2
[eva] using specification for function time
[eva] using specification for function srand
[eva] using specification for function rand
[eva] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:11: 
  allocating variable __malloc_can_fail_malloc_l11
[eva] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:11: 
  allocating variable __malloc_can_fail_malloc_l11_0
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al156/projeto1.c:79: 
  out of bounds write. assert \valid(adj_matrix + r);
[eva] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al156/projeto1.c:78: 
  starting to merge loop iterations
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al156/projeto1.c:84: 
  accessing uninitialized left-value. assert \initialized(adj_matrix + r);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al156/projeto1.c:84: 
  out of bounds read. assert \valid_read(adj_matrix + r);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al156/projeto1.c:84: 
  out of bounds write. assert \valid(*(adj_matrix + r) + c);
[eva] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al156/projeto1.c:83: 
  starting to merge loop iterations
[eva] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al156/projeto1.c:82: 
  starting to merge loop iterations
[eva] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:11: 
  allocating variable __malloc_can_fail_malloc_l11_1
[eva] using specification for function scanf_va_1
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al156/projeto1.c:17: 
  out of bounds write. assert \valid(v + i);
[eva] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al156/projeto1.c:15: 
  starting to merge loop iterations
[eva] using specification for function scanf_va_3
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al156/projeto1.c:92: 
  signed overflow. assert -2147483648 ≤ num1 - 1;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al156/projeto1.c:92: 
  signed overflow. assert -2147483648 ≤ num2 - 1;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al156/projeto1.c:92: 
  accessing uninitialized left-value.
  assert \initialized(adj_matrix + (int)(num1 - 1));
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al156/projeto1.c:92: 
  out of bounds read. assert \valid_read(adj_matrix + (int)(num1 - 1));
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al156/projeto1.c:92: 
  out of bounds write.
  assert \valid(*(adj_matrix + (int)(num1 - 1)) + (int)(num2 - 1));
[eva] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al156/projeto1.c:90: 
  starting to merge loop iterations
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al156/projeto1.c:60: 
  accessing uninitialized left-value. assert \initialized(r + i);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al156/projeto1.c:60: 
  out of bounds read. assert \valid_read(r + i);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al156/projeto1.c:60: 
  accessing uninitialized left-value. assert \initialized(*(r + i) + j);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al156/projeto1.c:60: 
  out of bounds read. assert \valid_read(*(r + i) + j);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al156/projeto1.c:60: 
  accessing uninitialized left-value. assert \initialized(a + i);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al156/projeto1.c:60: 
  accessing uninitialized left-value. assert \initialized(a + j);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al156/projeto1.c:60: 
  out of bounds read. assert \valid_read(a + i);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al156/projeto1.c:60: 
  out of bounds read. assert \valid_read(a + j);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al156/projeto1.c:61: 
  out of bounds write. assert \valid(a + i);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al156/projeto1.c:61: 
  out of bounds read. assert \valid_read(a + j);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al156/projeto1.c:45: 
  out of bounds read. assert \valid_read(r + j);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al156/projeto1.c:45: 
  accessing uninitialized left-value. assert \initialized(*(r + j) + valor);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al156/projeto1.c:45: 
  out of bounds read. assert \valid_read(a + j);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al156/projeto1.c:45: 
  out of bounds read. assert \valid_read(a + valor);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al156/projeto1.c:46: 
  out of bounds write. assert \valid(a + j);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al156/projeto1.c:46: 
  out of bounds read. assert \valid_read(a + valor);
[eva:recursion] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al156/projeto1.c:47: 
  detected recursive call of function percorreRela.
[eva] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al156/projeto1.c:47: User Error: 
  Recursive call to percorreRela without assigns clause.
  Generating probably incomplete assigns to interpret the call. Try to increase
  the -eva-unroll-recursive-calls parameter or write a correct specification
  for function percorreRela.
[kernel:annot:missing-spec] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al156/projeto1.c:42: 
  Neither code nor specification for function percorreRela, generating default assigns from the prototype
[eva] using specification for function percorreRela
[eva] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al156/projeto1.c:44: 
  starting to merge loop iterations
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al156/projeto1.c:45: 
  accessing uninitialized left-value. assert \initialized(r + j);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al156/projeto1.c:45: 
  out of bounds read. assert \valid_read(*(r + j) + valor);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al156/projeto1.c:45: 
  accessing uninitialized left-value. assert \initialized(a + j);
[eva] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al156/projeto1.c:47: 
  Using specification of function percorreRela for recursive calls.
  Analysis of function percorreRela is thus incomplete and its soundness
  relies on the written specification.
[eva] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al156/projeto1.c:59: 
  starting to merge loop iterations
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al156/projeto1.c:61: 
  accessing uninitialized left-value. assert \initialized(a + j);
[eva] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al156/projeto1.c:58: 
  starting to merge loop iterations
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al156/projeto1.c:45: 
  accessing uninitialized left-value. assert \initialized(a + valor);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al156/projeto1.c:46: 
  accessing uninitialized left-value. assert \initialized(a + valor);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al156/projeto1.c:34: 
  accessing uninitialized left-value. assert \initialized(v + i);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al156/projeto1.c:34: 
  out of bounds read. assert \valid_read(v + i);
[eva] using specification for function printf_va_1
[eva] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al156/projeto1.c:33: 
  starting to merge loop iterations
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al156/projeto1.c:26: 
  accessing uninitialized left-value. assert \initialized(v + i);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al156/projeto1.c:26: 
  out of bounds read. assert \valid_read(v + i);
[eva] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al156/projeto1.c:25: 
  starting to merge loop iterations
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al156/projeto1.c:26: 
  accessing left-value that contains escaping addresses.
  assert ¬\dangling(v + i);
[eva] done for function main
[scope:rm_asserts] removing 4 assertion(s)
[eva] ====== VALUES COMPUTED ======
[eva:final-states] Values at end of function freeRelaALun:
  v ∈ {{ NULL ; (int **)&__malloc_can_fail_malloc_l11 }} or ESCAPINGADDR
  i ∈ [0..2147483647]
  adj_matrix ∈
            {{ NULL ; (int **)&__malloc_can_fail_malloc_l11 }} or ESCAPINGADDR
  __malloc_can_fail_malloc_l11[bits 0 to 137438953407]# ∈
                              {{ NULL ;
                                 (? *)&__malloc_w_can_fail_malloc_l11_0 }} or UNINITIALIZED or ESCAPINGADDR repeated %64 
                              [17179869176..18446744073709551607] ∈
                              UNINITIALIZED
[eva:final-states] Values at end of function printvector1:
  i ∈ [0..2147483647]
  S___fc_stdout[0..1] ∈ [--..--]
[eva:final-states] Values at end of function can_fail_malloc:
  __fc_heap_status ∈ [--..--]
  __fc_random_counter ∈ [--..--]
  fail ∈ [0. .. 1.]
  __retres ∈
          {{ NULL ; (void *)&__malloc_can_fail_malloc_l11 ;
             (void *)&__malloc_w_can_fail_malloc_l11_0 ;
             (void *)&__malloc_can_fail_malloc_l11_1 }}
[eva:final-states] Values at end of function CriaVectorNotas:
  __fc_heap_status ∈ [--..--]
  __fc_random_counter ∈ [--..--]
  v ∈ {{ NULL ; (int *)&__malloc_can_fail_malloc_l11_1 }}
  i ∈ [0..2147483647]
  num ∈ [--..--] or UNINITIALIZED
  S___fc_stdin[0..1] ∈ [--..--]
  __malloc_can_fail_malloc_l11_1[0..8589934587] ∈ [--..--] or UNINITIALIZED
                                [8589934588..18446744073709551611] ∈
                                UNINITIALIZED
[eva:final-states] Values at end of function percorreRela:
  j ∈ [1..2147483647]
  __malloc_can_fail_malloc_l11_1[0..8589934587] ∈ [--..--] or UNINITIALIZED
                                [8589934588..18446744073709551611] ∈
                                UNINITIALIZED
[eva:final-states] Values at end of function estudoNota:
  i ∈ [0..2147483647]
  j ∈ [1..2147483647] or UNINITIALIZED
  S___fc_stdout[0..1] ∈ [--..--]
  __malloc_can_fail_malloc_l11_1[0..8589934587] ∈ [--..--] or UNINITIALIZED
                                [8589934588..18446744073709551611] ∈
                                UNINITIALIZED
[eva:final-states] Values at end of function main:
  __fc_heap_status ∈ [--..--]
  __fc_random_counter ∈ [--..--]
  num1 ∈ [1..2147483647] or UNINITIALIZED
  num2 ∈ [1..2147483647] or UNINITIALIZED
  i ∈ [0..2147483647]
  notas ∈
       {{ NULL ; (int *)&__malloc_can_fail_malloc_l11_1 }} or ESCAPINGADDR
  adj_matrix ∈
            {{ NULL ; (int **)&__malloc_can_fail_malloc_l11 }} or ESCAPINGADDR
  r ∈ [0..2147483647]
  c ∈ [1..2147483647] or UNINITIALIZED
  nodes ∈ [--..--]
  numrel ∈ [--..--]
  __retres ∈ {0}
  S___fc_stdin[0..1] ∈ [--..--]
  S___fc_stdout[0..1] ∈ [--..--]
  __malloc_can_fail_malloc_l11[bits 0 to 137438953407]# ∈
                              {{ NULL ;
                                 (? *)&__malloc_w_can_fail_malloc_l11_0 }} or UNINITIALIZED or ESCAPINGADDR repeated %64 
                              [17179869176..18446744073709551607] ∈
                              UNINITIALIZED
  __malloc_w_can_fail_malloc_l11_0[bits 0 to 68719476703]# ∈
                                  {0; 1} or UNINITIALIZED repeated %32 
  __malloc_can_fail_malloc_l11_1[0..8589934587] ∈ [--..--] or UNINITIALIZED
                                [8589934588..18446744073709551611] ∈
                                UNINITIALIZED
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  7 functions analyzed (out of 9): 77% coverage.
  In these functions, 104 statements reached (out of 104): 100% coverage.
  ----------------------------------------------------------------------------
  Some errors and warnings have been raised during the analysis:
    by the Eva analyzer:      1 error    0 warnings
    by the Frama-C kernel:    0 errors    0 warnings
  ----------------------------------------------------------------------------
  37 alarms generated by the analysis:
      20 invalid memory accesses
      14 accesses to uninitialized left-values
       2 integer overflows
       1 escaping address
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    13 valid     0 unknown     0 invalid     13 total
  100% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[eva] User Error: Deferred error message was emitted during execution. See above messages for more information.
[kernel] Plug-in eva aborted: invalid user input.
