[report] Monitoring events
[report] Loading '/home/fmarques/sbugs/projects/configs/frama-c_report_rules.json'
[kernel] Parsing /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al160/main.c (with preprocessing)
[kernel:parser:decimal-float] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:10: 
  Floating-point constant 0.10 is not represented exactly. Will use 0x1.999999999999ap-4.
[kernel:parser:decimal-float] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:17: 
  Floating-point constant 0.10 is not represented exactly. Will use 0x1.999999999999ap-4.
[kernel:parser:decimal-float] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:24: 
  Floating-point constant 0.10 is not represented exactly. Will use 0x1.999999999999ap-4.
[kernel:typing:no-proto] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al160/main.c:85: 
  Calling function mk_list that is declared without prototype.
  Its formals will be inferred from actual arguments
[eva] Analyzing a complete application starting at main
[eva] Computing initial state
[eva] Initial state computed
[eva:initial-state] Values of globals at initialization
  
[eva] using specification for function scanf_va_1
[eva] using specification for function time
[eva] using specification for function srand
[eva] using specification for function rand
[eva] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:11: 
  allocating variable __malloc_can_fail_malloc_l11
[eva] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:11: 
  allocating variable __malloc_can_fail_malloc_l11_0
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al160/main.c:91: 
  out of bounds write. assert \valid(&l->head);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al160/main.c:85: 
  out of bounds write. assert \valid(c + i);
[eva] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al160/main.c:84: 
  starting to merge loop iterations
[eva] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:11: 
  allocating variable __malloc_can_fail_malloc_l11_1
[eva] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:11: 
  allocating variable __malloc_can_fail_malloc_l11_2
[eva] using specification for function scanf_va_2
[eva] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:11: 
  allocating variable __malloc_can_fail_malloc_l11_3
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al160/main.c:126: 
  out of bounds write. assert \valid(&new->num);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al160/main.c:50: 
  accessing uninitialized left-value. assert \initialized(class + i);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al160/main.c:50: 
  out of bounds read. assert \valid_read(class + i);
[eva] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al160/main.c:48: 
  starting to merge loop iterations
[eva] using specification for function scanf_va_3
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al160/main.c:56: 
  signed overflow. assert -2147483648 â‰¤ in - 1;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al160/main.c:56: 
  signed overflow. assert -2147483648 â‰¤ out - 1;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al160/main.c:114: 
  accessing uninitialized left-value. assert \initialized(l + in);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al160/main.c:114: 
  out of bounds read. assert \valid_read(l + in);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al160/main.c:114: 
  accessing uninitialized left-value. assert \initialized(&(*(l + in))->head);
[eva] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:11: 
  allocating variable __malloc_can_fail_malloc_l11_4
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al160/main.c:116: 
  out of bounds write. assert \valid(&new->num);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al160/main.c:116: 
  accessing uninitialized left-value. assert \initialized(l + out);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al160/main.c:116: 
  out of bounds read. assert \valid_read(l + out);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al160/main.c:116: 
  accessing uninitialized left-value. assert \initialized(&(*(l + out))->head);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al160/main.c:116: 
  accessing uninitialized left-value.
  assert \initialized(&((*(l + out))->head)->num);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al160/main.c:116: 
  out of bounds read. assert \valid_read(&((*(l + out))->head)->num);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al160/main.c:117: 
  accessing uninitialized left-value. assert \initialized(l + out);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al160/main.c:117: 
  out of bounds read. assert \valid_read(l + out);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al160/main.c:117: 
  accessing uninitialized left-value. assert \initialized(&(*(l + out))->head);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al160/main.c:117: 
  accessing uninitialized left-value.
  assert \initialized(&((*(l + out))->head)->grade);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al160/main.c:117: 
  out of bounds read. assert \valid_read(&((*(l + out))->head)->grade);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al160/main.c:119: 
  accessing uninitialized left-value. assert \initialized(&iter->next);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al160/main.c:119: 
  out of bounds read. assert \valid_read(&iter->next);
[eva] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al160/main.c:53: 
  starting to merge loop iterations
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al160/main.c:119: 
  accessing uninitialized left-value. assert \initialized(&iter->next);
[eva] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al160/main.c:119: 
  starting to merge loop iterations
[eva] using specification for function qsort
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al160/main.c:143: 
  accessing uninitialized left-value. assert \initialized(l + i);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al160/main.c:143: 
  out of bounds read. assert \valid_read(l + i);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al160/main.c:143: 
  accessing uninitialized left-value. assert \initialized(&(*(l + i))->head);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al160/main.c:143: 
  out of bounds read. assert \valid_read(&(*(l + i))->head);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al160/main.c:143: 
  accessing uninitialized left-value.
  assert \initialized(&((*(l + i))->head)->num);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al160/main.c:143: 
  out of bounds read. assert \valid_read(&((*(l + i))->head)->num);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al160/main.c:143: 
  out of bounds write. assert \valid(map + (int)(((*(l + i))->head)->num - 1));
[eva] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al160/main.c:142: 
  starting to merge loop iterations
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al160/main.c:63: 
  accessing uninitialized left-value. assert \initialized(class + i);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al160/main.c:63: 
  out of bounds read. assert \valid_read(class + i);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al160/main.c:63: 
  accessing uninitialized left-value.
  assert \initialized(&(*(class + i))->head);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al160/main.c:63: 
  out of bounds read. assert \valid_read(&(*(class + i))->head);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al160/main.c:63: 
  accessing uninitialized left-value.
  assert \initialized(&((*(class + i))->head)->flag);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al160/main.c:63: 
  out of bounds read. assert \valid_read(&((*(class + i))->head)->flag);
[eva] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:11: 
  allocating variable __malloc_can_fail_malloc_l11_5
[eva] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:11: 
  allocating variable __malloc_can_fail_malloc_l11_6
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al160/main.c:150: 
  out of bounds write. assert \valid(&new_queue->list);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al160/main.c:188: 
  out of bounds read. assert \valid_read(l + start);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al160/main.c:188: 
  accessing uninitialized left-value.
  assert \initialized(&(*(l + start))->head);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al160/main.c:188: 
  out of bounds write. assert \valid(&((*(l + start))->head)->flag);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al160/main.c:189: 
  out of bounds read. assert \valid_read(l + start);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al160/main.c:189: 
  accessing uninitialized left-value.
  assert \initialized(&(*(l + start))->head);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al160/main.c:189: 
  accessing uninitialized left-value.
  assert \initialized(&((*(l + start))->head)->grade);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al160/main.c:189: 
  out of bounds read. assert \valid_read(&((*(l + start))->head)->grade);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al160/main.c:161: 
  out of bounds write. assert \valid(q->list + q->out);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al160/main.c:194: 
  out of bounds read. assert \valid_read(l + current);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al160/main.c:194: 
  accessing uninitialized left-value.
  assert \initialized(&(*(l + current))->head);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al160/main.c:194: 
  accessing uninitialized left-value.
  assert \initialized(&((*(l + current))->head)->next);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al160/main.c:194: 
  out of bounds read. assert \valid_read(&((*(l + current))->head)->next);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al160/main.c:197: 
  accessing uninitialized left-value. assert \initialized(&next->num);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al160/main.c:197: 
  accessing uninitialized left-value.
  assert \initialized(map + (int)(next->num - 1));
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al160/main.c:197: 
  out of bounds read. assert \valid_read(map + (int)(next->num - 1));
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al160/main.c:197: 
  accessing uninitialized left-value.
  assert \initialized(l + *(map + (int)(next->num - 1)));
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al160/main.c:197: 
  out of bounds read. assert \valid_read(l + *(map + (int)(next->num - 1)));
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al160/main.c:197: 
  accessing uninitialized left-value.
  assert \initialized(&(*(l + *(map + (int)(next->num - 1))))->head);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al160/main.c:197: 
  out of bounds read.
  assert \valid_read(&(*(l + *(map + (int)(next->num - 1))))->head);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al160/main.c:197: 
  accessing uninitialized left-value.
  assert \initialized(&((*(l + *(map + (int)(next->num - 1))))->head)->flag);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al160/main.c:197: 
  out of bounds read.
  assert \valid_read(&((*(l + *(map + (int)(next->num - 1))))->head)->flag);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al160/main.c:199: 
  accessing uninitialized left-value. assert \initialized(&next->num);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al160/main.c:199: 
  accessing uninitialized left-value.
  assert \initialized(map + (int)(next->num - 1));
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al160/main.c:199: 
  out of bounds read. assert \valid_read(map + (int)(next->num - 1));
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al160/main.c:199: 
  accessing uninitialized left-value.
  assert \initialized(l + *(map + (int)(next->num - 1)));
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al160/main.c:199: 
  out of bounds read. assert \valid_read(l + *(map + (int)(next->num - 1)));
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al160/main.c:199: 
  accessing uninitialized left-value.
  assert \initialized(&(*(l + *(map + (int)(next->num - 1))))->head);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al160/main.c:199: 
  out of bounds read.
  assert \valid_read(&(*(l + *(map + (int)(next->num - 1))))->head);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al160/main.c:199: 
  out of bounds write.
  assert \valid(&((*(l + *(map + (int)(next->num - 1))))->head)->flag);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al160/main.c:200: 
  accessing uninitialized left-value. assert \initialized(&next->num);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al160/main.c:200: 
  accessing uninitialized left-value.
  assert \initialized(map + (int)(next->num - 1));
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al160/main.c:200: 
  out of bounds read. assert \valid_read(map + (int)(next->num - 1));
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al160/main.c:200: 
  accessing uninitialized left-value.
  assert \initialized(l + *(map + (int)(next->num - 1)));
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al160/main.c:200: 
  out of bounds read. assert \valid_read(l + *(map + (int)(next->num - 1)));
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al160/main.c:200: 
  accessing uninitialized left-value.
  assert \initialized(&(*(l + *(map + (int)(next->num - 1))))->head);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al160/main.c:200: 
  out of bounds read.
  assert \valid_read(&(*(l + *(map + (int)(next->num - 1))))->head);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al160/main.c:200: 
  out of bounds write.
  assert \valid(&((*(l + *(map + (int)(next->num - 1))))->head)->grade);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al160/main.c:202: 
  accessing uninitialized left-value. assert \initialized(&next->num);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al160/main.c:202: 
  accessing uninitialized left-value.
  assert \initialized(map + (int)(next->num - 1));
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al160/main.c:202: 
  out of bounds read. assert \valid_read(map + (int)(next->num - 1));
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al160/main.c:204: 
  accessing uninitialized left-value. assert \initialized(&next->next);
[eva] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al160/main.c:196: 
  starting to merge loop iterations
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al160/main.c:160: 
  signed overflow. assert q->out + 1 â‰¤ 2147483647;
[eva] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al160/main.c:192: 
  starting to merge loop iterations
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al160/main.c:194: 
  accessing uninitialized left-value. assert \initialized(l + current);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al160/main.c:194: 
  out of bounds read. assert \valid_read(&(*(l + current))->head);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al160/main.c:172: 
  accessing uninitialized left-value. assert \initialized(q->list + q->in);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al160/main.c:172: 
  out of bounds read. assert \valid_read(q->list + q->in);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al160/main.c:67: 
  out of bounds read. assert \valid_read(class + i);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al160/main.c:67: 
  accessing uninitialized left-value.
  assert \initialized(&(*(class + i))->head);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al160/main.c:67: 
  accessing uninitialized left-value.
  assert \initialized(&((*(class + i))->head)->num);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al160/main.c:67: 
  out of bounds read. assert \valid_read(&((*(class + i))->head)->num);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al160/main.c:67: 
  out of bounds write.
  assert \valid(estimate + (int)(((*(class + i))->head)->num - 1));
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al160/main.c:67: 
  accessing uninitialized left-value.
  assert \initialized(&((*(class + i))->head)->grade);
[eva] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al160/main.c:62: 
  starting to merge loop iterations
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al160/main.c:188: 
  accessing uninitialized left-value. assert \initialized(l + start);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al160/main.c:188: 
  out of bounds read. assert \valid_read(&(*(l + start))->head);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al160/main.c:189: 
  accessing uninitialized left-value. assert \initialized(l + start);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al160/main.c:189: 
  out of bounds read. assert \valid_read(&(*(l + start))->head);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al160/main.c:67: 
  accessing uninitialized left-value. assert \initialized(class + i);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al160/main.c:67: 
  out of bounds read. assert \valid_read(&(*(class + i))->head);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al160/main.c:217: 
  accessing uninitialized left-value. assert \initialized(estimate + i);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al160/main.c:217: 
  out of bounds read. assert \valid_read(estimate + i);
[eva] using specification for function printf_va_1
[eva] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al160/main.c:216: 
  starting to merge loop iterations
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al160/main.c:98: 
  accessing uninitialized left-value. assert \initialized(class + i);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al160/main.c:98: 
  out of bounds read. assert \valid_read(class + i);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al160/main.c:106: 
  accessing uninitialized left-value. assert \initialized(&l->head);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al160/main.c:106: 
  out of bounds read. assert \valid_read(&l->head);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al160/main.c:107: 
  accessing uninitialized left-value. assert \initialized(&l->head);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al160/main.c:108: 
  accessing uninitialized left-value. assert \initialized(&l->head);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al160/main.c:108: 
  accessing uninitialized left-value. assert \initialized(&(l->head)->next);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al160/main.c:108: 
  out of bounds read. assert \valid_read(&(l->head)->next);
[eva] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al160/main.c:106: 
  starting to merge loop iterations
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al160/main.c:106: 
  accessing left-value that contains escaping addresses.
  assert Â¬\dangling(&l->head);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al160/main.c:107: 
  accessing left-value that contains escaping addresses.
  assert Â¬\dangling(&l->head);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al160/main.c:108: 
  accessing left-value that contains escaping addresses.
  assert Â¬\dangling(&l->head);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al160/main.c:108: 
  accessing left-value that contains escaping addresses.
  assert Â¬\dangling(&(l->head)->next);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al160/main.c:99: 
  out of bounds read. assert \valid_read(class + i);
[eva] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al160/main.c:97: 
  starting to merge loop iterations
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al160/main.c:98: 
  accessing left-value that contains escaping addresses.
  assert Â¬\dangling(class + i);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al160/main.c:99: 
  accessing uninitialized left-value. assert \initialized(class + i);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al160/main.c:99: 
  accessing left-value that contains escaping addresses.
  assert Â¬\dangling(class + i);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/al160/main.c:99: 
  function free: precondition 'freeable' got status unknown.
[eva] done for function main
[scope:rm_asserts] removing 36 assertion(s)
[eva] ====== VALUES COMPUTED ======
[eva:final-states] Values at end of function dequeue:
  ret âˆˆ [0..2147483646]
  __retres âˆˆ [0..2147483646]
  __malloc_can_fail_malloc_l11_5[bits 0 to 63]# âˆˆ
                                [-1..2147483647] repeated %32 
                                [bits 64 to 127] âˆˆ
                                {{ (? *)&__malloc_can_fail_malloc_l11_6 }}
[eva:final-states] Values at end of function enqueue:
  __malloc_can_fail_malloc_l11_5[bits 0 to 31] âˆˆ [0..2147483647]
                                [bits 32 to 63] âˆˆ [0..2147483646]
                                [bits 64 to 127] âˆˆ
                                {{ (? *)&__malloc_can_fail_malloc_l11_6 }}
  __malloc_can_fail_malloc_l11_6[bits 0 to 31] âˆˆ [0..2147483646]
                                [bits 32 to 68719476703]# âˆˆ
                                [0..2147483646] or UNINITIALIZED repeated %32 
[eva:final-states] Values at end of function destroy_list:
  iter âˆˆ
      {{ NULL ; (student *)&__malloc_w_can_fail_malloc_l11_3 ;
         (student *)&__malloc_w_can_fail_malloc_l11_4 }} or UNINITIALIZED or ESCAPINGADDR
  __malloc_w_can_fail_malloc_l11_0[bits 0 to 63] âˆˆ
                                  {{ NULL ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_3 ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_4 }} or UNINITIALIZED or ESCAPINGADDR
  __malloc_w_can_fail_malloc_l11_3[bits 0 to 63] âˆˆ
                                  {{ NULL ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_4 }} or UNINITIALIZED or ESCAPINGADDR
                                  [8..11] âˆˆ [--..--] or UNINITIALIZED
                                  [bits 96 to 127] âˆˆ
                                  [1..2147483647] or UNINITIALIZED
                                  [bits 128 to 159] âˆˆ
                                  {0; 1} or UNINITIALIZED
                                  [20..23] âˆˆ UNINITIALIZED
  __malloc_w_can_fail_malloc_l11_4[bits 0 to 63] âˆˆ
                                  {{ NULL ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_4 }} or UNINITIALIZED or ESCAPINGADDR
                                  [8..11] âˆˆ [--..--] or UNINITIALIZED
                                  [bits 96 to 127] âˆˆ
                                  [1..2147483647] or UNINITIALIZED
                                  [bits 128 to 159] âˆˆ
                                  {0; 1} or UNINITIALIZED
                                  [20..23] âˆˆ UNINITIALIZED
[eva:final-states] Values at end of function destroy_class:
  class âˆˆ
       {{ NULL ; (list **)&__malloc_can_fail_malloc_l11 }} or ESCAPINGADDR
  class âˆˆ
       {{ NULL ; (list **)&__malloc_can_fail_malloc_l11 }} or ESCAPINGADDR
  i âˆˆ [0..2147483647]
  __malloc_can_fail_malloc_l11[0..18446744073709551607] âˆˆ
                              {{ garbled mix of &{__malloc_w_can_fail_malloc_l11_0}
                               (origin: Misaligned
                               {/home/fmarques/sbugs/projects/alunos/asa_1920_p1/al160/main.c:59}) }} or UNINITIALIZED or ESCAPINGADDR
  __malloc_w_can_fail_malloc_l11_0[bits 0 to 63] âˆˆ
                                  {{ NULL ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_3 ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_4 }} or UNINITIALIZED or ESCAPINGADDR
  __malloc_w_can_fail_malloc_l11_3[bits 0 to 63] âˆˆ
                                  {{ NULL ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_4 }} or UNINITIALIZED or ESCAPINGADDR
                                  [8..11] âˆˆ [--..--] or UNINITIALIZED
                                  [bits 96 to 127] âˆˆ
                                  [1..2147483647] or UNINITIALIZED
                                  [bits 128 to 159] âˆˆ
                                  {0; 1} or UNINITIALIZED
                                  [20..23] âˆˆ UNINITIALIZED
  __malloc_w_can_fail_malloc_l11_4[bits 0 to 63] âˆˆ
                                  {{ NULL ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_4 }} or UNINITIALIZED or ESCAPINGADDR
                                  [8..11] âˆˆ [--..--] or UNINITIALIZED
                                  [bits 96 to 127] âˆˆ
                                  [1..2147483647] or UNINITIALIZED
                                  [bits 128 to 159] âˆˆ
                                  {0; 1} or UNINITIALIZED
                                  [20..23] âˆˆ UNINITIALIZED
[eva:final-states] Values at end of function map_positions:
  i âˆˆ [0..2147483647]
  __malloc_can_fail_malloc_l11_1[bits 0 to 68719476703]# âˆˆ
                                [0..2147483646] or UNINITIALIZED repeated %32 
                                [8589934588..18446744073709551611] âˆˆ
                                UNINITIALIZED
[eva:final-states] Values at end of function print_estimate:
  i âˆˆ [0..2147483647]
  S___fc_stdout[0..1] âˆˆ [--..--]
[eva:final-states] Values at end of function can_fail_malloc:
  __fc_heap_status âˆˆ [--..--]
  __fc_random_counter âˆˆ [--..--]
  fail âˆˆ [0. .. 1.]
  __retres âˆˆ
          {{ NULL ; (void *)&__malloc_can_fail_malloc_l11 ;
             (void *)&__malloc_w_can_fail_malloc_l11_0 ;
             (void *)&__malloc_can_fail_malloc_l11_1 ;
             (void *)&__malloc_can_fail_malloc_l11_2 ;
             (void *)&__malloc_w_can_fail_malloc_l11_3 ;
             (void *)&__malloc_w_can_fail_malloc_l11_4 ;
             (void *)&__malloc_can_fail_malloc_l11_5 ;
             (void *)&__malloc_can_fail_malloc_l11_6 }}
[eva:final-states] Values at end of function add_friendship:
  __fc_heap_status âˆˆ [--..--]
  __fc_random_counter âˆˆ [--..--]
  iter âˆˆ
      {{ (student *)&__malloc_w_can_fail_malloc_l11_3 ;
         (student *)&__malloc_w_can_fail_malloc_l11_4 }}
  new âˆˆ {{ (student *)&__malloc_w_can_fail_malloc_l11_4 }}
  __malloc_w_can_fail_malloc_l11_3[bits 0 to 63] âˆˆ
                                  {{ NULL ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_4 }} or UNINITIALIZED
                                  [8..11] âˆˆ [--..--] or UNINITIALIZED
                                  [bits 96 to 127] âˆˆ
                                  [1..2147483647] or UNINITIALIZED
                                  [16..19] âˆˆ {0} or UNINITIALIZED
                                  [20..23] âˆˆ UNINITIALIZED
  __malloc_w_can_fail_malloc_l11_4[bits 0 to 63] âˆˆ
                                  {{ NULL ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_4 }} or UNINITIALIZED
                                  [8..11] âˆˆ [--..--] or UNINITIALIZED
                                  [bits 96 to 127] âˆˆ
                                  [1..2147483647] or UNINITIALIZED
                                  [16..19] âˆˆ {0} or UNINITIALIZED
                                  [20..23] âˆˆ UNINITIALIZED
[eva:final-states] Values at end of function mk_list:
  __fc_heap_status âˆˆ [--..--]
  __fc_random_counter âˆˆ [--..--]
  l âˆˆ {{ (list *)&__malloc_w_can_fail_malloc_l11_0 }}
  __malloc_w_can_fail_malloc_l11_0[0..7] âˆˆ {0} or UNINITIALIZED
[eva:final-states] Values at end of function mk_class:
  __fc_heap_status âˆˆ [--..--]
  __fc_random_counter âˆˆ [--..--]
  i âˆˆ [0..2147483647]
  c âˆˆ {{ NULL ; (list **)&__malloc_can_fail_malloc_l11 }}
  __malloc_can_fail_malloc_l11[bits 0 to 137438953407]# âˆˆ
                              {{ (? *)&__malloc_w_can_fail_malloc_l11_0 }} or UNINITIALIZED repeated %64 
                              [17179869176..18446744073709551607] âˆˆ
                              UNINITIALIZED
  __malloc_w_can_fail_malloc_l11_0[0..7] âˆˆ {0} or UNINITIALIZED
[eva:final-states] Values at end of function mk_queue:
  __fc_heap_status âˆˆ [--..--]
  __fc_random_counter âˆˆ [--..--]
  new_queue âˆˆ {{ (queue *)&__malloc_can_fail_malloc_l11_5 }}
  __malloc_can_fail_malloc_l11_5[bits 0 to 63]# âˆˆ {-1} repeated %32 
                                [bits 64 to 127] âˆˆ
                                {{ NULL ;
                                   (? *)&__malloc_can_fail_malloc_l11_6 }}
[eva:final-states] Values at end of function bfs:
  __fc_heap_status âˆˆ [--..--]
  __fc_random_counter âˆˆ [--..--]
  current âˆˆ [0..2147483646] or UNINITIALIZED
  highest âˆˆ [--..--]
  next âˆˆ {0} or UNINITIALIZED
  q âˆˆ ESCAPINGADDR
  __malloc_w_can_fail_malloc_l11_3[bits 0 to 63] âˆˆ
                                  {{ NULL ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_4 }} or UNINITIALIZED
                                  [8..11] âˆˆ [--..--] or UNINITIALIZED
                                  [bits 96 to 127] âˆˆ
                                  [1..2147483647] or UNINITIALIZED
                                  [bits 128 to 159] âˆˆ
                                  {0; 1} or UNINITIALIZED
                                  [20..23] âˆˆ UNINITIALIZED
  __malloc_w_can_fail_malloc_l11_4[bits 0 to 63] âˆˆ
                                  {{ NULL ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_4 }} or UNINITIALIZED
                                  [8..11] âˆˆ [--..--] or UNINITIALIZED
                                  [bits 96 to 127] âˆˆ
                                  [1..2147483647] or UNINITIALIZED
                                  [bits 128 to 159] âˆˆ
                                  {0; 1} or UNINITIALIZED
                                  [20..23] âˆˆ UNINITIALIZED
[eva:final-states] Values at end of function new_student:
  __fc_heap_status âˆˆ [--..--]
  __fc_random_counter âˆˆ [--..--]
  new âˆˆ {{ (student *)&__malloc_w_can_fail_malloc_l11_3 }}
  __malloc_w_can_fail_malloc_l11_3[0..7] âˆˆ {0} or UNINITIALIZED
                                  [8..11] âˆˆ [--..--] or UNINITIALIZED
                                  [bits 96 to 127] âˆˆ
                                  [1..2147483647] or UNINITIALIZED
                                  [16..19] âˆˆ {0} or UNINITIALIZED
                                  [20..23] âˆˆ UNINITIALIZED
[eva:final-states] Values at end of function main:
  __fc_heap_status âˆˆ [--..--]
  __fc_random_counter âˆˆ [--..--]
  class âˆˆ
       {{ NULL ; (list **)&__malloc_can_fail_malloc_l11 }} or ESCAPINGADDR
  estimate âˆˆ
          {{ NULL ; (int *)&__malloc_can_fail_malloc_l11_2 }} or ESCAPINGADDR
  map âˆˆ {{ NULL ; (int *)&__malloc_can_fail_malloc_l11_1 }} or ESCAPINGADDR
  num_students âˆˆ [--..--]
  num_friendships âˆˆ [--..--]
  grade âˆˆ [--..--] or UNINITIALIZED
  in âˆˆ [1..2147483647] or UNINITIALIZED
  out âˆˆ [1..2147483647] or UNINITIALIZED
  i âˆˆ [0..2147483647]
  __retres âˆˆ {0}
  S___fc_stdin[0..1] âˆˆ [--..--]
  S___fc_stdout[0..1] âˆˆ [--..--]
  __malloc_can_fail_malloc_l11[0..18446744073709551607] âˆˆ
                              {{ garbled mix of &{__malloc_w_can_fail_malloc_l11_0}
                               (origin: Misaligned
                               {/home/fmarques/sbugs/projects/alunos/asa_1920_p1/al160/main.c:59}) }} or UNINITIALIZED or ESCAPINGADDR
  __malloc_w_can_fail_malloc_l11_0[bits 0 to 63] âˆˆ
                                  {{ NULL ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_3 ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_4 }} or UNINITIALIZED or ESCAPINGADDR
  __malloc_can_fail_malloc_l11_1[bits 0 to 68719476703]# âˆˆ
                                [0..2147483646] or UNINITIALIZED repeated %32 
                                [8589934588..18446744073709551611] âˆˆ
                                UNINITIALIZED
  __malloc_can_fail_malloc_l11_2[0..8589934587] âˆˆ [--..--] or UNINITIALIZED
                                [8589934588..18446744073709551611] âˆˆ
                                UNINITIALIZED
  __malloc_w_can_fail_malloc_l11_3[bits 0 to 63] âˆˆ
                                  {{ NULL ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_4 }} or UNINITIALIZED or ESCAPINGADDR
                                  [8..11] âˆˆ [--..--] or UNINITIALIZED
                                  [bits 96 to 127] âˆˆ
                                  [1..2147483647] or UNINITIALIZED
                                  [bits 128 to 159] âˆˆ
                                  {0; 1} or UNINITIALIZED
                                  [20..23] âˆˆ UNINITIALIZED
  __malloc_w_can_fail_malloc_l11_4[bits 0 to 63] âˆˆ
                                  {{ NULL ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_4 }} or UNINITIALIZED or ESCAPINGADDR
                                  [8..11] âˆˆ [--..--] or UNINITIALIZED
                                  [bits 96 to 127] âˆˆ
                                  [1..2147483647] or UNINITIALIZED
                                  [bits 128 to 159] âˆˆ
                                  {0; 1} or UNINITIALIZED
                                  [20..23] âˆˆ UNINITIALIZED
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  14 functions analyzed (out of 17): 82% coverage.
  In these functions, 156 statements reached (out of 159): 98% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  114 alarms generated by the analysis:
      53 accesses to uninitialized left-values
      52 invalid memory accesses
       6 escaping addresses
       3 integer overflows
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    17 valid     1 unknown     0 invalid     18 total
  94% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[report] Classification
[report] Output /home/fmarques/sbugs/projects/outputs/framaC/asa_1920_p1/al160/errors.json
[report] Reviews     :   79
[report] Unclassified:   79
