[report] Monitoring events
[report] Loading '/home/fmarques/sbugs/projects/configs/frama-c_report_rules.json'
[kernel] Parsing /home/fmarques/sbugs/projects/alunos/asa_1920_p1/tp013/Proj1_ASA.c (with preprocessing)
[kernel:parser:decimal-float] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:10: 
  Floating-point constant 0.10 is not represented exactly. Will use 0x1.999999999999ap-4.
[kernel:parser:decimal-float] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:17: 
  Floating-point constant 0.10 is not represented exactly. Will use 0x1.999999999999ap-4.
[kernel:parser:decimal-float] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:24: 
  Floating-point constant 0.10 is not represented exactly. Will use 0x1.999999999999ap-4.
[eva] Analyzing a complete application starting at main
[eva] Computing initial state
[eva] Initial state computed
[eva:initial-state] Values of globals at initialization
  graph ∈ {0}
  graph_val ∈ {0}
  stack_size ∈ {0}
  previous_size ∈ {0}
  min_val ∈ {0}
  current_index ∈ {0}
[eva] using specification for function time
[eva] using specification for function srand
[eva] using specification for function rand
[eva] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:11: 
  allocating variable __malloc_can_fail_malloc_l11
[eva] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:11: 
  allocating variable __malloc_can_fail_malloc_l11_0
[eva] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:11: 
  allocating variable __malloc_can_fail_malloc_l11_1
[eva] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:11: 
  allocating variable __malloc_can_fail_malloc_l11_2
[eva] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:11: 
  allocating variable __malloc_can_fail_malloc_l11_3
[eva] using specification for function scanf_va_1
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/tp013/Proj1_ASA.c:51: 
  function scanf_va_1: precondition \valid(param0) got status unknown.
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/tp013/Proj1_ASA.c:51: 
  function scanf_va_1: precondition \valid(param1) got status unknown.
[eva] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:18: 
  calloc out of bounds: assert(nmemb * size <= SIZE_MAX)
[eva] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:18: 
  allocating variable __calloc_can_fail_calloc_l18
[eva] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:18: 
  allocating variable __calloc_can_fail_calloc_l18_0
[eva] using specification for function scanf_va_2
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/tp013/Proj1_ASA.c:57: 
  function scanf_va_2: precondition \valid(param0) got status unknown.
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/tp013/Proj1_ASA.c:59: 
  out of bounds write. assert \valid(graph_val + *val);
[eva] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:11: 
  allocating variable __malloc_can_fail_malloc_l11_4
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/tp013/Proj1_ASA.c:31: 
  out of bounds write. assert \valid(&dummy->value);
[eva] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:11: 
  allocating variable __malloc_can_fail_malloc_l11_5
[eva] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:11: 
  allocating variable __malloc_can_fail_malloc_l11_6
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/tp013/Proj1_ASA.c:69: 
  out of bounds write. assert \valid(graph + i);
[eva] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/tp013/Proj1_ASA.c:56: 
  starting to merge loop iterations
[eva] using specification for function scanf_va_3
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/tp013/Proj1_ASA.c:73: 
  function scanf_va_3: precondition \valid(param0) got status unknown.
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/tp013/Proj1_ASA.c:73: 
  function scanf_va_3: precondition \valid(param1) got status unknown.
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/tp013/Proj1_ASA.c:74: 
  signed overflow. assert -2147483648 ≤ *father_node - 1;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/tp013/Proj1_ASA.c:74: 
  out of bounds read. assert \valid_read(graph + (int)(*father_node - 1));
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/tp013/Proj1_ASA.c:74: 
  accessing uninitialized left-value.
  assert \initialized(&(*(graph + (int)(*father_node - 1)))->num_conections);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/tp013/Proj1_ASA.c:74: 
  out of bounds read.
  assert \valid_read(&(*(graph + (int)(*father_node - 1)))->num_conections);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/tp013/Proj1_ASA.c:76: 
  out of bounds read. assert \valid_read(graph + (int)(*father_node - 1));
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/tp013/Proj1_ASA.c:76: 
  accessing uninitialized left-value.
  assert \initialized(&(*(graph + (int)(*father_node - 1)))->size);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/tp013/Proj1_ASA.c:76: 
  out of bounds read.
  assert \valid_read(&(*(graph + (int)(*father_node - 1)))->size);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/tp013/Proj1_ASA.c:78: 
  out of bounds read. assert \valid_read(graph + (int)(*father_node - 1));
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/tp013/Proj1_ASA.c:78: 
  accessing uninitialized left-value.
  assert \initialized(&(*(graph + (int)(*father_node - 1)))->conections);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/tp013/Proj1_ASA.c:78: 
  out of bounds read.
  assert \valid_read(&(*(graph + (int)(*father_node - 1)))->conections);
[eva] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:25: 
  allocating variable __realloc_can_fail_realloc_l25
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/tp013/Proj1_ASA.c:78: 
  out of bounds read. assert \valid_read(graph + (int)(*father_node - 1));
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/tp013/Proj1_ASA.c:78: 
  out of bounds write.
  assert \valid(&(*(graph + (int)(*father_node - 1)))->conections);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/tp013/Proj1_ASA.c:79: 
  out of bounds read. assert \valid_read(graph + (int)(*father_node - 1));
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/tp013/Proj1_ASA.c:79: 
  out of bounds write.
  assert \valid(&(*(graph + (int)(*father_node - 1)))->size);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/tp013/Proj1_ASA.c:79: 
  accessing uninitialized left-value.
  assert \initialized(&(*(graph + (int)(*father_node - 1)))->size);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/tp013/Proj1_ASA.c:81: 
  out of bounds read. assert \valid_read(graph + (int)(*father_node - 1));
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/tp013/Proj1_ASA.c:81: 
  accessing uninitialized left-value.
  assert \initialized(&(*(graph + (int)(*father_node - 1)))->conections);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/tp013/Proj1_ASA.c:81: 
  out of bounds read.
  assert \valid_read(&(*(graph + (int)(*father_node - 1)))->conections);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/tp013/Proj1_ASA.c:81: 
  accessing left-value that contains escaping addresses.
  assert ¬\dangling(&(*(graph + (int)(*father_node - 1)))->conections);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/tp013/Proj1_ASA.c:81: 
  out of bounds write.
  assert \valid((*(graph + (int)(*father_node - 1)))->conections + conects);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/tp013/Proj1_ASA.c:81: 
  signed overflow. assert -2147483648 ≤ *son_node - 1;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/tp013/Proj1_ASA.c:82: 
  out of bounds read. assert \valid_read(graph + (int)(*father_node - 1));
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/tp013/Proj1_ASA.c:82: 
  out of bounds write.
  assert \valid(&(*(graph + (int)(*father_node - 1)))->num_conections);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/tp013/Proj1_ASA.c:82: 
  accessing uninitialized left-value.
  assert \initialized(&(*(graph + (int)(*father_node - 1)))->num_conections);
[eva] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/tp013/Proj1_ASA.c:72: 
  starting to merge loop iterations
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/tp013/Proj1_ASA.c:78: 
  accessing left-value that contains escaping addresses.
  assert ¬\dangling(&(*(graph + (int)(*father_node - 1)))->conections);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/tp013/Proj1_ASA.c:78: 
  signed overflow. assert conects + 50 ≤ 2147483647;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/tp013/Proj1_ASA.c:79: 
  signed overflow.
  assert (*(graph + (int)(*father_node - 1)))->size + 50 ≤ 2147483647;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/tp013/Proj1_ASA.c:82: 
  signed overflow.
  assert
  (*(graph + (int)(*father_node - 1)))->num_conections + 1 ≤ 2147483647;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/tp013/Proj1_ASA.c:136: 
  out of bounds read. assert \valid_read(graph + big_node);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/tp013/Proj1_ASA.c:136: 
  accessing uninitialized left-value.
  assert \initialized(&(*(graph + big_node))->value);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/tp013/Proj1_ASA.c:136: 
  out of bounds read. assert \valid_read(&(*(graph + big_node))->value);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/tp013/Proj1_ASA.c:99: 
  out of bounds read. assert \valid_read(graph + u);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/tp013/Proj1_ASA.c:99: 
  accessing uninitialized left-value.
  assert \initialized(&(*(graph + u))->num_conections);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/tp013/Proj1_ASA.c:99: 
  out of bounds read. assert \valid_read(&(*(graph + u))->num_conections);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/tp013/Proj1_ASA.c:100: 
  out of bounds read. assert \valid_read(graph + u);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/tp013/Proj1_ASA.c:100: 
  out of bounds write. assert \valid(&(*(graph + u))->done);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/tp013/Proj1_ASA.c:103: 
  out of bounds read. assert \valid_read(graph + u);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/tp013/Proj1_ASA.c:103: 
  accessing uninitialized left-value.
  assert \initialized(&(*(graph + u))->conections);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/tp013/Proj1_ASA.c:103: 
  out of bounds read. assert \valid_read(&(*(graph + u))->conections);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/tp013/Proj1_ASA.c:103: 
  accessing left-value that contains escaping addresses.
  assert ¬\dangling(&(*(graph + u))->conections);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/tp013/Proj1_ASA.c:103: 
  accessing uninitialized left-value.
  assert \initialized((*(graph + u))->conections + i);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/tp013/Proj1_ASA.c:103: 
  out of bounds read. assert \valid_read((*(graph + u))->conections + i);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/tp013/Proj1_ASA.c:105: 
  out of bounds read. assert \valid_read(graph + v);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/tp013/Proj1_ASA.c:105: 
  accessing uninitialized left-value.
  assert \initialized(&(*(graph + v))->done);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/tp013/Proj1_ASA.c:105: 
  out of bounds read. assert \valid_read(&(*(graph + v))->done);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/tp013/Proj1_ASA.c:106: 
  out of bounds read. assert \valid_read(graph + u);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/tp013/Proj1_ASA.c:106: 
  out of bounds read. assert \valid_read(graph + v);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/tp013/Proj1_ASA.c:106: 
  accessing uninitialized left-value.
  assert \initialized(&(*(graph + u))->value);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/tp013/Proj1_ASA.c:106: 
  accessing uninitialized left-value.
  assert \initialized(&(*(graph + v))->value);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/tp013/Proj1_ASA.c:106: 
  out of bounds read. assert \valid_read(&(*(graph + u))->value);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/tp013/Proj1_ASA.c:106: 
  out of bounds read. assert \valid_read(&(*(graph + v))->value);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/tp013/Proj1_ASA.c:107: 
  out of bounds read. assert \valid_read(graph + v);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/tp013/Proj1_ASA.c:107: 
  out of bounds write. assert \valid(&(*(graph + v))->value);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/tp013/Proj1_ASA.c:107: 
  out of bounds read. assert \valid_read(graph + u);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/tp013/Proj1_ASA.c:107: 
  accessing uninitialized left-value.
  assert \initialized(&(*(graph + u))->value);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/tp013/Proj1_ASA.c:107: 
  out of bounds read. assert \valid_read(&(*(graph + u))->value);
[eva:recursion] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/tp013/Proj1_ASA.c:108: 
  detected recursive call of function propagate.
[eva] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/tp013/Proj1_ASA.c:108: User Error: 
  Recursive call to propagate without assigns clause.
  Generating probably incomplete assigns to interpret the call. Try to increase
  the -eva-unroll-recursive-calls parameter or write a correct specification
  for function propagate.
[kernel:annot:missing-spec] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/tp013/Proj1_ASA.c:96: 
  Neither code nor specification for function propagate, generating default assigns from the prototype
[eva] using specification for function propagate
[eva] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/tp013/Proj1_ASA.c:101: 
  starting to merge loop iterations
[eva] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/tp013/Proj1_ASA.c:108: 
  Using specification of function propagate for recursive calls.
  Analysis of function propagate is thus incomplete and its soundness
  relies on the written specification.
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/tp013/Proj1_ASA.c:111: 
  signed overflow. assert -2147483648 ≤ stack_size - 1;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/tp013/Proj1_ASA.c:141: 
  out of bounds read. assert \valid_read(graph_val + i);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/tp013/Proj1_ASA.c:145: 
  out of bounds read. assert \valid_read(graph + e);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/tp013/Proj1_ASA.c:145: 
  accessing uninitialized left-value.
  assert \initialized(&(*(graph + e))->value);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/tp013/Proj1_ASA.c:145: 
  out of bounds read. assert \valid_read(&(*(graph + e))->value);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/tp013/Proj1_ASA.c:145: 
  out of bounds read. assert \valid_read(graph + e);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/tp013/Proj1_ASA.c:145: 
  accessing uninitialized left-value.
  assert \initialized(&(*(graph + e))->done);
[eva] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/tp013/Proj1_ASA.c:143: 
  starting to merge loop iterations
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/tp013/Proj1_ASA.c:145: 
  out of bounds read. assert \valid_read(&(*(graph + e))->done);
[eva] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/tp013/Proj1_ASA.c:139: 
  starting to merge loop iterations
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/tp013/Proj1_ASA.c:158: 
  out of bounds read. assert \valid_read(graph + i);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/tp013/Proj1_ASA.c:158: 
  accessing uninitialized left-value.
  assert \initialized(&(*(graph + i))->value);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/tp013/Proj1_ASA.c:158: 
  out of bounds read. assert \valid_read(&(*(graph + i))->value);
[eva] using specification for function printf_va_1
[eva] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/tp013/Proj1_ASA.c:157: 
  starting to merge loop iterations
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/tp013/Proj1_ASA.c:119: 
  out of bounds read. assert \valid_read(graph + i);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/tp013/Proj1_ASA.c:119: 
  accessing uninitialized left-value.
  assert \initialized(&(*(graph + i))->conections);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/tp013/Proj1_ASA.c:119: 
  out of bounds read. assert \valid_read(&(*(graph + i))->conections);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/tp013/Proj1_ASA.c:119: 
  accessing left-value that contains escaping addresses.
  assert ¬\dangling(&(*(graph + i))->conections);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/tp013/Proj1_ASA.c:120: 
  out of bounds read. assert \valid_read(graph + i);
[eva] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/tp013/Proj1_ASA.c:117: 
  starting to merge loop iterations
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/tp013/Proj1_ASA.c:119: 
  accessing left-value that contains escaping addresses.
  assert ¬\dangling(graph + i);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p1/tp013/Proj1_ASA.c:120: 
  accessing left-value that contains escaping addresses.
  assert ¬\dangling(graph + i);
[eva] done for function main
[scope:rm_asserts] removing 19 assertion(s)
[eva] ====== VALUES COMPUTED ======
[eva:final-states] Values at end of function free_all:
  graph ∈ ESCAPINGADDR
  graph_val ∈
           {{ NULL ; (int *)&__calloc_can_fail_calloc_l18_0 }} or ESCAPINGADDR
  i ∈ [0..2147483647]
  __malloc_w_can_fail_malloc_l11_4[bits 0 to 31] ∈ [0..20] or UNINITIALIZED
                                  [bits 32 to 63] ∈ {0; 1} or UNINITIALIZED
                                  [bits 64 to 95] ∈
                                  [0..2147483647] or UNINITIALIZED
                                  [bits 96 to 127] ∈
                                  [1..2147483647] or UNINITIALIZED
                                  [bits 128 to 191] ∈
                                  {{ NULL ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_5 ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_6 ;
                                     (? *)&__realloc_w_can_fail_realloc_l25 }} or UNINITIALIZED or ESCAPINGADDR
[eva:final-states] Values at end of function can_fail_calloc:
  __fc_heap_status ∈ [--..--]
  __fc_random_counter ∈ [--..--]
  fail ∈ [0. .. 1.]
  __retres ∈
          {{ NULL ; (void *)&__calloc_can_fail_calloc_l18 ;
             (void *)&__calloc_can_fail_calloc_l18_0 }}
[eva:final-states] Values at end of function can_fail_malloc:
  __fc_heap_status ∈ [--..--]
  __fc_random_counter ∈ [--..--]
  fail ∈ [0. .. 1.]
  __retres ∈
          {{ NULL ; (void *)&__malloc_can_fail_malloc_l11 ;
             (void *)&__malloc_can_fail_malloc_l11_0 ;
             (void *)&__malloc_can_fail_malloc_l11_1 ;
             (void *)&__malloc_can_fail_malloc_l11_2 ;
             (void *)&__malloc_can_fail_malloc_l11_3 ;
             (void *)&__malloc_w_can_fail_malloc_l11_4 ;
             (void *)&__malloc_w_can_fail_malloc_l11_5 ;
             (void *)&__malloc_w_can_fail_malloc_l11_6 }}
[eva:final-states] Values at end of function can_fail_realloc:
  __fc_random_counter ∈ [--..--]
  ptr ∈
     {{ NULL ; (void *)&__malloc_w_can_fail_malloc_l11_5 ;
        (void *)&__malloc_w_can_fail_malloc_l11_6 ;
        (void *)&__realloc_w_can_fail_realloc_l25 }} or ESCAPINGADDR
  fail ∈ [0. .. 1.]
  __retres ∈ {{ NULL ; (void *)&__realloc_w_can_fail_realloc_l25 }}
  __malloc_w_can_fail_malloc_l11_4[bits 0 to 31] ∈ [0..20] or UNINITIALIZED
                                  [bits 32 to 63] ∈ {1} or UNINITIALIZED
                                  [bits 64 to 95] ∈
                                  [0..2147483647] or UNINITIALIZED
                                  [bits 96 to 127] ∈
                                  [1..2147483647] or UNINITIALIZED
                                  [bits 128 to 191] ∈
                                  {{ NULL ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_5 ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_6 ;
                                     (? *)&__realloc_w_can_fail_realloc_l25 }} or UNINITIALIZED or ESCAPINGADDR
[eva:final-states] Values at end of function createNode:
  __fc_heap_status ∈ [--..--]
  __fc_random_counter ∈ [--..--]
  dummy ∈ {{ (node *)&__malloc_w_can_fail_malloc_l11_4 }}
  __malloc_w_can_fail_malloc_l11_4[bits 0 to 31] ∈ [0..20] or UNINITIALIZED
                                  [bits 32 to 63] ∈ {1} or UNINITIALIZED
                                  [8..11] ∈ {0} or UNINITIALIZED
                                  [bits 96 to 127] ∈
                                  [1..50] or UNINITIALIZED
                                  [bits 128 to 191] ∈
                                  {{ NULL ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_5 ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_6 }} or UNINITIALIZED
[eva:final-states] Values at end of function initinalizeGraph:
  __fc_heap_status ∈ [--..--]
  __fc_random_counter ∈ [--..--]
  graph ∈ {{ NULL ; (node **)&__calloc_can_fail_calloc_l18 }}
[eva:final-states] Values at end of function parseArgs:
  __fc_heap_status ∈ [--..--]
  __fc_random_counter ∈ [--..--]
  graph ∈ {{ NULL ; (node **)&__calloc_can_fail_calloc_l18 }}
  graph_val ∈ {{ NULL ; (int *)&__calloc_can_fail_calloc_l18_0 }}
  stack_size ∈ [--..--]
  i ∈ [0..2147483647]
  val ∈ {{ NULL ; (int *)&__malloc_can_fail_malloc_l11_1 }} or ESCAPINGADDR
  father_node ∈
             {{ NULL ; (int *)&__malloc_can_fail_malloc_l11_2 }} or ESCAPINGADDR
  son_node ∈
          {{ NULL ; (int *)&__malloc_can_fail_malloc_l11_3 }} or ESCAPINGADDR
  pos ∈ [0..2147483646]
  key ∈ [0..20]
  conects ∈ [0..2147483647] or UNINITIALIZED
  S___fc_stdin[0..1] ∈ [--..--]
  __malloc_can_fail_malloc_l11[0..3] ∈ [--..--]
  __malloc_can_fail_malloc_l11_0[0..3] ∈ [--..--]
  __malloc_can_fail_malloc_l11_1[bits 0 to 31] ∈ [0..20] or UNINITIALIZED
  __malloc_can_fail_malloc_l11_2[bits 0 to 31] ∈
                                [1..2147483647] or UNINITIALIZED
  __malloc_can_fail_malloc_l11_3[bits 0 to 31] ∈
                                [-2147483647..2147483647] or UNINITIALIZED
  __calloc_can_fail_calloc_l18[bits 0 to 137438953407]# ∈
                              {{ NULL ;
                                 (? *)&__malloc_w_can_fail_malloc_l11_4 }} repeated %64 
                              [17179869176..18446744073709551615] ∈ {0}
  __calloc_can_fail_calloc_l18_0[bits 0 to 671]# ∈ {0; 1} repeated %32 
  __malloc_w_can_fail_malloc_l11_4[bits 0 to 31] ∈ [0..20] or UNINITIALIZED
                                  [bits 32 to 63] ∈ {1} or UNINITIALIZED
                                  [bits 64 to 95] ∈
                                  [0..2147483647] or UNINITIALIZED
                                  [bits 96 to 127] ∈
                                  [1..2147483647] or UNINITIALIZED
                                  [bits 128 to 191] ∈
                                  {{ NULL ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_5 ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_6 ;
                                     (? *)&__realloc_w_can_fail_realloc_l25 }} or UNINITIALIZED or ESCAPINGADDR
  __malloc_w_can_fail_malloc_l11_5[bits 0 to 1567]# ∈
                                  [-2147483648..2147483646] or UNINITIALIZED repeated %32 
  __malloc_w_can_fail_malloc_l11_6[bits 0 to 1599]# ∈
                                  [-2147483648..2147483646] or UNINITIALIZED repeated %32 
  __realloc_w_can_fail_realloc_l25[bits 0 to 68719476703]# ∈
                                  [-2147483648..2147483646] or UNINITIALIZED repeated %32 
[eva:final-states] Values at end of function propagate:
  stack_size ∈ [-2147483648..2147483646]
  v ∈ [0..2147483646] or UNINITIALIZED
  i ∈ [0..2147483647]
  max_connections ∈ [0..2147483647]
  __malloc_w_can_fail_malloc_l11_4[bits 0 to 31] ∈ [0..20] or UNINITIALIZED
                                  [bits 32 to 63] ∈ {0; 1} or UNINITIALIZED
                                  [bits 64 to 95] ∈
                                  [0..2147483647] or UNINITIALIZED
                                  [bits 96 to 127] ∈
                                  [1..2147483647] or UNINITIALIZED
                                  [bits 128 to 191] ∈
                                  {{ NULL ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_5 ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_6 ;
                                     (? *)&__realloc_w_can_fail_realloc_l25 }} or UNINITIALIZED or ESCAPINGADDR
[eva:final-states] Values at end of function main:
  __fc_heap_status ∈ [--..--]
  __fc_random_counter ∈ [--..--]
  graph ∈ ESCAPINGADDR
  graph_val ∈
           {{ NULL ; (int *)&__calloc_can_fail_calloc_l18_0 }} or ESCAPINGADDR
  stack_size ∈ [-2147483648..2147483646]
  i ∈ [0..2147483647]
  big_node ∈ [0..2147483646]
  max_val ∈ [0..20]
  e ∈ [0..2147483647] or UNINITIALIZED
  N ∈ ESCAPINGADDR
  M ∈ ESCAPINGADDR
  __retres ∈ {0}
  S___fc_stdin[0..1] ∈ [--..--]
  S___fc_stdout[0..1] ∈ [--..--]
  __malloc_can_fail_malloc_l11_1[bits 0 to 31] ∈ [0..20] or UNINITIALIZED
  __malloc_can_fail_malloc_l11_2[bits 0 to 31] ∈
                                [1..2147483647] or UNINITIALIZED
  __malloc_can_fail_malloc_l11_3[bits 0 to 31] ∈
                                [-2147483647..2147483647] or UNINITIALIZED
  __calloc_can_fail_calloc_l18_0[bits 0 to 671]# ∈ {0; 1} repeated %32 
  __malloc_w_can_fail_malloc_l11_4[bits 0 to 31] ∈ [0..20] or UNINITIALIZED
                                  [bits 32 to 63] ∈ {0; 1} or UNINITIALIZED
                                  [bits 64 to 95] ∈
                                  [0..2147483647] or UNINITIALIZED
                                  [bits 96 to 127] ∈
                                  [1..2147483647] or UNINITIALIZED
                                  [bits 128 to 191] ∈
                                  {{ NULL ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_5 ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_6 ;
                                     (? *)&__realloc_w_can_fail_realloc_l25 }} or UNINITIALIZED or ESCAPINGADDR
  __malloc_w_can_fail_malloc_l11_5[bits 0 to 1567]# ∈
                                  [-2147483648..2147483646] or UNINITIALIZED repeated %32 
  __malloc_w_can_fail_malloc_l11_6[bits 0 to 1599]# ∈
                                  [-2147483648..2147483646] or UNINITIALIZED repeated %32 
  __realloc_w_can_fail_realloc_l25[bits 0 to 68719476703]# ∈
                                  [-2147483648..2147483646] or UNINITIALIZED repeated %32 
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  9 functions analyzed (out of 10): 90% coverage.
  In these functions, 147 statements reached (out of 148): 99% coverage.
  ----------------------------------------------------------------------------
  Some errors and warnings have been raised during the analysis:
    by the Eva analyzer:      1 error    0 warnings
    by the Frama-C kernel:    0 errors    0 warnings
  ----------------------------------------------------------------------------
  77 alarms generated by the analysis:
      47 invalid memory accesses
      18 accesses to uninitialized left-values
       6 integer overflows
       6 escaping addresses
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    17 valid     5 unknown     0 invalid     22 total
  77% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[eva] User Error: Deferred error message was emitted during execution. See above messages for more information.
[kernel] Plug-in eva aborted: invalid user input.
