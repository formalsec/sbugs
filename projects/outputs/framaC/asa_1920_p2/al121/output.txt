[report] Monitoring events
[report] Loading '/home/fmarques/sbugs/projects/configs/frama-c_report_rules.json'
[kernel] Parsing /home/fmarques/sbugs/projects/alunos/asa_1920_p2/al121/projectOld.c (with preprocessing)
[kernel:parser:decimal-float] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:10: 
  Floating-point constant 0.10 is not represented exactly. Will use 0x1.999999999999ap-4.
[kernel:parser:decimal-float] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:17: 
  Floating-point constant 0.10 is not represented exactly. Will use 0x1.999999999999ap-4.
[kernel:parser:decimal-float] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:24: 
  Floating-point constant 0.10 is not represented exactly. Will use 0x1.999999999999ap-4.
[eva] Analyzing a complete application starting at main
[eva] Computing initial state
[eva] Initial state computed
[eva:initial-state] Values of globals at initialization
  list ∈ {0}
  source ∈ {0}
  amountCrossings ∈ {0}
  inverted ∈ {0}
  amountAvenues ∈ {0}
  amountStreets ∈ {0}
  amountMarkets ∈ {0}
  amountPeople ∈ {0}
  sinkID ∈ {0}
[eva] using specification for function scanf_va_1
[eva] using specification for function scanf_va_2
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p2/al121/projectOld.c:119: 
  signed overflow. assert -2147483648 ≤ amountAvenues * amountStreets;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p2/al121/projectOld.c:119: 
  signed overflow. assert amountAvenues * amountStreets ≤ 2147483647;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p2/al121/projectOld.c:134: 
  signed overflow. assert -2147483648 ≤ amountCrossings * 2;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p2/al121/projectOld.c:134: 
  signed overflow. assert amountCrossings * 2 ≤ 2147483647;
[eva] using specification for function time
[eva] using specification for function srand
[eva] using specification for function rand
[eva] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:11: 
  allocating variable __malloc_can_fail_malloc_l11
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p2/al121/projectOld.c:74: 
  out of bounds write.
  assert \valid(&(list.nodes + nodeID)->neighbors[direction]);
[eva] /home/fmarques/sbugs/projects/alunos/asa_1920_p2/al121/projectOld.c:143: 
  starting to merge loop iterations
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p2/al121/projectOld.c:146: 
  out of bounds write. assert \valid(&(list.nodes + i)->visitedIteration);
[eva] /home/fmarques/sbugs/projects/alunos/asa_1920_p2/al121/projectOld.c:142: 
  starting to merge loop iterations
[kernel] /home/fmarques/sbugs/projects/alunos/asa_1920_p2/al121/projectOld.c:146: 
  more than 200(2147483647) locations to update in array. Approximating.
[kernel] /home/fmarques/sbugs/projects/alunos/asa_1920_p2/al121/projectOld.c:74: 
  more than 200(2147483648) locations to update in array. Approximating.
[kernel] /home/fmarques/sbugs/projects/alunos/asa_1920_p2/al121/projectOld.c:74: 
  more than 200(2147483648) elements to enumerate. Approximating.
[eva] /home/fmarques/sbugs/projects/alunos/asa_1920_p2/al121/projectOld.c:151: 
  starting to merge loop iterations
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p2/al121/projectOld.c:61: 
  signed overflow. assert id + amountCrossings ≤ 2147483647;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p2/al121/projectOld.c:168: 
  signed overflow. assert index + amountStreets ≤ 2147483647;
[kernel] /home/fmarques/sbugs/projects/alunos/asa_1920_p2/al121/projectOld.c:74: 
  more than 200(2147483647) locations to update in array. Approximating.
[kernel] /home/fmarques/sbugs/projects/alunos/asa_1920_p2/al121/projectOld.c:74: 
  more than 200(2147483647) elements to enumerate. Approximating.
[eva] /home/fmarques/sbugs/projects/alunos/asa_1920_p2/al121/projectOld.c:150: 
  starting to merge loop iterations
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p2/al121/projectOld.c:66: 
  signed overflow.
  assert (int)(avenue * amountStreets) + street ≤ 2147483647;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p2/al121/projectOld.c:172: 
  signed overflow. assert index + 1 ≤ 2147483647;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p2/al121/projectOld.c:66: 
  signed overflow. assert avenue * amountStreets ≤ 2147483647;
[eva] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:11: 
  allocating variable __malloc_can_fail_malloc_l11_0
[eva] using specification for function scanf_va_3
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p2/al121/projectOld.c:184: 
  signed overflow. assert -2147483648 ≤ avenue - 1;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p2/al121/projectOld.c:185: 
  signed overflow. assert -2147483648 ≤ street - 1;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p2/al121/projectOld.c:66: 
  signed overflow. assert -2147483648 ≤ avenue * amountStreets;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p2/al121/projectOld.c:66: 
  signed overflow.
  assert -2147483648 ≤ (int)(avenue * amountStreets) + street;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p2/al121/projectOld.c:190: 
  out of bounds write. assert \valid(source.neighbors + i);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p2/al121/projectOld.c:61: 
  signed overflow. assert -2147483648 ≤ id + amountCrossings;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p2/al121/projectOld.c:196: 
  accessing uninitialized left-value.
  assert \initialized(&(list.nodes + brotherIndex)->neighbors[SINK]);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p2/al121/projectOld.c:196: 
  out of bounds read.
  assert \valid_read(&(list.nodes + brotherIndex)->neighbors[SINK]);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p2/al121/projectOld.c:198: 
  signed overflow. assert -2147483648 ≤ flowUpperBound - 1;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p2/al121/projectOld.c:201: 
  out of bounds write.
  assert \valid(&(list.nodes + brotherIndex)->neighbors[SINK]);
[kernel] /home/fmarques/sbugs/projects/alunos/asa_1920_p2/al121/projectOld.c:201: 
  more than 200(2147483648) locations to update in array. Approximating.
[eva] /home/fmarques/sbugs/projects/alunos/asa_1920_p2/al121/projectOld.c:181: 
  starting to merge loop iterations
[eva] using specification for function scanf_va_4
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p2/al121/projectOld.c:210: 
  signed overflow. assert -2147483648 ≤ avenue - 1;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p2/al121/projectOld.c:211: 
  signed overflow. assert -2147483648 ≤ street - 1;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p2/al121/projectOld.c:216: 
  out of bounds write. assert \valid(source.neighbors + i);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p2/al121/projectOld.c:222: 
  accessing uninitialized left-value.
  assert \initialized(&(list.nodes + brotherIndex)->neighbors[SINK]);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p2/al121/projectOld.c:222: 
  out of bounds read.
  assert \valid_read(&(list.nodes + brotherIndex)->neighbors[SINK]);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p2/al121/projectOld.c:224: 
  signed overflow. assert -2147483648 ≤ flowUpperBound - 1;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p2/al121/projectOld.c:227: 
  out of bounds write.
  assert \valid(&(list.nodes + brotherIndex)->neighbors[SINK]);
[kernel] /home/fmarques/sbugs/projects/alunos/asa_1920_p2/al121/projectOld.c:227: 
  more than 200(2147483648) locations to update in array. Approximating.
[eva] /home/fmarques/sbugs/projects/alunos/asa_1920_p2/al121/projectOld.c:207: 
  starting to merge loop iterations
[eva] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:11: 
  allocating variable __malloc_can_fail_malloc_l11_1
[eva] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:11: 
  allocating variable __malloc_can_fail_malloc_l11_2
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p2/al121/projectOld.c:242: 
  accessing uninitialized left-value.
  assert \initialized(source.neighbors + i);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p2/al121/projectOld.c:242: 
  out of bounds read. assert \valid_read(source.neighbors + i);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p2/al121/projectOld.c:251: 
  out of bounds write. assert \valid(currentPathIDs + pathI);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p2/al121/projectOld.c:252: 
  out of bounds write. assert \valid(&(list.nodes + index)->visitedIteration);
[kernel] /home/fmarques/sbugs/projects/alunos/asa_1920_p2/al121/projectOld.c:252: 
  more than 200(2147483648) locations to update in array. Approximating.
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p2/al121/projectOld.c:258: 
  accessing uninitialized left-value.
  assert \initialized(&(list.nodes + index)->neighbors[j]);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p2/al121/projectOld.c:258: 
  out of bounds read. assert \valid_read(&(list.nodes + index)->neighbors[j]);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p2/al121/projectOld.c:269: 
  accessing uninitialized left-value.
  assert \initialized(&(list.nodes + index)->neighbors[direction]);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p2/al121/projectOld.c:269: 
  out of bounds read.
  assert \valid_read(&(list.nodes + index)->neighbors[direction]);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p2/al121/projectOld.c:271: 
  accessing uninitialized left-value.
  assert \initialized(&(list.nodes + aux)->visitedIteration);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p2/al121/projectOld.c:271: 
  out of bounds read.
  assert \valid_read(&(list.nodes + aux)->visitedIteration);
[eva] /home/fmarques/sbugs/projects/alunos/asa_1920_p2/al121/projectOld.c:257: 
  starting to merge loop iterations
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p2/al121/projectOld.c:273: 
  out of bounds write. assert \valid(neighborVisitDirection + pathI);
[eva] /home/fmarques/sbugs/projects/alunos/asa_1920_p2/al121/projectOld.c:250: 
  starting to merge loop iterations
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p2/al121/projectOld.c:291: 
  accessing uninitialized left-value.
  assert \initialized(currentPathIDs + pathI);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p2/al121/projectOld.c:291: 
  out of bounds read. assert \valid_read(currentPathIDs + pathI);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p2/al121/projectOld.c:350: 
  signed overflow. assert pathI + 1 ≤ 2147483647;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p2/al121/projectOld.c:310: 
  accessing uninitialized left-value.
  assert \initialized(neighborVisitDirection + j);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p2/al121/projectOld.c:310: 
  out of bounds read. assert \valid_read(neighborVisitDirection + j);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p2/al121/projectOld.c:336: 
  accessing uninitialized left-value. assert \initialized(currentPathIDs + j);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p2/al121/projectOld.c:336: 
  out of bounds write.
  assert
  \valid(&(list.nodes + *(currentPathIDs + j))->neighbors[*(neighborVisitDirection
                                                            + j)]);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p2/al121/projectOld.c:339: 
  accessing uninitialized left-value.
  assert \initialized(currentPathIDs + (int)(j + 1));
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p2/al121/projectOld.c:339: 
  out of bounds read. assert \valid_read(currentPathIDs + (int)(j + 1));
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p2/al121/projectOld.c:339: 
  out of bounds write.
  assert
  \valid(&(list.nodes + *(currentPathIDs + (int)(j + 1)))->neighbors[reverseDirection]);
[eva] /home/fmarques/sbugs/projects/alunos/asa_1920_p2/al121/projectOld.c:308: 
  starting to merge loop iterations
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p2/al121/projectOld.c:336: 
  accessing uninitialized left-value.
  assert \initialized(neighborVisitDirection + j);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p2/al121/projectOld.c:336: 
  out of bounds read. assert \valid_read(currentPathIDs + j);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p2/al121/projectOld.c:336: 
  out of bounds read. assert \valid_read(neighborVisitDirection + j);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p2/al121/projectOld.c:339: 
  accessing uninitialized left-value. assert \initialized(currentPathIDs + j);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p2/al121/projectOld.c:339: 
  out of bounds read. assert \valid_read(currentPathIDs + j);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p2/al121/projectOld.c:343: 
  accessing uninitialized left-value.
  assert \initialized(currentPathIDs + pathI);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p2/al121/projectOld.c:343: 
  out of bounds read. assert \valid_read(currentPathIDs + pathI);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p2/al121/projectOld.c:343: 
  out of bounds write.
  assert \valid(&(list.nodes + *(currentPathIDs + pathI))->neighbors[SINK]);
[kernel] /home/fmarques/sbugs/projects/alunos/asa_1920_p2/al121/projectOld.c:343: 
  more than 200(2147483648) locations to update in array. Approximating.
[eva] /home/fmarques/sbugs/projects/alunos/asa_1920_p2/al121/projectOld.c:241: 
  starting to merge loop iterations
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_1920_p2/al121/projectOld.c:354: 
  signed overflow. assert iteration + 1 ≤ 2147483647;
[eva] using specification for function printf_va_7
[kernel] /home/fmarques/sbugs/projects/alunos/asa_1920_p2/al121/projectOld.c:146: 
  more than 200(2147483647) elements to enumerate. Approximating.
[kernel] /home/fmarques/sbugs/projects/alunos/asa_1920_p2/al121/projectOld.c:196: 
  more than 200(2147483648) elements to enumerate. Approximating.
[kernel] /home/fmarques/sbugs/projects/alunos/asa_1920_p2/al121/projectOld.c:252: 
  more than 200(2147483648) elements to enumerate. Approximating.
[eva] done for function main
[scope:rm_asserts] removing 4 assertion(s)
[eva] ====== VALUES COMPUTED ======
[eva:final-states] Values at end of function getBrotherID:
  __retres ∈ [--..--]
[eva:final-states] Values at end of function getNodeID:
  __retres ∈ [--..--]
[eva:final-states] Values at end of function insertAdjacency:
  __malloc_can_fail_malloc_l11[bits 0 to 31] ∈ {-1} or UNINITIALIZED
                              [4..60129542127] ∈ [--..--] or UNINITIALIZED
                              [bits 481036337024 to 481036337087]# ∈
                              [-1..2147483647] or UNINITIALIZED repeated %32 
                              [bits 481036337088 to 481036337119] ∈
                              [1..2147483647] or UNINITIALIZED
                              [60129542140..18446744073709551611] ∈
                              UNINITIALIZED
[eva:final-states] Values at end of function can_fail_malloc:
  __fc_heap_status ∈ [--..--]
  __fc_random_counter ∈ [--..--]
  fail ∈ [0. .. 1.]
  __retres ∈
          {{ NULL ; (void *)&__malloc_can_fail_malloc_l11 ;
             (void *)&__malloc_can_fail_malloc_l11_0 ;
             (void *)&__malloc_can_fail_malloc_l11_1 ;
             (void *)&__malloc_can_fail_malloc_l11_2 }}
[eva:final-states] Values at end of function main:
  __fc_heap_status ∈ [--..--]
  __fc_random_counter ∈ [--..--]
  list.nodes ∈
      {{ NULL ; (Node *)&__malloc_can_fail_malloc_l11 }} or ESCAPINGADDR
      .size ∈ [-2147483647..2147483647],1%2
      .[bits 96 to 127] ∈ {0}
  source.neighbors ∈
        {{ NULL ; (int *)&__malloc_can_fail_malloc_l11_0 }} or ESCAPINGADDR
  amountCrossings ∈ [--..--]
  inverted ∈ {0; 1}
  amountAvenues ∈ [--..--]
  amountStreets ∈ [--..--]
  amountMarkets ∈ [--..--]
  amountPeople ∈ [--..--]
  sinkID ∈ [-2147483648..2147483646],0%2
  i ∈ [0..2147483647]
  j ∈ [0..2147483647] or UNINITIALIZED
  aux ∈ [-1..2147483646] or UNINITIALIZED
  iteration ∈ [0..2147483647]
  index ∈ [--..--] or UNINITIALIZED
  brotherIndex ∈ [--..--] or UNINITIALIZED
  avenue ∈ [-2147483648..2147483646] or UNINITIALIZED
  street ∈ [-2147483648..2147483646] or UNINITIALIZED
  flow ∈ [0..2147483647]
  pathI ∈ [-1..2147483647] or UNINITIALIZED
  reverseDirection ∈ {0; 1; 2; 3; 4; 5} or UNINITIALIZED
  flowUpperBound ∈ [--..--]
  direction ∈ {0; 1; 2; 3; 4; 5} or UNINITIALIZED
  currentPathIDs ∈
                {{ NULL ; (int *)&__malloc_can_fail_malloc_l11_1 }} or ESCAPINGADDR
  neighborVisitDirection ∈
                        {{ NULL ; (int *)&__malloc_can_fail_malloc_l11_2 }} or ESCAPINGADDR
  directions[0..3] ∈ {2; 3; 4; 5}
  __retres ∈ {0}
  S___fc_stdin[0..1] ∈ [--..--]
  S___fc_stdout[0..1] ∈ [--..--]
  __malloc_can_fail_malloc_l11[0..60129542139] ∈ [--..--] or UNINITIALIZED
                              [bits 481036337120 to 481036337151] ∈
                              [0..2147483647] or UNINITIALIZED
                              [60129542144..18446744073709551611] ∈
                              UNINITIALIZED
  __malloc_can_fail_malloc_l11_0[0..8589934587] ∈ [--..--] or UNINITIALIZED
                                [8589934588..18446744073709551611] ∈
                                UNINITIALIZED
  __malloc_can_fail_malloc_l11_1[0..8589934591] ∈ [--..--] or UNINITIALIZED
                                [8589934592..18446744073709551611] ∈
                                UNINITIALIZED
  __malloc_can_fail_malloc_l11_2[bits 0 to 68719476735]# ∈
                                {0; 1; 2; 3; 4; 5} or UNINITIALIZED repeated %32 
                                [8589934592..18446744073709551611] ∈
                                UNINITIALIZED
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  5 functions analyzed (out of 8): 62% coverage.
  In these functions, 197 statements reached (out of 197): 100% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  58 alarms generated by the analysis:
      25 invalid memory accesses
      20 integer overflows
      13 accesses to uninitialized left-values
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    18 valid     0 unknown     0 invalid     18 total
  100% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[report] Classification
[report] Output /home/fmarques/sbugs/projects/outputs/framaC/asa_1920_p2/al121/errors.json
[report] Reviews     :   54
[report] Unclassified:   54
