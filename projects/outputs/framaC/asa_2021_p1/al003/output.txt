[report] Monitoring events
[report] Loading '/home/fmarques/sbugs/projects/configs/frama-c_report_rules.json'
[kernel] Parsing /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c (with preprocessing)
[kernel:parser:decimal-float] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:10: 
  Floating-point constant 0.10 is not represented exactly. Will use 0x1.999999999999ap-4.
[kernel:parser:decimal-float] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:17: 
  Floating-point constant 0.10 is not represented exactly. Will use 0x1.999999999999ap-4.
[kernel:parser:decimal-float] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:24: 
  Floating-point constant 0.10 is not represented exactly. Will use 0x1.999999999999ap-4.
[eva] Analyzing a complete application starting at main
[eva] Computing initial state
[eva] Initial state computed
[eva:initial-state] Values of globals at initialization
  
[eva] using specification for function scanf_va_1
[eva] using specification for function time
[eva] using specification for function srand
[eva] using specification for function rand
[eva] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:11: 
  allocating variable __malloc_can_fail_malloc_l11
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:143: 
  out of bounds write. assert \valid(&g->num_pieces);
[eva] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:11: 
  allocating variable __malloc_can_fail_malloc_l11_0
[eva] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:11: 
  allocating variable __malloc_can_fail_malloc_l11_1
[eva] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:11: 
  allocating variable __malloc_can_fail_malloc_l11_2
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:156: 
  out of bounds write. assert \valid(&domino->idDomino);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:157: 
  out of bounds write. assert \valid(&domino->does_depend);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:158: 
  out of bounds write. assert \valid(&domino->color);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:159: 
  out of bounds write. assert \valid(&domino->first);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:160: 
  out of bounds write. assert \valid(&domino->last);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:161: 
  out of bounds write. assert \valid(&domino->nextAfterSort);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:162: 
  out of bounds write. assert \valid(&domino->previousAfterSort);
[eva] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:307: 
  starting to merge loop iterations
[kernel] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:156: 
  more than 200(2147483647) locations to update in array. Approximating.
[kernel] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:157: 
  more than 200(2147483647) locations to update in array. Approximating.
[kernel] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:158: 
  more than 200(2147483647) locations to update in array. Approximating.
[kernel] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:159: 
  more than 200(2147483647) locations to update in array. Approximating.
[kernel] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:160: 
  more than 200(2147483647) locations to update in array. Approximating.
[kernel] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:161: 
  more than 200(2147483647) locations to update in array. Approximating.
[kernel] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:162: 
  more than 200(2147483647) locations to update in array. Approximating.
[kernel] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:156: 
  more than 200(2147483647) elements to enumerate. Approximating.
[kernel] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:157: 
  more than 200(2147483647) elements to enumerate. Approximating.
[kernel] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:158: 
  more than 200(2147483647) elements to enumerate. Approximating.
[kernel] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:159: 
  more than 200(2147483647) elements to enumerate. Approximating.
[kernel] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:160: 
  more than 200(2147483647) elements to enumerate. Approximating.
[kernel] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:161: 
  more than 200(2147483647) elements to enumerate. Approximating.
[kernel] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:162: 
  more than 200(2147483647) elements to enumerate. Approximating.
[eva] using specification for function scanf_va_2
[eva] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:11: 
  allocating variable __malloc_can_fail_malloc_l11_3
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:170: 
  out of bounds write. assert \valid(&dep->next_dep);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:172: 
  accessing uninitialized left-value. assert \initialized(&d->first);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:172: 
  out of bounds read. assert \valid_read(&d->first);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:174: 
  out of bounds write. assert \valid(&d->first);
[kernel] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:174: 
  more than 200(2147483647) locations to update in array. Approximating.
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:178: 
  accessing uninitialized left-value. assert \initialized(&d->last);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:178: 
  out of bounds read. assert \valid_read(&d->last);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:178: 
  out of bounds write. assert \valid(&(d->last)->next_dep);
[kernel] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:178: 
  all target addresses were invalid. This path is assumed to be dead.
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:180: 
  out of bounds write. assert \valid(&d->last);
[kernel] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:180: 
  more than 200(2147483647) locations to update in array. Approximating.
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:181: 
  out of bounds write. assert \valid(&aux->does_depend);
[kernel] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:181: 
  more than 200(2147483647) locations to update in array. Approximating.
[kernel] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:178: 
  more than 200(2147483646) elements to enumerate. Approximating.
[eva] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:312: 
  starting to merge loop iterations
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:172: 
  pointer comparison. assert \pointer_comparable((void *)d->first, (void *)0);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:190: 
  accessing uninitialized left-value. assert \initialized(&d->does_depend);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:190: 
  out of bounds read. assert \valid_read(&d->does_depend);
[eva] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:187: 
  starting to merge loop iterations
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:192: 
  signed overflow. assert counter + 1 â‰¤ 2147483647;
[eva] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:11: 
  allocating variable __malloc_can_fail_malloc_l11_4
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:74: 
  out of bounds write. assert \valid(&s->first);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:254: 
  accessing uninitialized left-value. assert \initialized(&d->color);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:254: 
  out of bounds read. assert \valid_read(&d->color);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:256: 
  accessing uninitialized left-value. assert \initialized(&d->idDomino);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:256: 
  out of bounds read. assert \valid_read(&d->idDomino);
[eva] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:11: 
  allocating variable __malloc_can_fail_malloc_l11_5
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:60: 
  out of bounds write. assert \valid(&el->id);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:262: 
  accessing uninitialized left-value. assert \initialized(&d->first);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:262: 
  out of bounds read. assert \valid_read(&d->first);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:262: 
  pointer comparison. assert \pointer_comparable((void *)d->first, (void *)0);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:267: 
  out of bounds write. assert \valid(&d->color);
[kernel] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:267: 
  more than 200(2147483647) locations to update in array. Approximating.
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:271: 
  accessing uninitialized left-value. assert \initialized(&d->color);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:271: 
  out of bounds read. assert \valid_read(&d->color);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:276: 
  out of bounds write. assert \valid(&d->color);
[kernel] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:276: 
  more than 200(2147483647) locations to update in array. Approximating.
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:281: 
  accessing uninitialized left-value. assert \initialized(&d->first);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:281: 
  out of bounds read. assert \valid_read(&d->first);
[eva] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:281: 
  Assigning imprecise value to dep.
  The imprecision originates from Merge
  {/home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:174}
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:281: 
  pointer comparison. assert \pointer_comparable((void *)dep, (void *)0);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:283: 
  accessing uninitialized left-value. assert \initialized(&dep->id_domino);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:283: 
  out of bounds read. assert \valid_read(&dep->id_domino);
[eva] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:283: 
  Assigning imprecise value to id.
  The imprecision originates from Misaligned
  {/home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:178}
[eva] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:284: 
  Assigning imprecise value to d1.
  The imprecision originates from Misaligned
  {/home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:178}
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:285: 
  accessing uninitialized left-value. assert \initialized(&d1->color);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:285: 
  out of bounds read. assert \valid_read(&d1->color);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:287: 
  accessing uninitialized left-value. assert \initialized(&d1->idDomino);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:287: 
  out of bounds read. assert \valid_read(&d1->idDomino);
[eva] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:11: 
  allocating variable __malloc_can_fail_malloc_l11_6
[eva] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:60: 
  Assigning imprecise value to el->id
  (pointing to __malloc_can_fail_malloc_l11_6 with offsets {0}).
  The imprecision originates from Misaligned
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:281: 
  accessing uninitialized left-value. assert \initialized(&dep->next_dep);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:281: 
  out of bounds read. assert \valid_read(&dep->next_dep);
[eva] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:281: 
  Assigning imprecise value to dep.
  The imprecision originates from Misaligned
  {/home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:178}
[eva] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:281: 
  starting to merge loop iterations
[eva] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:60: 
  Assigning imprecise value to el->id
  (pointing to __malloc_w_can_fail_malloc_l11_6 with offsets {0}).
  The imprecision originates from Misaligned
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:290: 
  out of bounds write. assert \valid(&d->color);
[kernel] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:290: 
  more than 200(2147483647) locations to update in array. Approximating.
[eva] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:257: 
  starting to merge loop iterations
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:260: 
  accessing uninitialized left-value. assert \initialized(&el->id);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:260: 
  out of bounds read. assert \valid_read(&el->id);
[eva] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:260: 
  Assigning imprecise value to id.
  The imprecision originates from Misaligned
[eva] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:261: 
  Assigning imprecise value to d.
  The imprecision originates from Misaligned
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:125: 
  out of bounds read. assert \valid_read(&(s->first)->next);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:132: 
  accessing uninitialized left-value.
  assert \initialized(&(s->last)->previous);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:132: 
  out of bounds read. assert \valid_read(&(s->last)->previous);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:132: 
  out of bounds write. assert \valid(&((s->last)->previous)->next);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:133: 
  accessing uninitialized left-value. assert \initialized(&el->previous);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:133: 
  out of bounds read. assert \valid_read(&el->previous);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:135: 
  accessing uninitialized left-value. assert \initialized(&el->id);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:135: 
  out of bounds read. assert \valid_read(&el->id);
[eva] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:135: 
  Assigning imprecise value to id.
  The imprecision originates from Misaligned
[eva] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:137: 
  Assigning imprecise value to __retres.
  The imprecision originates from Misaligned
[eva] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:137: 
  Assigning imprecise value to \result<pop>.
  The imprecision originates from Misaligned
[eva] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:264: 
  Assigning imprecise value to id.
  The imprecision originates from Misaligned
[eva] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:265: 
  Assigning imprecise value to d.
  The imprecision originates from Misaligned
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:234: 
  pointer comparison.
  assert \pointer_comparable((void *)g->lastAfterSort, (void *)0);
[eva] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:236: 
  Assigning imprecise value to g->lastAfterSort
  (pointing to __malloc_can_fail_malloc_l11 with offsets {256}).
  The imprecision originates from Misaligned
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:240: 
  out of bounds write. assert \valid(&(g->firstAfterSort)->previousAfterSort);
[eva] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:240: 
  Assigning imprecise value to (g->firstAfterSort)->previousAfterSort
  (pointing to __malloc_can_fail_malloc_l11_0 with offsets [320..824633720384],320%384).
  The imprecision originates from Misaligned
[kernel] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:240: 
  more than 200(2147483647) locations to update in array. Approximating.
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:241: 
  out of bounds write. assert \valid(&d->nextAfterSort);
[eva] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:243: 
  Assigning imprecise value to g->firstAfterSort
  (pointing to __malloc_can_fail_malloc_l11 with offsets {192}).
  The imprecision originates from Misaligned
[eva] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:273: 
  Assigning imprecise value to id.
  The imprecision originates from Misaligned
[eva] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:274: 
  Assigning imprecise value to d.
  The imprecision originates from Misaligned
[eva] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:281: 
  Assigning imprecise value to dep.
  The imprecision originates from Misaligned
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:112: 
  out of bounds write. assert \valid(&(s->last)->next);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:94: 
  accessing left-value that contains escaping addresses.
  assert Â¬\dangling(&s->first);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:259: 
  accessing left-value that contains escaping addresses.
  assert Â¬\dangling(&s->last);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:125: 
  accessing uninitialized left-value. assert \initialized(&(s->first)->next);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:125: 
  accessing left-value that contains escaping addresses.
  assert Â¬\dangling(&(s->first)->next);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:132: 
  accessing left-value that contains escaping addresses.
  assert Â¬\dangling(&(s->last)->previous);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:133: 
  accessing left-value that contains escaping addresses.
  assert Â¬\dangling(&el->previous);
[eva] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:240: 
  Assigning imprecise value to (g->firstAfterSort)->previousAfterSort
  (pointing to __malloc_can_fail_malloc_l11_0 with offsets [0..147573952589676412736];
   __malloc_w_can_fail_malloc_l11_3 with offsets [0..64]).
  The imprecision originates from Misaligned
[eva] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:283: 
  Assigning imprecise value to id.
  The imprecision originates from Misaligned
[eva] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:284: 
  Assigning imprecise value to d1.
  The imprecision originates from Misaligned
[eva] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:281: 
  Assigning imprecise value to dep.
  The imprecision originates from Misaligned
[eva] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:251: 
  starting to merge loop iterations
[eva] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:60: 
  Assigning imprecise value to el->id
  (pointing to __malloc_w_can_fail_malloc_l11_5 with offsets {0}).
  The imprecision originates from Misaligned
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:112: 
  accessing left-value that contains escaping addresses.
  assert Â¬\dangling(&s->last);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:201: 
  assertion 'alloca_bounds' got status unknown.
[eva] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:201: 
  allocating variable __malloc_longestPath_l201
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:204: 
  out of bounds write. assert \valid(levels + i);
[eva] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:202: 
  starting to merge loop iterations
[eva] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:206: 
  Assigning imprecise value to d.
  The imprecision originates from Misaligned
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:207: 
  pointer comparison. assert \pointer_comparable((void *)0, (void *)d);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:209: 
  accessing uninitialized left-value. assert \initialized(&d->first);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:209: 
  out of bounds read. assert \valid_read(&d->first);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:209: 
  pointer comparison. assert \pointer_comparable((void *)d->first, (void *)0);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:211: 
  accessing uninitialized left-value. assert \initialized(&d->first);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:211: 
  out of bounds read. assert \valid_read(&d->first);
[eva] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:211: 
  Assigning imprecise value to dep.
  The imprecision originates from Misaligned
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:212: 
  pointer comparison. assert \pointer_comparable((void *)0, (void *)dep);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:214: 
  accessing uninitialized left-value. assert \initialized(&d->idDomino);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:214: 
  accessing uninitialized left-value. assert \initialized(&dep->id_domino);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:214: 
  out of bounds read. assert \valid_read(&d->idDomino);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:214: 
  out of bounds read. assert \valid_read(&dep->id_domino);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:214: 
  signed overflow. assert -2147483648 â‰¤ d->idDomino - 1;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:214: 
  signed overflow. assert d->idDomino - 1 â‰¤ 2147483647;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:214: 
  signed overflow. assert -2147483648 â‰¤ dep->id_domino - 1;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:214: 
  signed overflow. assert dep->id_domino - 1 â‰¤ 2147483647;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:214: 
  accessing uninitialized left-value.
  assert \initialized(levels + (int)(d->idDomino - 1));
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:214: 
  accessing uninitialized left-value.
  assert \initialized(levels + (int)(dep->id_domino - 1));
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:214: 
  out of bounds read. assert \valid_read(levels + (int)(d->idDomino - 1));
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:214: 
  out of bounds read. assert \valid_read(levels + (int)(dep->id_domino - 1));
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:214: 
  signed overflow.
  assert -2147483648 â‰¤ *(levels + (int)(d->idDomino - 1)) + 1;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:214: 
  signed overflow.
  assert *(levels + (int)(d->idDomino - 1)) + 1 â‰¤ 2147483647;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:216: 
  accessing uninitialized left-value. assert \initialized(&dep->id_domino);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:216: 
  out of bounds read. assert \valid_read(&dep->id_domino);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:216: 
  signed overflow. assert -2147483648 â‰¤ dep->id_domino - 1;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:216: 
  signed overflow. assert dep->id_domino - 1 â‰¤ 2147483647;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:216: 
  out of bounds write. assert \valid(levels + (int)(dep->id_domino - 1));
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:216: 
  accessing uninitialized left-value. assert \initialized(&d->idDomino);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:216: 
  out of bounds read. assert \valid_read(&d->idDomino);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:216: 
  signed overflow. assert -2147483648 â‰¤ d->idDomino - 1;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:216: 
  signed overflow. assert d->idDomino - 1 â‰¤ 2147483647;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:216: 
  accessing uninitialized left-value.
  assert \initialized(levels + (int)(d->idDomino - 1));
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:216: 
  out of bounds read. assert \valid_read(levels + (int)(d->idDomino - 1));
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:216: 
  signed overflow.
  assert -2147483648 â‰¤ *(levels + (int)(d->idDomino - 1)) + 1;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:216: 
  signed overflow.
  assert *(levels + (int)(d->idDomino - 1)) + 1 â‰¤ 2147483647;
[eva] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:216: 
  Assigning imprecise value to *(levels + (dep->id_domino - 1))
  (pointing to __malloc_can_fail_malloc_l11_0 with offsets [0..147573952589676412768];
   __malloc_w_can_fail_malloc_l11_3 with offsets [0..96];
  __malloc_longestPath_l201 with offsets [0..147573952589676412864]).
  The imprecision originates from Misaligned
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:218: 
  accessing uninitialized left-value. assert \initialized(&dep->next_dep);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:218: 
  out of bounds read. assert \valid_read(&dep->next_dep);
[eva] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:218: 
  Assigning imprecise value to dep.
  The imprecision originates from Misaligned
[eva] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:212: 
  starting to merge loop iterations
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:221: 
  accessing uninitialized left-value. assert \initialized(&d->nextAfterSort);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:221: 
  out of bounds read. assert \valid_read(&d->nextAfterSort);
[eva] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:221: 
  Assigning imprecise value to d.
  The imprecision originates from Misaligned
[eva] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:207: 
  starting to merge loop iterations
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:225: 
  accessing uninitialized left-value. assert \initialized(levels + i);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:225: 
  out of bounds read. assert \valid_read(levels + i);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:227: 
  out of bounds read. assert \valid_read(levels + i);
[eva] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:227: 
  Assigning imprecise value to g->maxSequence
  (pointing to __malloc_can_fail_malloc_l11 with offsets {64}).
  The imprecision originates from Misaligned
[eva] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:223: 
  starting to merge loop iterations
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:227: 
  accessing uninitialized left-value. assert \initialized(levels + i);
[eva] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:321: 
  freeing automatic bases: {__malloc_longestPath_l201}
[eva] using specification for function printf_va_1
[eva] done for function main
[scope:rm_asserts] removing 18 assertion(s)
[eva] ====== VALUES COMPUTED ======
[eva:final-states] Values at end of function addDomino:
  __malloc_can_fail_malloc_l11_0[bits 0 to 31] âˆˆ
                                [1..2147483647] or UNINITIALIZED
                                [bits 32 to 824633720095]# âˆˆ
                                [0..2147483647] or UNINITIALIZED repeated %32 
                                [103079215012..103079215055] âˆˆ
                                {0} or UNINITIALIZED
                                [103079215056..18446744073709551599] âˆˆ
                                UNINITIALIZED
[eva:final-states] Values at end of function countSources:
  i âˆˆ [0..2147483647]
  counter âˆˆ [0..2147483647]
  __malloc_can_fail_malloc_l11[0..3] âˆˆ [--..--]
                              [bits 32 to 63] âˆˆ [0..2147483647]
                              [8..11] âˆˆ {0}
                              [12..15] âˆˆ UNINITIALIZED
                              [bits 128 to 191] âˆˆ
                              {{ NULL ;
                                 (? *)&__malloc_can_fail_malloc_l11_0 }}
                              [24..39] âˆˆ {0}
[eva:final-states] Values at end of function freeStackEl:
  el âˆˆ
    {{ (StackEl *)&__malloc_w_can_fail_malloc_l11_5 ;
       (StackEl *)&__malloc_w_can_fail_malloc_l11_6 }} or ESCAPINGADDR
  el âˆˆ
    {{ (StackEl *)&__malloc_w_can_fail_malloc_l11_5 ;
       (StackEl *)&__malloc_w_can_fail_malloc_l11_6 }} or ESCAPINGADDR
  el âˆˆ
    {{ (StackEl *)&__malloc_w_can_fail_malloc_l11_5 ;
       (StackEl *)&__malloc_w_can_fail_malloc_l11_6 }} or ESCAPINGADDR
  __malloc_can_fail_malloc_l11_4[bits 0 to 127]# âˆˆ
                                {{ NULL ;
                                   (? *)&__malloc_w_can_fail_malloc_l11_5 ;
                                   (? *)&__malloc_w_can_fail_malloc_l11_6 }} or ESCAPINGADDR repeated %64 
  __malloc_w_can_fail_malloc_l11_5[0..3] âˆˆ
                                  {{ garbled mix of &{__malloc_can_fail_malloc_l11_0;
                                                      __malloc_w_can_fail_malloc_l11_3}
                                   (origin: Misaligned) }} or UNINITIALIZED
                                  [4..7] âˆˆ UNINITIALIZED
                                  [bits 64 to 191]# âˆˆ
                                  {{ NULL ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_5 ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_6 }} or UNINITIALIZED or ESCAPINGADDR repeated %64 
  __malloc_w_can_fail_malloc_l11_6[0..3] âˆˆ
                                  {{ garbled mix of &{__malloc_can_fail_malloc_l11_0;
                                                      __malloc_w_can_fail_malloc_l11_3}
                                   (origin: Misaligned) }} or UNINITIALIZED
                                  [4..7] âˆˆ UNINITIALIZED
                                  [bits 64 to 191]# âˆˆ
                                  {{ NULL ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_5 ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_6 }} or UNINITIALIZED or ESCAPINGADDR repeated %64 
[eva:final-states] Values at end of function isStackEmpty:
  __retres âˆˆ {-1; 0}
[eva:final-states] Values at end of function longestPath:
  i âˆˆ [0..2147483647]
  levels âˆˆ ESCAPINGADDR
  __lengthof_levels âˆˆ [--..--]
  d âˆˆ {0}
  __malloc_can_fail_malloc_l11[0..3] âˆˆ [--..--]
                              [bits 32 to 63] âˆˆ [0..2147483647]
                              [8..11] âˆˆ
                              {{ garbled mix of &{__malloc_can_fail_malloc_l11_0;
                                                  __malloc_w_can_fail_malloc_l11_3}
                               (origin: Misaligned) }}
                              [12..15] âˆˆ UNINITIALIZED
                              [bits 128 to 191] âˆˆ
                              {{ NULL ;
                                 (? *)&__malloc_can_fail_malloc_l11_0 }}
                              [24..39] âˆˆ
                              {{ garbled mix of &{__malloc_can_fail_malloc_l11_0;
                                                  __malloc_w_can_fail_malloc_l11_3}
                               (origin: Misaligned) }}
  __malloc_can_fail_malloc_l11_0[0..18446744073709551599] âˆˆ
                                {{ garbled mix of &{__malloc_can_fail_malloc_l11_0;
                                                    __malloc_w_can_fail_malloc_l11_3}
                                 (origin: Misaligned) }} or UNINITIALIZED
  __malloc_w_can_fail_malloc_l11_3[0..15] âˆˆ
                                  {{ garbled mix of &{__malloc_can_fail_malloc_l11_0;
                                                      __malloc_w_can_fail_malloc_l11_3}
                                   (origin: Misaligned) }} or UNINITIALIZED
[eva:final-states] Values at end of function pop:
  el âˆˆ
    {{ (StackEl *)&__malloc_w_can_fail_malloc_l11_5 ;
       (StackEl *)&__malloc_w_can_fail_malloc_l11_6 }} or UNINITIALIZED or ESCAPINGADDR
  id âˆˆ
    {{ garbled mix of &{__malloc_can_fail_malloc_l11_0;
                        __malloc_w_can_fail_malloc_l11_3}
     (origin: Misaligned) }} or UNINITIALIZED
  el âˆˆ
    {{ (StackEl *)&__malloc_w_can_fail_malloc_l11_5 ;
       (StackEl *)&__malloc_w_can_fail_malloc_l11_6 }} or ESCAPINGADDR
  __retres âˆˆ
          {{ garbled mix of &{__malloc_can_fail_malloc_l11_0;
                              __malloc_w_can_fail_malloc_l11_3}
           (origin: Misaligned) }}
  __malloc_can_fail_malloc_l11_4[bits 0 to 127]# âˆˆ
                                {{ NULL ;
                                   (? *)&__malloc_w_can_fail_malloc_l11_5 ;
                                   (? *)&__malloc_w_can_fail_malloc_l11_6 }} or ESCAPINGADDR repeated %64 
  __malloc_w_can_fail_malloc_l11_5[0..3] âˆˆ
                                  {{ garbled mix of &{__malloc_can_fail_malloc_l11_0;
                                                      __malloc_w_can_fail_malloc_l11_3}
                                   (origin: Misaligned) }} or UNINITIALIZED
                                  [4..7] âˆˆ UNINITIALIZED
                                  [bits 64 to 191]# âˆˆ
                                  {{ NULL ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_5 ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_6 }} or UNINITIALIZED or ESCAPINGADDR repeated %64 
  __malloc_w_can_fail_malloc_l11_6[0..3] âˆˆ
                                  {{ garbled mix of &{__malloc_can_fail_malloc_l11_0;
                                                      __malloc_w_can_fail_malloc_l11_3}
                                   (origin: Misaligned) }} or UNINITIALIZED
                                  [4..7] âˆˆ UNINITIALIZED
                                  [bits 64 to 191]# âˆˆ
                                  {{ NULL ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_5 ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_6 }} or UNINITIALIZED or ESCAPINGADDR repeated %64 
[eva:final-states] Values at end of function can_fail_malloc:
  __fc_heap_status âˆˆ [--..--]
  __fc_random_counter âˆˆ [--..--]
  fail âˆˆ [0. .. 1.]
  __retres âˆˆ
          {{ NULL ; (void *)&__malloc_can_fail_malloc_l11 ;
             (void *)&__malloc_can_fail_malloc_l11_0 ;
             (void *)&__malloc_can_fail_malloc_l11_1 ;
             (void *)&__malloc_can_fail_malloc_l11_2 ;
             (void *)&__malloc_w_can_fail_malloc_l11_3 ;
             (void *)&__malloc_can_fail_malloc_l11_4 ;
             (void *)&__malloc_w_can_fail_malloc_l11_5 ;
             (void *)&__malloc_w_can_fail_malloc_l11_6 }}
[eva:final-states] Values at end of function addDependence:
  __fc_heap_status âˆˆ [--..--]
  __fc_random_counter âˆˆ [--..--]
  dep âˆˆ {{ (Dependence *)&__malloc_w_can_fail_malloc_l11_3 }}
  d âˆˆ {{ &__malloc_can_fail_malloc_l11_0 + [0..103079215008],0%48 }}
  aux âˆˆ {{ &__malloc_can_fail_malloc_l11_0 + [0..103079215008],0%48 }}
  __malloc_can_fail_malloc_l11_0[bits 0 to 31] âˆˆ
                                [1..2147483647] or UNINITIALIZED
                                [bits 32 to 127]# âˆˆ
                                [0..2147483647] or UNINITIALIZED repeated %32 
                                [16..103079215011] âˆˆ
                                {{ garbled mix of &{__malloc_w_can_fail_malloc_l11_3}
                                 (origin: Merge
                                 {/home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:174}) }} or UNINITIALIZED
                                [103079215012..103079215015] âˆˆ
                                {{ garbled mix of &{__malloc_w_can_fail_malloc_l11_3}
                                 (origin: Merge
                                 {/home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:181}) }} or UNINITIALIZED
                                [bits 824633720128 to 824633720319]# âˆˆ
                                {{ NULL ;
                                   (? *)&__malloc_w_can_fail_malloc_l11_3 }} or UNINITIALIZED repeated %64 
                                [103079215040..103079215055] âˆˆ
                                {0} or UNINITIALIZED
                                [103079215056..18446744073709551599] âˆˆ
                                UNINITIALIZED
  __malloc_w_can_fail_malloc_l11_3[0..15] âˆˆ
                                  {{ garbled mix of &{__malloc_w_can_fail_malloc_l11_3}
                                   (origin: Misaligned
                                   {/home/fmarques/sbugs/projects/alunos/asa_2021_p1/al003/asa.c:178}) }} or UNINITIALIZED
[eva:final-states] Values at end of function createGame:
  __fc_heap_status âˆˆ [--..--]
  __fc_random_counter âˆˆ [--..--]
  g âˆˆ {{ (Game *)&__malloc_can_fail_malloc_l11 }}
  __malloc_can_fail_malloc_l11[0..3] âˆˆ [--..--]
                              [4..11] âˆˆ {0}
                              [12..15] âˆˆ UNINITIALIZED
                              [bits 128 to 191] âˆˆ
                              {{ NULL ;
                                 (? *)&__malloc_can_fail_malloc_l11_0 }}
                              [24..39] âˆˆ {0}
[eva:final-states] Values at end of function newStack:
  __fc_heap_status âˆˆ [--..--]
  __fc_random_counter âˆˆ [--..--]
  s âˆˆ {{ (Stack *)&__malloc_can_fail_malloc_l11_4 }}
  __malloc_can_fail_malloc_l11_4[0..15] âˆˆ {0}
[eva:final-states] Values at end of function newStackEl:
  __fc_heap_status âˆˆ [--..--]
  __fc_random_counter âˆˆ [--..--]
  el âˆˆ
    {{ (StackEl *)&__malloc_w_can_fail_malloc_l11_5 ;
       (StackEl *)&__malloc_w_can_fail_malloc_l11_6 }}
  __malloc_w_can_fail_malloc_l11_5[0..3] âˆˆ
                                  {{ garbled mix of &{__malloc_can_fail_malloc_l11_0;
                                                      __malloc_w_can_fail_malloc_l11_3}
                                   (origin: Misaligned) }} or UNINITIALIZED
                                  [4..7] âˆˆ UNINITIALIZED
                                  [bits 64 to 191]# âˆˆ
                                  {{ NULL ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_5 ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_6 }} or UNINITIALIZED or ESCAPINGADDR repeated %64 
  __malloc_w_can_fail_malloc_l11_6[0..3] âˆˆ
                                  {{ garbled mix of &{__malloc_can_fail_malloc_l11_0;
                                                      __malloc_w_can_fail_malloc_l11_3}
                                   (origin: Misaligned) }} or UNINITIALIZED
                                  [4..7] âˆˆ UNINITIALIZED
                                  [bits 64 to 191]# âˆˆ
                                  {{ NULL ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_5 ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_6 }} or UNINITIALIZED or ESCAPINGADDR repeated %64 
[eva:final-states] Values at end of function push:
  __fc_heap_status âˆˆ [--..--]
  __fc_random_counter âˆˆ [--..--]
  el âˆˆ
    {{ (StackEl *)&__malloc_w_can_fail_malloc_l11_5 ;
       (StackEl *)&__malloc_w_can_fail_malloc_l11_6 }}
  __malloc_can_fail_malloc_l11_4[bits 0 to 63] âˆˆ
                                {{ NULL ;
                                   (? *)&__malloc_w_can_fail_malloc_l11_5 ;
                                   (? *)&__malloc_w_can_fail_malloc_l11_6 }}
                                [bits 64 to 127] âˆˆ
                                {{ (? *)&__malloc_w_can_fail_malloc_l11_5 ;
                                   (? *)&__malloc_w_can_fail_malloc_l11_6 }}
  __malloc_w_can_fail_malloc_l11_5[0..3] âˆˆ
                                  {{ garbled mix of &{__malloc_can_fail_malloc_l11_0;
                                                      __malloc_w_can_fail_malloc_l11_3}
                                   (origin: Misaligned) }} or UNINITIALIZED
                                  [4..7] âˆˆ UNINITIALIZED
                                  [bits 64 to 191]# âˆˆ
                                  {{ NULL ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_5 ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_6 }} or UNINITIALIZED or ESCAPINGADDR repeated %64 
  __malloc_w_can_fail_malloc_l11_6[0..3] âˆˆ
                                  {{ garbled mix of &{__malloc_can_fail_malloc_l11_0;
                                                      __malloc_w_can_fail_malloc_l11_3}
                                   (origin: Misaligned) }} or UNINITIALIZED
                                  [4..7] âˆˆ UNINITIALIZED
                                  [bits 64 to 191]# âˆˆ
                                  {{ NULL ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_5 ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_6 }} or UNINITIALIZED or ESCAPINGADDR repeated %64 
[eva:final-states] Values at end of function topSort:
  __malloc_can_fail_malloc_l11[bits 0 to 31] âˆˆ [1..2147483647]
                              [bits 32 to 63] âˆˆ [0..2147483647]
                              [8..11] âˆˆ {0}
                              [12..15] âˆˆ UNINITIALIZED
                              [bits 128 to 191] âˆˆ
                              {{ NULL ;
                                 (? *)&__malloc_can_fail_malloc_l11_0 }}
                              [24..39] âˆˆ
                              {{ garbled mix of &{__malloc_can_fail_malloc_l11_0;
                                                  __malloc_w_can_fail_malloc_l11_3}
                               (origin: Misaligned) }}
  __malloc_can_fail_malloc_l11_0[0..18446744073709551599] âˆˆ
                                {{ garbled mix of &{__malloc_can_fail_malloc_l11_0;
                                                    __malloc_w_can_fail_malloc_l11_3}
                                 (origin: Misaligned) }} or UNINITIALIZED
  __malloc_w_can_fail_malloc_l11_3[0..15] âˆˆ
                                  {{ garbled mix of &{__malloc_can_fail_malloc_l11_0;
                                                      __malloc_w_can_fail_malloc_l11_3}
                                   (origin: Misaligned) }} or UNINITIALIZED
[eva:final-states] Values at end of function dfs:
  __fc_heap_status âˆˆ [--..--]
  __fc_random_counter âˆˆ [--..--]
  s âˆˆ {{ (Stack *)&__malloc_can_fail_malloc_l11_4 }}
  i âˆˆ [0..2147483647]
  id âˆˆ
    {{ garbled mix of &{__malloc_can_fail_malloc_l11_0;
                        __malloc_w_can_fail_malloc_l11_3}
     (origin: Misaligned) }} or UNINITIALIZED
  d1 âˆˆ
    {{ &__malloc_can_fail_malloc_l11_0 + [-8..18446744073709551599] ;
       &__malloc_w_can_fail_malloc_l11_3 + [-8..4] }} or UNINITIALIZED
  __malloc_can_fail_malloc_l11[0..3] âˆˆ [--..--]
                              [bits 32 to 63] âˆˆ [0..2147483647]
                              [8..11] âˆˆ {0}
                              [12..15] âˆˆ UNINITIALIZED
                              [bits 128 to 191] âˆˆ
                              {{ NULL ;
                                 (? *)&__malloc_can_fail_malloc_l11_0 }}
                              [24..39] âˆˆ
                              {{ garbled mix of &{__malloc_can_fail_malloc_l11_0;
                                                  __malloc_w_can_fail_malloc_l11_3}
                               (origin: Misaligned) }}
  __malloc_can_fail_malloc_l11_0[0..18446744073709551599] âˆˆ
                                {{ garbled mix of &{__malloc_can_fail_malloc_l11_0;
                                                    __malloc_w_can_fail_malloc_l11_3}
                                 (origin: Misaligned) }} or UNINITIALIZED
  __malloc_w_can_fail_malloc_l11_3[0..15] âˆˆ
                                  {{ garbled mix of &{__malloc_can_fail_malloc_l11_0;
                                                      __malloc_w_can_fail_malloc_l11_3}
                                   (origin: Misaligned) }} or UNINITIALIZED
  __malloc_can_fail_malloc_l11_4[bits 0 to 63] âˆˆ
                                {{ NULL ;
                                   (? *)&__malloc_w_can_fail_malloc_l11_5 ;
                                   (? *)&__malloc_w_can_fail_malloc_l11_6 }}
                                [bits 64 to 127] âˆˆ
                                {{ NULL ;
                                   (? *)&__malloc_w_can_fail_malloc_l11_5 ;
                                   (? *)&__malloc_w_can_fail_malloc_l11_6 }} or ESCAPINGADDR
  __malloc_w_can_fail_malloc_l11_5[0..3] âˆˆ
                                  {{ garbled mix of &{__malloc_can_fail_malloc_l11_0;
                                                      __malloc_w_can_fail_malloc_l11_3}
                                   (origin: Misaligned) }} or UNINITIALIZED
                                  [4..7] âˆˆ UNINITIALIZED
                                  [bits 64 to 191]# âˆˆ
                                  {{ NULL ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_5 ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_6 }} or UNINITIALIZED or ESCAPINGADDR repeated %64 
  __malloc_w_can_fail_malloc_l11_6[0..3] âˆˆ
                                  {{ garbled mix of &{__malloc_can_fail_malloc_l11_0;
                                                      __malloc_w_can_fail_malloc_l11_3}
                                   (origin: Misaligned) }} or UNINITIALIZED
                                  [4..7] âˆˆ UNINITIALIZED
                                  [bits 64 to 191]# âˆˆ
                                  {{ NULL ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_5 ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_6 }} or UNINITIALIZED or ESCAPINGADDR repeated %64 
[eva:final-states] Values at end of function main:
  __fc_heap_status âˆˆ [--..--]
  __fc_random_counter âˆˆ [--..--]
  num_pieces âˆˆ [--..--]
  num_dependences âˆˆ [--..--]
  i âˆˆ [0..2147483647] or UNINITIALIZED
  tmp1 âˆˆ [--..--] or UNINITIALIZED
  tmp2 âˆˆ [--..--] or UNINITIALIZED
  domino âˆˆ
        {{ &__malloc_can_fail_malloc_l11_0 + [0..103079215008],0%48 }} or UNINITIALIZED
  __retres âˆˆ {0}
  S___fc_stdin[0..1] âˆˆ [--..--]
  S___fc_stdout[0].__fc_FILE_id âˆˆ [--..--]
               [0].__fc_FILE_data âˆˆ
               {{ garbled mix of &{__malloc_can_fail_malloc_l11_0;
                                   __malloc_w_can_fail_malloc_l11_3}
                (origin: Misaligned) }}
               [1] âˆˆ [--..--]
  __malloc_can_fail_malloc_l11[0..3] âˆˆ [--..--]
                              [bits 32 to 63] âˆˆ [0..2147483647]
                              [8..11] âˆˆ
                              {{ garbled mix of &{__malloc_can_fail_malloc_l11_0;
                                                  __malloc_w_can_fail_malloc_l11_3}
                               (origin: Misaligned) }}
                              [12..15] âˆˆ UNINITIALIZED
                              [bits 128 to 191] âˆˆ
                              {{ NULL ;
                                 (? *)&__malloc_can_fail_malloc_l11_0 }}
                              [24..39] âˆˆ
                              {{ garbled mix of &{__malloc_can_fail_malloc_l11_0;
                                                  __malloc_w_can_fail_malloc_l11_3}
                               (origin: Misaligned) }}
  __malloc_can_fail_malloc_l11_0[0..18446744073709551599] âˆˆ
                                {{ garbled mix of &{__malloc_can_fail_malloc_l11_0;
                                                    __malloc_w_can_fail_malloc_l11_3}
                                 (origin: Misaligned) }} or UNINITIALIZED
  __malloc_w_can_fail_malloc_l11_3[0..15] âˆˆ
                                  {{ garbled mix of &{__malloc_can_fail_malloc_l11_0;
                                                      __malloc_w_can_fail_malloc_l11_3}
                                   (origin: Misaligned) }} or UNINITIALIZED
  __malloc_can_fail_malloc_l11_4[bits 0 to 63] âˆˆ
                                {{ NULL ;
                                   (? *)&__malloc_w_can_fail_malloc_l11_5 ;
                                   (? *)&__malloc_w_can_fail_malloc_l11_6 }}
                                [bits 64 to 127] âˆˆ
                                {{ NULL ;
                                   (? *)&__malloc_w_can_fail_malloc_l11_5 ;
                                   (? *)&__malloc_w_can_fail_malloc_l11_6 }} or ESCAPINGADDR
  __malloc_w_can_fail_malloc_l11_5[0..3] âˆˆ
                                  {{ garbled mix of &{__malloc_can_fail_malloc_l11_0;
                                                      __malloc_w_can_fail_malloc_l11_3}
                                   (origin: Misaligned) }} or UNINITIALIZED
                                  [4..7] âˆˆ UNINITIALIZED
                                  [bits 64 to 191]# âˆˆ
                                  {{ NULL ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_5 ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_6 }} or UNINITIALIZED or ESCAPINGADDR repeated %64 
  __malloc_w_can_fail_malloc_l11_6[0..3] âˆˆ
                                  {{ garbled mix of &{__malloc_can_fail_malloc_l11_0;
                                                      __malloc_w_can_fail_malloc_l11_3}
                                   (origin: Misaligned) }} or UNINITIALIZED
                                  [4..7] âˆˆ UNINITIALIZED
                                  [bits 64 to 191]# âˆˆ
                                  {{ NULL ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_5 ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_6 }} or UNINITIALIZED or ESCAPINGADDR repeated %64 
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  15 functions analyzed (out of 18): 83% coverage.
  In these functions, 200 statements reached (out of 200): 100% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  110 alarms generated by the analysis:
      54 invalid memory accesses
      30 accesses to uninitialized left-values
      13 integer overflows
       6 escaping addresses
       7 others
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     1 unknown     0 invalid      1 total
    Preconditions     9 valid     0 unknown     0 invalid      9 total
  90% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[report] Classification
[report] Output /home/fmarques/sbugs/projects/outputs/framaC/asa_2021_p1/al003/errors.json
[report] Reviews     :   93
[report] Unclassified:   93
