[report] Monitoring events
[report] Loading '/home/fmarques/sbugs/projects/configs/frama-c_report_rules.json'
[kernel] Parsing /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c (with preprocessing)
[kernel:parser:decimal-float] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:10: 
  Floating-point constant 0.10 is not represented exactly. Will use 0x1.999999999999ap-4.
[kernel:parser:decimal-float] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:17: 
  Floating-point constant 0.10 is not represented exactly. Will use 0x1.999999999999ap-4.
[kernel:parser:decimal-float] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:24: 
  Floating-point constant 0.10 is not represented exactly. Will use 0x1.999999999999ap-4.
[eva] Analyzing a complete application starting at main
[eva] Computing initial state
[eva] Initial state computed
[eva:initial-state] Values of globals at initialization
  
[eva] using specification for function scanf_va_1
[eva] using specification for function exit
[eva] using specification for function time
[eva] using specification for function srand
[eva] using specification for function rand
[eva] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:11: 
  allocating variable __malloc_can_fail_malloc_l11
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:108: 
  out of bounds write. assert \valid(&(graph + i)->is_source);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:109: 
  out of bounds write. assert \valid(&(graph + i)->depth);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:110: 
  out of bounds write. assert \valid(&(graph + i)->max_depth);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:111: 
  out of bounds write. assert \valid(&(graph + i)->source);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:112: 
  out of bounds write. assert \valid(&(graph + i)->parent);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:113: 
  out of bounds write. assert \valid(&(graph + i)->link);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:114: 
  out of bounds write. assert \valid(&(graph + i)->link_size);
[eva] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:107: 
  starting to merge loop iterations
[kernel] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:108: 
  more than 200(2147483647) locations to update in array. Approximating.
[kernel] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:109: 
  more than 200(2147483647) locations to update in array. Approximating.
[kernel] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:110: 
  more than 200(2147483647) locations to update in array. Approximating.
[kernel] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:111: 
  more than 200(2147483647) locations to update in array. Approximating.
[kernel] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:112: 
  more than 200(2147483647) locations to update in array. Approximating.
[kernel] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:113: 
  more than 200(2147483647) locations to update in array. Approximating.
[kernel] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:114: 
  more than 200(2147483647) locations to update in array. Approximating.
[eva] using specification for function scanf_va_2
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:121: 
  signed overflow. assert -2147483648 ≤ v - 1;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:121: 
  signed overflow. assert -2147483648 ≤ u - 1;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:21: 
  out of bounds write. assert \valid(&node_p->link_size);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:21: 
  accessing uninitialized left-value. assert \initialized(&node_p->link_size);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:21: 
  signed overflow. assert -2147483648 ≤ node_p->link_size + 1;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:21: 
  signed overflow. assert node_p->link_size + 1 ≤ 2147483647;
[eva] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:21: 
  Assigning imprecise value to node_p->link_size
  (pointing to __malloc_can_fail_malloc_l11 with offsets [320..824633720384],320%384).
  The imprecision originates from Merge
  {/home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:108}
[kernel] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:21: 
  more than 200(2147483647) locations to update in array. Approximating.
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:21: 
  accessing uninitialized left-value. assert \initialized(&node_p->link_size);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:21: 
  accessing uninitialized left-value. assert \initialized(&node_p->link);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:21: 
  out of bounds read. assert \valid_read(&node_p->link_size);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:21: 
  out of bounds read. assert \valid_read(&node_p->link);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:25: 
  function realloc: precondition 'freeable' got status unknown.
[eva] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:25: 
  allocating variable __realloc_can_fail_realloc_l25
[kernel] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:21: 
  more than 200(2147483647) elements to enumerate. Approximating.
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:21: 
  accessing left-value that contains escaping addresses.
  assert ¬\dangling(&node_p);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:21: 
  out of bounds write. assert \valid(&node_p->link);
[kernel] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:21: 
  more than 200(2147483647) locations to update in array. Approximating.
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:22: 
  accessing uninitialized left-value. assert \initialized(&node_p->link);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:22: 
  accessing uninitialized left-value. assert \initialized(&node_p->link_size);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:22: 
  out of bounds read. assert \valid_read(&node_p->link);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:22: 
  out of bounds read. assert \valid_read(&node_p->link_size);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:22: 
  accessing left-value that contains escaping addresses.
  assert ¬\dangling(&node_p->link);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:22: 
  accessing left-value that contains escaping addresses.
  assert ¬\dangling(&node_p->link_size);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:22: 
  signed overflow. assert -2147483648 ≤ node_p->link_size - 1;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:22: 
  signed overflow. assert node_p->link_size - 1 ≤ 2147483647;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:22: 
  out of bounds write.
  assert \valid(node_p->link + (int)(node_p->link_size - 1));
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:22: 
  accessing left-value that contains escaping addresses.
  assert ¬\dangling(&node_c);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:122: 
  accessing left-value that contains escaping addresses.
  assert ¬\dangling(&graph);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:122: 
  out of bounds write. assert \valid(&(graph + (int)(v - 1))->is_source);
[kernel] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:122: 
  more than 200(2147483647) locations to update in array. Approximating.
[eva] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:117: 
  starting to merge loop iterations
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:21: 
  accessing left-value that contains escaping addresses.
  assert ¬\dangling(&node_p->link_size);
[eva] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:21: 
  Assigning imprecise value to node_p->link_size
  (pointing to __malloc_can_fail_malloc_l11 with offsets [320..824633720384],320%384).
  The imprecision originates from Misaligned
  {/home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:22}
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:21: 
  accessing left-value that contains escaping addresses.
  assert ¬\dangling(&node_p->link_size);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:21: 
  accessing left-value that contains escaping addresses.
  assert ¬\dangling(&node_p->link);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:127: 
  accessing uninitialized left-value.
  assert \initialized(&(graph + i)->is_source);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:127: 
  out of bounds read. assert \valid_read(&(graph + i)->is_source);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:127: 
  accessing left-value that contains escaping addresses.
  assert ¬\dangling(&(graph + i)->is_source);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:127: 
  trap representation of a _Bool lvalue.
  assert (graph + i)->is_source ≡ 0 ∨ (graph + i)->is_source ≡ 1;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:30: 
  accessing uninitialized left-value. assert \initialized(&node->link_size);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:30: 
  out of bounds read. assert \valid_read(&node->link_size);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:30: 
  accessing left-value that contains escaping addresses.
  assert ¬\dangling(&node->link_size);
[eva] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:30: 
  Assigning imprecise value to n.
  The imprecision originates from Misaligned
  {/home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:22}
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:33: 
  out of bounds write. assert \valid(&node->max_depth);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:33: 
  accessing uninitialized left-value. assert \initialized(&node->depth);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:33: 
  out of bounds read. assert \valid_read(&node->depth);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:33: 
  accessing left-value that contains escaping addresses.
  assert ¬\dangling(&node->depth);
[eva] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:33: 
  Assigning imprecise value to node->max_depth
  (pointing to __malloc_can_fail_malloc_l11 with offsets {64}).
  The imprecision originates from Misaligned
  {/home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:22}
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:39: 
  accessing uninitialized left-value. assert \initialized(&node->link);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:39: 
  accessing uninitialized left-value. assert \initialized(&node->source);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:39: 
  out of bounds read. assert \valid_read(&node->link);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:39: 
  out of bounds read. assert \valid_read(&node->source);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:39: 
  accessing left-value that contains escaping addresses.
  assert ¬\dangling(&node->link);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:39: 
  accessing left-value that contains escaping addresses.
  assert ¬\dangling(&node->source);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:39: 
  accessing uninitialized left-value. assert \initialized(node->link + i);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:39: 
  out of bounds read. assert \valid_read(node->link + i);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:39: 
  accessing left-value that contains escaping addresses.
  assert ¬\dangling(node->link + i);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:39: 
  accessing uninitialized left-value.
  assert \initialized(&(*(node->link + i))->source);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:39: 
  out of bounds read. assert \valid_read(&(*(node->link + i))->source);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:39: 
  accessing left-value that contains escaping addresses.
  assert ¬\dangling(&(*(node->link + i))->source);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:39: 
  pointer comparison.
  assert
  \pointer_comparable((void *)(*(node->link + i))->source,
                     (void *)node->source);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:42: 
  accessing uninitialized left-value. assert \initialized(&node->depth);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:42: 
  out of bounds read. assert \valid_read(&node->depth);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:42: 
  out of bounds read. assert \valid_read(&node->link);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:42: 
  accessing left-value that contains escaping addresses.
  assert ¬\dangling(&node->depth);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:42: 
  signed overflow. assert -2147483648 ≤ node->depth + 1;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:42: 
  signed overflow. assert node->depth + 1 ≤ 2147483647;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:42: 
  accessing uninitialized left-value. assert \initialized(node->link + i);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:42: 
  out of bounds read. assert \valid_read(node->link + i);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:42: 
  accessing left-value that contains escaping addresses.
  assert ¬\dangling(node->link + i);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:42: 
  accessing uninitialized left-value.
  assert \initialized(&(*(node->link + i))->depth);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:42: 
  out of bounds read. assert \valid_read(&(*(node->link + i))->depth);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:42: 
  accessing left-value that contains escaping addresses.
  assert ¬\dangling(&(*(node->link + i))->depth);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:43: 
  out of bounds read. assert \valid_read(&node->depth);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:43: 
  out of bounds read. assert \valid_read(&node->link);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:43: 
  signed overflow. assert -2147483648 ≤ node->depth + 1;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:43: 
  signed overflow. assert node->depth + 1 ≤ 2147483647;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:43: 
  accessing uninitialized left-value. assert \initialized(node->link + i);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:43: 
  out of bounds read. assert \valid_read(node->link + i);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:43: 
  accessing left-value that contains escaping addresses.
  assert ¬\dangling(node->link + i);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:43: 
  accessing uninitialized left-value.
  assert \initialized(&(*(node->link + i))->depth);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:43: 
  out of bounds read. assert \valid_read(&(*(node->link + i))->depth);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:43: 
  accessing left-value that contains escaping addresses.
  assert ¬\dangling(&(*(node->link + i))->depth);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:43: 
  signed overflow.
  assert -2147483648 ≤ (int)(node->depth + 1) - (*(node->link + i))->depth;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:43: 
  signed overflow.
  assert (int)(node->depth + 1) - (*(node->link + i))->depth ≤ 2147483647;
[eva] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:43: 
  Assigning imprecise value to diff.
  The imprecision originates from Misaligned
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:45: 
  accessing uninitialized left-value. assert \initialized(&node->max_depth);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:45: 
  out of bounds read. assert \valid_read(&node->link);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:45: 
  out of bounds read. assert \valid_read(&node->max_depth);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:45: 
  accessing left-value that contains escaping addresses.
  assert ¬\dangling(&node->max_depth);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:45: 
  accessing uninitialized left-value. assert \initialized(node->link + i);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:45: 
  out of bounds read. assert \valid_read(node->link + i);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:45: 
  accessing left-value that contains escaping addresses.
  assert ¬\dangling(node->link + i);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:45: 
  accessing uninitialized left-value.
  assert \initialized(&(*(node->link + i))->max_depth);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:45: 
  out of bounds read. assert \valid_read(&(*(node->link + i))->max_depth);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:45: 
  accessing left-value that contains escaping addresses.
  assert ¬\dangling(&(*(node->link + i))->max_depth);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:45: 
  signed overflow.
  assert -2147483648 ≤ (*(node->link + i))->max_depth + diff;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:45: 
  signed overflow. assert (*(node->link + i))->max_depth + diff ≤ 2147483647;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:46: 
  out of bounds write. assert \valid(&node->max_depth);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:46: 
  out of bounds read. assert \valid_read(&node->link);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:46: 
  accessing uninitialized left-value. assert \initialized(node->link + i);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:46: 
  out of bounds read. assert \valid_read(node->link + i);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:46: 
  accessing left-value that contains escaping addresses.
  assert ¬\dangling(node->link + i);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:46: 
  accessing uninitialized left-value.
  assert \initialized(&(*(node->link + i))->max_depth);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:46: 
  out of bounds read. assert \valid_read(&(*(node->link + i))->max_depth);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:46: 
  accessing left-value that contains escaping addresses.
  assert ¬\dangling(&(*(node->link + i))->max_depth);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:46: 
  signed overflow.
  assert -2147483648 ≤ (*(node->link + i))->max_depth + diff;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:46: 
  signed overflow. assert (*(node->link + i))->max_depth + diff ≤ 2147483647;
[eva] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:46: 
  Assigning imprecise value to node->max_depth
  (pointing to __malloc_can_fail_malloc_l11 with offsets {64}).
  The imprecision originates from Misaligned
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:50: 
  out of bounds read. assert \valid_read(&node->depth);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:50: 
  out of bounds read. assert \valid_read(&node->link);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:50: 
  signed overflow. assert -2147483648 ≤ node->depth + 1;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:50: 
  signed overflow. assert node->depth + 1 ≤ 2147483647;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:50: 
  accessing uninitialized left-value. assert \initialized(node->link + i);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:50: 
  out of bounds read. assert \valid_read(node->link + i);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:50: 
  accessing left-value that contains escaping addresses.
  assert ¬\dangling(node->link + i);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:50: 
  accessing uninitialized left-value.
  assert \initialized(&(*(node->link + i))->depth);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:50: 
  out of bounds read. assert \valid_read(&(*(node->link + i))->depth);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:50: 
  accessing left-value that contains escaping addresses.
  assert ¬\dangling(&(*(node->link + i))->depth);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:51: 
  out of bounds read. assert \valid_read(&node->link);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:51: 
  out of bounds read. assert \valid_read(&node->depth);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:51: 
  signed overflow. assert -2147483648 ≤ node->depth + 1;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:51: 
  signed overflow. assert node->depth + 1 ≤ 2147483647;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:51: 
  accessing uninitialized left-value. assert \initialized(node->link + i);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:51: 
  out of bounds read. assert \valid_read(node->link + i);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:51: 
  accessing left-value that contains escaping addresses.
  assert ¬\dangling(node->link + i);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:51: 
  accessing uninitialized left-value.
  assert \initialized(&(*(node->link + i))->depth);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:51: 
  out of bounds read. assert \valid_read(&(*(node->link + i))->depth);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:51: 
  accessing left-value that contains escaping addresses.
  assert ¬\dangling(&(*(node->link + i))->depth);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:51: 
  signed overflow.
  assert -2147483648 ≤ (*(node->link + i))->depth - (int)(node->depth + 1);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:51: 
  signed overflow.
  assert (*(node->link + i))->depth - (int)(node->depth + 1) ≤ 2147483647;
[eva] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:51: 
  Assigning imprecise value to diff.
  The imprecision originates from Misaligned
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:53: 
  accessing uninitialized left-value. assert \initialized(&node->max_depth);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:53: 
  out of bounds read. assert \valid_read(&node->max_depth);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:53: 
  out of bounds read. assert \valid_read(&node->link);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:53: 
  accessing left-value that contains escaping addresses.
  assert ¬\dangling(&node->max_depth);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:53: 
  accessing uninitialized left-value. assert \initialized(node->link + i);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:53: 
  out of bounds read. assert \valid_read(node->link + i);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:53: 
  accessing left-value that contains escaping addresses.
  assert ¬\dangling(node->link + i);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:53: 
  accessing uninitialized left-value.
  assert \initialized(&(*(node->link + i))->max_depth);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:53: 
  out of bounds read. assert \valid_read(&(*(node->link + i))->max_depth);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:53: 
  accessing left-value that contains escaping addresses.
  assert ¬\dangling(&(*(node->link + i))->max_depth);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:53: 
  signed overflow.
  assert -2147483648 ≤ (*(node->link + i))->max_depth - diff;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:53: 
  signed overflow. assert (*(node->link + i))->max_depth - diff ≤ 2147483647;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:54: 
  out of bounds write. assert \valid(&node->max_depth);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:54: 
  out of bounds read. assert \valid_read(&node->link);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:54: 
  accessing uninitialized left-value. assert \initialized(node->link + i);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:54: 
  out of bounds read. assert \valid_read(node->link + i);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:54: 
  accessing left-value that contains escaping addresses.
  assert ¬\dangling(node->link + i);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:54: 
  accessing uninitialized left-value.
  assert \initialized(&(*(node->link + i))->max_depth);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:54: 
  out of bounds read. assert \valid_read(&(*(node->link + i))->max_depth);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:54: 
  accessing left-value that contains escaping addresses.
  assert ¬\dangling(&(*(node->link + i))->max_depth);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:54: 
  signed overflow.
  assert -2147483648 ≤ (*(node->link + i))->max_depth - diff;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:54: 
  signed overflow. assert (*(node->link + i))->max_depth - diff ≤ 2147483647;
[eva] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:54: 
  Assigning imprecise value to node->max_depth
  (pointing to __malloc_can_fail_malloc_l11 with offsets {64}).
  The imprecision originates from Misaligned
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:59: 
  accessing uninitialized left-value. assert \initialized(&node->max_depth);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:59: 
  out of bounds read. assert \valid_read(&node->max_depth);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:59: 
  out of bounds read. assert \valid_read(&node->link);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:59: 
  accessing left-value that contains escaping addresses.
  assert ¬\dangling(&node->max_depth);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:59: 
  accessing uninitialized left-value. assert \initialized(node->link + i);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:59: 
  out of bounds read. assert \valid_read(node->link + i);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:59: 
  accessing left-value that contains escaping addresses.
  assert ¬\dangling(node->link + i);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:59: 
  accessing uninitialized left-value.
  assert \initialized(&(*(node->link + i))->max_depth);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:59: 
  out of bounds read. assert \valid_read(&(*(node->link + i))->max_depth);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:59: 
  accessing left-value that contains escaping addresses.
  assert ¬\dangling(&(*(node->link + i))->max_depth);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:60: 
  out of bounds write. assert \valid(&node->max_depth);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:60: 
  out of bounds read. assert \valid_read(&node->link);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:60: 
  accessing uninitialized left-value. assert \initialized(node->link + i);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:60: 
  out of bounds read. assert \valid_read(node->link + i);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:60: 
  accessing left-value that contains escaping addresses.
  assert ¬\dangling(node->link + i);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:60: 
  accessing uninitialized left-value.
  assert \initialized(&(*(node->link + i))->max_depth);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:60: 
  out of bounds read. assert \valid_read(&(*(node->link + i))->max_depth);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:60: 
  accessing left-value that contains escaping addresses.
  assert ¬\dangling(&(*(node->link + i))->max_depth);
[eva] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:60: 
  Assigning imprecise value to node->max_depth
  (pointing to __malloc_can_fail_malloc_l11 with offsets {64}).
  The imprecision originates from Misaligned
[eva] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:37: 
  starting to merge loop iterations
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:37: 
  signed overflow. assert i + 1 ≤ 2147483647;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:65: 
  out of bounds read. assert \valid_read(&node->link);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:65: 
  accessing uninitialized left-value. assert \initialized(node->link + i);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:65: 
  out of bounds read. assert \valid_read(node->link + i);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:65: 
  accessing left-value that contains escaping addresses.
  assert ¬\dangling(node->link + i);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:65: 
  out of bounds write. assert \valid(&(*(node->link + i))->source);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:65: 
  out of bounds read. assert \valid_read(&node->source);
[eva] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:65: 
  Assigning imprecise value to (*(node->link + i))->source
  (pointing to __malloc_can_fail_malloc_l11 with offsets [0..147573952589676412736];
   __realloc_w_can_fail_realloc_l25 with offsets [0..147573952589676412864]).
  The imprecision originates from Misaligned
  {/home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:22}
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:66: 
  out of bounds read. assert \valid_read(&node->link);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:66: 
  accessing uninitialized left-value. assert \initialized(node->link + i);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:66: 
  out of bounds read. assert \valid_read(node->link + i);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:66: 
  accessing left-value that contains escaping addresses.
  assert ¬\dangling(node->link + i);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:66: 
  out of bounds write. assert \valid(&(*(node->link + i))->depth);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:66: 
  accessing uninitialized left-value. assert \initialized(&node->depth);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:66: 
  out of bounds read. assert \valid_read(&node->depth);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:66: 
  accessing left-value that contains escaping addresses.
  assert ¬\dangling(&node->depth);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:66: 
  signed overflow. assert -2147483648 ≤ node->depth + 1;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:66: 
  signed overflow. assert node->depth + 1 ≤ 2147483647;
[eva] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:66: 
  Assigning imprecise value to (*(node->link + i))->depth
  (pointing to __malloc_can_fail_malloc_l11 with offsets [0..147573952589676412768];
   __realloc_w_can_fail_realloc_l25 with offsets [0..147573952589676412896]).
  The imprecision originates from Misaligned
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:67: 
  out of bounds read. assert \valid_read(&node->link);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:67: 
  accessing uninitialized left-value. assert \initialized(node->link + i);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:67: 
  out of bounds read. assert \valid_read(node->link + i);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:67: 
  accessing left-value that contains escaping addresses.
  assert ¬\dangling(node->link + i);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:67: 
  out of bounds write. assert \valid(&(*(node->link + i))->max_depth);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:83: 
  accessing uninitialized left-value. assert \initialized(&current->parent);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:83: 
  out of bounds read. assert \valid_read(&current->parent);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:83: 
  accessing left-value that contains escaping addresses.
  assert ¬\dangling(&current->parent);
[eva] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:83: 
  Assigning imprecise value to current.
  The imprecision originates from Misaligned
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:88: 
  accessing uninitialized left-value. assert \initialized(&current->link);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:88: 
  out of bounds read. assert \valid_read(&current->link);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:88: 
  accessing left-value that contains escaping addresses.
  assert ¬\dangling(&current->link);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:88: 
  accessing uninitialized left-value.
  assert \initialized(current->link + next);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:88: 
  out of bounds read. assert \valid_read(current->link + next);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:88: 
  accessing left-value that contains escaping addresses.
  assert ¬\dangling(current->link + next);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:88: 
  out of bounds write. assert \valid(&(*(current->link + next))->parent);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:89: 
  out of bounds read. assert \valid_read(&current->link);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:89: 
  accessing uninitialized left-value.
  assert \initialized(current->link + next);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:89: 
  out of bounds read. assert \valid_read(current->link + next);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:89: 
  accessing left-value that contains escaping addresses.
  assert ¬\dangling(current->link + next);
[eva] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:89: 
  Assigning imprecise value to current.
  The imprecision originates from Misaligned
[eva] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:79: 
  starting to merge loop iterations
[eva] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:30: 
  Assigning imprecise value to n.
  The imprecision originates from Misaligned
[eva] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:33: 
  Assigning imprecise value to node->max_depth
  (pointing to __malloc_can_fail_malloc_l11 with offsets [0..147573952589676412512],0%8;
   __realloc_w_can_fail_realloc_l25 with offsets [0..147573952589676412640],0%8).
  The imprecision originates from Misaligned
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:42: 
  accessing uninitialized left-value. assert \initialized(&node->link);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:42: 
  accessing left-value that contains escaping addresses.
  assert ¬\dangling(&node->link);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:43: 
  accessing uninitialized left-value. assert \initialized(&node->depth);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:43: 
  accessing uninitialized left-value. assert \initialized(&node->link);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:43: 
  accessing left-value that contains escaping addresses.
  assert ¬\dangling(&node->depth);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:43: 
  accessing left-value that contains escaping addresses.
  assert ¬\dangling(&node->link);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:45: 
  accessing uninitialized left-value. assert \initialized(&node->link);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:45: 
  accessing left-value that contains escaping addresses.
  assert ¬\dangling(&node->link);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:46: 
  accessing uninitialized left-value. assert \initialized(&node->link);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:46: 
  accessing left-value that contains escaping addresses.
  assert ¬\dangling(&node->link);
[eva] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:46: 
  Assigning imprecise value to node->max_depth
  (pointing to __malloc_can_fail_malloc_l11 with offsets [32..147573952589676412512],0%8;
   __realloc_w_can_fail_realloc_l25 with offsets [32..147573952589676412640],0%8).
  The imprecision originates from Misaligned
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:50: 
  accessing uninitialized left-value. assert \initialized(&node->depth);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:50: 
  accessing uninitialized left-value. assert \initialized(&node->link);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:50: 
  accessing left-value that contains escaping addresses.
  assert ¬\dangling(&node->depth);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:50: 
  accessing left-value that contains escaping addresses.
  assert ¬\dangling(&node->link);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:51: 
  accessing uninitialized left-value. assert \initialized(&node->link);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:51: 
  accessing uninitialized left-value. assert \initialized(&node->depth);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:51: 
  accessing left-value that contains escaping addresses.
  assert ¬\dangling(&node->link);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:51: 
  accessing left-value that contains escaping addresses.
  assert ¬\dangling(&node->depth);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:53: 
  accessing uninitialized left-value. assert \initialized(&node->link);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:53: 
  accessing left-value that contains escaping addresses.
  assert ¬\dangling(&node->link);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:54: 
  accessing uninitialized left-value. assert \initialized(&node->link);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:54: 
  accessing left-value that contains escaping addresses.
  assert ¬\dangling(&node->link);
[eva] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:54: 
  Assigning imprecise value to node->max_depth
  (pointing to __malloc_can_fail_malloc_l11 with offsets [32..147573952589676412512],0%8;
   __realloc_w_can_fail_realloc_l25 with offsets [32..147573952589676412640],0%8).
  The imprecision originates from Misaligned
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:59: 
  accessing uninitialized left-value. assert \initialized(&node->link);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:59: 
  accessing left-value that contains escaping addresses.
  assert ¬\dangling(&node->link);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:60: 
  accessing uninitialized left-value. assert \initialized(&node->link);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:60: 
  accessing left-value that contains escaping addresses.
  assert ¬\dangling(&node->link);
[eva] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:60: 
  Assigning imprecise value to node->max_depth
  (pointing to __malloc_can_fail_malloc_l11 with offsets [32..147573952589676412512],0%8;
   __realloc_w_can_fail_realloc_l25 with offsets [32..147573952589676412640],0%8).
  The imprecision originates from Misaligned
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:65: 
  accessing uninitialized left-value. assert \initialized(&node->link);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:65: 
  accessing left-value that contains escaping addresses.
  assert ¬\dangling(&node->link);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:65: 
  accessing uninitialized left-value. assert \initialized(&node->source);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:65: 
  accessing left-value that contains escaping addresses.
  assert ¬\dangling(&node->source);
[eva] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:65: 
  Assigning imprecise value to (*(node->link + i))->source
  (pointing to __malloc_can_fail_malloc_l11 with offsets [0..147573952589676412736];
   __realloc_w_can_fail_realloc_l25 with offsets [0..147573952589676412864]).
  The imprecision originates from Misaligned
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:66: 
  accessing uninitialized left-value. assert \initialized(&node->link);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:66: 
  accessing left-value that contains escaping addresses.
  assert ¬\dangling(&node->link);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:67: 
  accessing uninitialized left-value. assert \initialized(&node->link);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:67: 
  accessing left-value that contains escaping addresses.
  assert ¬\dangling(&node->link);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:89: 
  accessing uninitialized left-value. assert \initialized(&current->link);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:89: 
  accessing left-value that contains escaping addresses.
  assert ¬\dangling(&current->link);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:87: 
  signed overflow. assert depth + 1 ≤ 2147483647;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:92: 
  accessing uninitialized left-value. assert \initialized(&src->max_depth);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:92: 
  out of bounds read. assert \valid_read(&src->max_depth);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:92: 
  accessing left-value that contains escaping addresses.
  assert ¬\dangling(&src->max_depth);
[eva] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:92: 
  Assigning imprecise value to __retres.
  The imprecision originates from Misaligned
[eva] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:92: 
  Assigning imprecise value to \result<longestPath>.
  The imprecision originates from Misaligned
[eva] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:129: 
  Assigning imprecise value to max.
  The imprecision originates from Misaligned
[eva] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:131: 
  Assigning imprecise value to max_depth.
  The imprecision originates from Misaligned
[eva] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:126: 
  starting to merge loop iterations
[eva] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:33: 
  Assigning imprecise value to node->max_depth
  (pointing to __malloc_can_fail_malloc_l11 with offsets {64; 448}).
  The imprecision originates from Misaligned
[eva] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:46: 
  Assigning imprecise value to node->max_depth
  (pointing to __malloc_can_fail_malloc_l11 with offsets {64; 448}).
  The imprecision originates from Misaligned
[eva] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:54: 
  Assigning imprecise value to node->max_depth
  (pointing to __malloc_can_fail_malloc_l11 with offsets {64; 448}).
  The imprecision originates from Misaligned
[eva] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:60: 
  Assigning imprecise value to node->max_depth
  (pointing to __malloc_can_fail_malloc_l11 with offsets {64; 448}).
  The imprecision originates from Misaligned
[eva] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:33: 
  Assigning imprecise value to node->max_depth
  (pointing to __malloc_can_fail_malloc_l11 with offsets {64; 448; 832}).
  The imprecision originates from Misaligned
[eva] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:46: 
  Assigning imprecise value to node->max_depth
  (pointing to __malloc_can_fail_malloc_l11 with offsets {64; 448; 832}).
  The imprecision originates from Misaligned
[eva] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:54: 
  Assigning imprecise value to node->max_depth
  (pointing to __malloc_can_fail_malloc_l11 with offsets {64; 448; 832}).
  The imprecision originates from Misaligned
[eva] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:60: 
  Assigning imprecise value to node->max_depth
  (pointing to __malloc_can_fail_malloc_l11 with offsets {64; 448; 832}).
  The imprecision originates from Misaligned
[eva] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:33: 
  Assigning imprecise value to node->max_depth
  (pointing to __malloc_can_fail_malloc_l11 with offsets [64..824633720128],64%384).
  The imprecision originates from Misaligned
[kernel] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:33: 
  more than 200(2147483647) locations to update in array. Approximating.
[eva] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:46: 
  Assigning imprecise value to node->max_depth
  (pointing to __malloc_can_fail_malloc_l11 with offsets [64..824633720128],64%384).
  The imprecision originates from Misaligned
[kernel] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:46: 
  more than 200(2147483647) locations to update in array. Approximating.
[eva] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:54: 
  Assigning imprecise value to node->max_depth
  (pointing to __malloc_can_fail_malloc_l11 with offsets [64..824633720128],64%384).
  The imprecision originates from Misaligned
[kernel] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:54: 
  more than 200(2147483647) locations to update in array. Approximating.
[eva] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:60: 
  Assigning imprecise value to node->max_depth
  (pointing to __malloc_can_fail_malloc_l11 with offsets [64..824633720128],64%384).
  The imprecision originates from Misaligned
[kernel] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:60: 
  more than 200(2147483647) locations to update in array. Approximating.
[kernel] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:33: 
  more than 200(2147483647) elements to enumerate. Approximating.
[kernel] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:39: 
  more than 200(2147483647) elements to enumerate. Approximating.
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:128: 
  signed overflow. assert min_src + 1 ≤ 2147483647;
[eva] using specification for function printf_va_1
[kernel] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:108: 
  more than 200(2147483647) elements to enumerate. Approximating.
[kernel] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:112: 
  more than 200(2147483647) elements to enumerate. Approximating.
[eva] done for function main
[scope:rm_asserts] removing 109 assertion(s)
[eva] ====== VALUES COMPUTED ======
[eva:final-states] Values at end of function can_fail_malloc:
  __fc_heap_status ∈ [--..--]
  __fc_random_counter ∈ [--..--]
  fail ∈ [0. .. 1.]
  __retres ∈ {{ NULL ; (void *)&__malloc_can_fail_malloc_l11 }}
[eva:final-states] Values at end of function can_fail_realloc:
  __fc_random_counter ∈ [--..--]
  ptr ∈
     {{ garbled mix of &{__malloc_can_fail_malloc_l11;
                         __realloc_w_can_fail_realloc_l25}
      (origin: Misaligned
      {/home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:22}) }} or ESCAPINGADDR
  size ∈
      {{ garbled mix of &{__malloc_can_fail_malloc_l11;
                          __realloc_w_can_fail_realloc_l25}
       (origin: Misaligned
       {/home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:22}) }} or ESCAPINGADDR
  fail ∈ [0. .. 1.]
  node_p ∈
        {{ &__malloc_can_fail_malloc_l11 + [0..103079215008],0%48 }} or ESCAPINGADDR
  node_c ∈
        {{ NULL + [-103079215104..103079215008],0%48 ;
           &__malloc_can_fail_malloc_l11 + [-103079215104..103079215008],0%48 }} or ESCAPINGADDR
  graph ∈
       {{ NULL ; (Node *)&__malloc_can_fail_malloc_l11 }} or ESCAPINGADDR
  __retres ∈ {{ NULL ; (void *)&__realloc_w_can_fail_realloc_l25 }}
  __malloc_can_fail_malloc_l11[0..31] ∈
                              {{ garbled mix of &{__malloc_can_fail_malloc_l11}
                               (origin: Misaligned
                               {/home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:22}) }} or UNINITIALIZED or ESCAPINGADDR
                              [32..103079215051] ∈
                              {{ garbled mix of &{__malloc_can_fail_malloc_l11;
                                                  __realloc_w_can_fail_realloc_l25}
                               (origin: Misaligned
                               {/home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:22}) }} or UNINITIALIZED or ESCAPINGADDR
                              [103079215052..18446744073709551599] ∈
                              {{ garbled mix of &{__malloc_can_fail_malloc_l11}
                               (origin: Misaligned
                               {/home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:22}) }} or UNINITIALIZED or ESCAPINGADDR
  __realloc_w_can_fail_realloc_l25[0..31] ∈
                                  {{ garbled mix of &{__malloc_can_fail_malloc_l11}
                                   (origin: Misaligned
                                   {/home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:22}) }} or UNINITIALIZED or ESCAPINGADDR
                                  [32..103079215051] ∈
                                  {{ garbled mix of &{__malloc_can_fail_malloc_l11;
                                                      __realloc_w_can_fail_realloc_l25}
                                   (origin: Misaligned
                                   {/home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:22}) }} or UNINITIALIZED or ESCAPINGADDR
                                  [103079215052..18446744073709551615] ∈
                                  {{ garbled mix of &{__malloc_can_fail_malloc_l11}
                                   (origin: Misaligned
                                   {/home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:22}) }} or UNINITIALIZED or ESCAPINGADDR
[eva:final-states] Values at end of function addNode:
  __fc_random_counter ∈ [--..--]
  node_p ∈ {{ &__malloc_can_fail_malloc_l11 + [0..103079215008],0%48 }}
  node_c ∈
        {{ NULL + [0..18446744073709551600],0%16 ;
           &__malloc_can_fail_malloc_l11 + [-103079215104..103079215008],0%48 }}
  graph ∈
       {{ NULL ; (Node *)&__malloc_can_fail_malloc_l11 }} or ESCAPINGADDR
  __malloc_can_fail_malloc_l11[0..31] ∈
                              {{ garbled mix of &{__malloc_can_fail_malloc_l11}
                               (origin: Misaligned
                               {/home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:22}) }} or UNINITIALIZED or ESCAPINGADDR
                              [32..103079215051] ∈
                              {{ garbled mix of &{__malloc_can_fail_malloc_l11;
                                                  __realloc_w_can_fail_realloc_l25}
                               (origin: Misaligned
                               {/home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:22}) }} or UNINITIALIZED or ESCAPINGADDR
                              [103079215052..18446744073709551599] ∈
                              {{ garbled mix of &{__malloc_can_fail_malloc_l11}
                               (origin: Misaligned
                               {/home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:22}) }} or UNINITIALIZED or ESCAPINGADDR
  __realloc_w_can_fail_realloc_l25[0..31] ∈
                                  {{ garbled mix of &{__malloc_can_fail_malloc_l11}
                                   (origin: Misaligned
                                   {/home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:22}) }} or UNINITIALIZED or ESCAPINGADDR
                                  [32..103079215051] ∈
                                  {{ garbled mix of &{__malloc_can_fail_malloc_l11;
                                                      __realloc_w_can_fail_realloc_l25}
                                   (origin: Misaligned
                                   {/home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:22}) }} or UNINITIALIZED or ESCAPINGADDR
                                  [103079215052..18446744073709551615] ∈
                                  {{ garbled mix of &{__malloc_can_fail_malloc_l11}
                                   (origin: Misaligned
                                   {/home/fmarques/sbugs/projects/alunos/asa_2021_p1/al029/main.c:22}) }} or UNINITIALIZED or ESCAPINGADDR
[eva:final-states] Values at end of function visit:
  i ∈ [0..2147483647] or UNINITIALIZED
  diff ∈
      {{ garbled mix of &{__malloc_can_fail_malloc_l11;
                          __realloc_w_can_fail_realloc_l25}
       (origin: Misaligned) }} or UNINITIALIZED
  n ∈
   {{ garbled mix of &{__malloc_can_fail_malloc_l11;
                       __realloc_w_can_fail_realloc_l25}
    (origin: Misaligned) }}
  __retres ∈ [-1..2147483647]
  __malloc_can_fail_malloc_l11[0..18446744073709551599] ∈
                              {{ garbled mix of &{__malloc_can_fail_malloc_l11;
                                                  __realloc_w_can_fail_realloc_l25}
                               (origin: Misaligned) }} or UNINITIALIZED or ESCAPINGADDR
  __realloc_w_can_fail_realloc_l25[0..18446744073709551615] ∈
                                  {{ garbled mix of &{__malloc_can_fail_malloc_l11;
                                                      __realloc_w_can_fail_realloc_l25}
                                   (origin: Misaligned) }} or UNINITIALIZED or ESCAPINGADDR
[eva:final-states] Values at end of function longestPath:
  depth ∈ {0}
  current ∈
         {{ garbled mix of &{__malloc_can_fail_malloc_l11;
                             __realloc_w_can_fail_realloc_l25}
          (origin: Misaligned) }}
  __retres ∈
          {{ garbled mix of &{__malloc_can_fail_malloc_l11;
                              __realloc_w_can_fail_realloc_l25}
           (origin: Misaligned) }}
  __malloc_can_fail_malloc_l11[0..18446744073709551599] ∈
                              {{ garbled mix of &{__malloc_can_fail_malloc_l11;
                                                  __realloc_w_can_fail_realloc_l25}
                               (origin: Misaligned) }} or UNINITIALIZED or ESCAPINGADDR
  __realloc_w_can_fail_realloc_l25[0..18446744073709551615] ∈
                                  {{ garbled mix of &{__malloc_can_fail_malloc_l11;
                                                      __realloc_w_can_fail_realloc_l25}
                                   (origin: Misaligned) }} or UNINITIALIZED or ESCAPINGADDR
[eva:final-states] Values at end of function main:
  NON TERMINATING FUNCTION
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  6 functions analyzed (out of 7): 85% coverage.
  In these functions, 121 statements reached (out of 122): 99% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  243 alarms generated by the analysis:
      81 invalid memory accesses
      66 escaping addresses
      63 accesses to uninitialized left-values
      31 integer overflows
       2 others
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions     9 valid     1 unknown     0 invalid     10 total
  90% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[report] Classification
[report] Output /home/fmarques/sbugs/projects/outputs/framaC/asa_2021_p1/al029/errors.json
[report] Reviews     :  135
[report] Unclassified:  135
