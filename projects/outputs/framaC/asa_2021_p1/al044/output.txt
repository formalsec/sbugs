[report] Monitoring events
[report] Loading '/home/fmarques/sbugs/projects/configs/frama-c_report_rules.json'
[kernel] Parsing /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al044/GANDA_PROJ.c (with preprocessing)
[kernel:parser:decimal-float] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:10: 
  Floating-point constant 0.10 is not represented exactly. Will use 0x1.999999999999ap-4.
[kernel:parser:decimal-float] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:17: 
  Floating-point constant 0.10 is not represented exactly. Will use 0x1.999999999999ap-4.
[kernel:parser:decimal-float] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:24: 
  Floating-point constant 0.10 is not represented exactly. Will use 0x1.999999999999ap-4.
[eva] Analyzing a complete application starting at main
[eva] Computing initial state
[eva] Initial state computed
[eva:initial-state] Values of globals at initialization
  
[eva] using specification for function scanf_va_1
[eva] using specification for function __FC_assert
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al044/GANDA_PROJ.c:186: 
  function __FC_assert: precondition 'nonnull_c' got status unknown.
[eva] using specification for function time
[eva] using specification for function srand
[eva] using specification for function rand
[eva] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:11: 
  allocating variable __malloc_can_fail_malloc_l11
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al044/GANDA_PROJ.c:84: 
  out of bounds write. assert \valid(&G->V);
[eva] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:11: 
  allocating variable __malloc_can_fail_malloc_l11_0
[eva] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:11: 
  allocating variable __malloc_can_fail_malloc_l11_1
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al044/GANDA_PROJ.c:87: 
  out of bounds write. assert \valid(G->adj + i);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al044/GANDA_PROJ.c:88: 
  out of bounds read. assert \valid_read(G->adj + i);
[eva] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:11: 
  allocating variable __malloc_can_fail_malloc_l11_2
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al044/GANDA_PROJ.c:89: 
  out of bounds write. assert \valid(&x->v);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al044/GANDA_PROJ.c:90: 
  out of bounds write. assert \valid(&(x->v)->value);
[eva] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al044/GANDA_PROJ.c:86: 
  starting to merge loop iterations
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al044/GANDA_PROJ.c:88: 
  accessing uninitialized left-value. assert \initialized(G->adj + i);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al044/GANDA_PROJ.c:90: 
  accessing uninitialized left-value. assert \initialized(&x->v);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al044/GANDA_PROJ.c:91: 
  accessing uninitialized left-value. assert \initialized(&x->v);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al044/GANDA_PROJ.c:91: 
  out of bounds write. assert \valid(&(x->v)->d);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al044/GANDA_PROJ.c:92: 
  accessing uninitialized left-value. assert \initialized(&x->v);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al044/GANDA_PROJ.c:92: 
  out of bounds write. assert \valid(&(x->v)->inc_edges);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al044/GANDA_PROJ.c:93: 
  accessing uninitialized left-value. assert \initialized(&x->v);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al044/GANDA_PROJ.c:93: 
  out of bounds write. assert \valid(&(x->v)->inc_edges1);
[eva] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:11: 
  allocating variable __malloc_can_fail_malloc_l11_3
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al044/GANDA_PROJ.c:190: 
  out of bounds write. assert \valid(results + 0);
[eva] using specification for function scanf_va_2
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al044/GANDA_PROJ.c:108: 
  signed overflow. assert -2147483648 ≤ v - 1;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al044/GANDA_PROJ.c:108: 
  signed overflow. assert -2147483648 ≤ w - 1;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al044/GANDA_PROJ.c:108: 
  accessing uninitialized left-value.
  assert \initialized(G->adj + (int)(v - 1));
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al044/GANDA_PROJ.c:108: 
  accessing uninitialized left-value.
  assert \initialized(G->adj + (int)(w - 1));
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al044/GANDA_PROJ.c:108: 
  out of bounds read. assert \valid_read(G->adj + (int)(v - 1));
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al044/GANDA_PROJ.c:108: 
  out of bounds read. assert \valid_read(G->adj + (int)(w - 1));
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al044/GANDA_PROJ.c:108: 
  accessing uninitialized left-value.
  assert \initialized(&(*(G->adj + (int)(w - 1)))->v);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al044/GANDA_PROJ.c:108: 
  out of bounds read. assert \valid_read(&(*(G->adj + (int)(w - 1)))->v);
[eva] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:11: 
  allocating variable __malloc_can_fail_malloc_l11_4
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al044/GANDA_PROJ.c:101: 
  out of bounds write. assert \valid(&x->v);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al044/GANDA_PROJ.c:102: 
  accessing uninitialized left-value. assert \initialized(&previous->next);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al044/GANDA_PROJ.c:102: 
  out of bounds read. assert \valid_read(&previous->next);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al044/GANDA_PROJ.c:109: 
  accessing uninitialized left-value.
  assert \initialized(G->adj + (int)(w - 1));
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al044/GANDA_PROJ.c:109: 
  out of bounds read. assert \valid_read(G->adj + (int)(w - 1));
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al044/GANDA_PROJ.c:109: 
  accessing uninitialized left-value.
  assert \initialized(&(*(G->adj + (int)(w - 1)))->v);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al044/GANDA_PROJ.c:109: 
  out of bounds read. assert \valid_read(&(*(G->adj + (int)(w - 1)))->v);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al044/GANDA_PROJ.c:109: 
  out of bounds write.
  assert \valid(&((*(G->adj + (int)(w - 1)))->v)->inc_edges);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al044/GANDA_PROJ.c:109: 
  accessing uninitialized left-value.
  assert \initialized(&((*(G->adj + (int)(w - 1)))->v)->inc_edges);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al044/GANDA_PROJ.c:110: 
  accessing uninitialized left-value.
  assert \initialized(G->adj + (int)(w - 1));
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al044/GANDA_PROJ.c:110: 
  out of bounds read. assert \valid_read(G->adj + (int)(w - 1));
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al044/GANDA_PROJ.c:110: 
  accessing uninitialized left-value.
  assert \initialized(&(*(G->adj + (int)(w - 1)))->v);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al044/GANDA_PROJ.c:110: 
  out of bounds read. assert \valid_read(&(*(G->adj + (int)(w - 1)))->v);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al044/GANDA_PROJ.c:110: 
  out of bounds write.
  assert \valid(&((*(G->adj + (int)(w - 1)))->v)->inc_edges1);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al044/GANDA_PROJ.c:110: 
  accessing uninitialized left-value.
  assert \initialized(&((*(G->adj + (int)(w - 1)))->v)->inc_edges1);
[eva] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al044/GANDA_PROJ.c:193: 
  starting to merge loop iterations
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al044/GANDA_PROJ.c:109: 
  signed overflow.
  assert ((*(G->adj + (int)(w - 1)))->v)->inc_edges + 1 ≤ 2147483647;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al044/GANDA_PROJ.c:110: 
  signed overflow.
  assert ((*(G->adj + (int)(w - 1)))->v)->inc_edges1 + 1 ≤ 2147483647;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al044/GANDA_PROJ.c:169: 
  accessing uninitialized left-value. assert \initialized(G->adj + i);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al044/GANDA_PROJ.c:169: 
  out of bounds read. assert \valid_read(G->adj + i);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al044/GANDA_PROJ.c:169: 
  accessing uninitialized left-value. assert \initialized(&(*(G->adj + i))->v);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al044/GANDA_PROJ.c:169: 
  out of bounds read. assert \valid_read(&(*(G->adj + i))->v);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al044/GANDA_PROJ.c:169: 
  accessing uninitialized left-value.
  assert \initialized(&((*(G->adj + i))->v)->inc_edges);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al044/GANDA_PROJ.c:169: 
  out of bounds read. assert \valid_read(&((*(G->adj + i))->v)->inc_edges);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al044/GANDA_PROJ.c:171: 
  out of bounds read. assert \valid_read(G->adj + i);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al044/GANDA_PROJ.c:171: 
  accessing uninitialized left-value. assert \initialized(&(*(G->adj + i))->v);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al044/GANDA_PROJ.c:138: 
  out of bounds write. assert \valid(&v->d);
[eva] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:11: 
  allocating variable __malloc_can_fail_malloc_l11_5
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al044/GANDA_PROJ.c:50: 
  out of bounds write. assert \valid(&q->head);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al044/GANDA_PROJ.c:140: 
  accessing uninitialized left-value. assert \initialized(&v->value);
[eva] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:11: 
  allocating variable __malloc_can_fail_malloc_l11_6
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al044/GANDA_PROJ.c:43: 
  out of bounds write. assert \valid(&x->value);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al044/GANDA_PROJ.c:144: 
  accessing uninitialized left-value.
  assert \initialized(G->adj + (int)(value - 1));
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al044/GANDA_PROJ.c:144: 
  out of bounds read. assert \valid_read(G->adj + (int)(value - 1));
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al044/GANDA_PROJ.c:144: 
  accessing uninitialized left-value.
  assert \initialized(&(*(G->adj + (int)(value - 1)))->next);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al044/GANDA_PROJ.c:144: 
  out of bounds read.
  assert \valid_read(&(*(G->adj + (int)(value - 1)))->next);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al044/GANDA_PROJ.c:145: 
  accessing uninitialized left-value. assert \initialized(&j->v);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al044/GANDA_PROJ.c:145: 
  out of bounds write. assert \valid(&(j->v)->inc_edges1);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al044/GANDA_PROJ.c:145: 
  accessing uninitialized left-value. assert \initialized(&(j->v)->inc_edges1);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al044/GANDA_PROJ.c:147: 
  accessing uninitialized left-value. assert \initialized(&j->v);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al044/GANDA_PROJ.c:147: 
  accessing uninitialized left-value. assert \initialized(&(j->v)->inc_edges1);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al044/GANDA_PROJ.c:147: 
  out of bounds read. assert \valid_read(&(j->v)->inc_edges1);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al044/GANDA_PROJ.c:148: 
  accessing uninitialized left-value. assert \initialized(&j->v);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al044/GANDA_PROJ.c:148: 
  accessing uninitialized left-value. assert \initialized(&(j->v)->value);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al044/GANDA_PROJ.c:148: 
  out of bounds read. assert \valid_read(&(j->v)->value);
[eva] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:11: 
  allocating variable __malloc_can_fail_malloc_l11_7
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al044/GANDA_PROJ.c:150: 
  accessing uninitialized left-value. assert \initialized(&j->v);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al044/GANDA_PROJ.c:150: 
  accessing uninitialized left-value. assert \initialized(&(j->v)->d);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al044/GANDA_PROJ.c:150: 
  out of bounds read. assert \valid_read(&(j->v)->d);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al044/GANDA_PROJ.c:150: 
  accessing uninitialized left-value.
  assert \initialized(G->adj + (int)(value - 1));
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al044/GANDA_PROJ.c:150: 
  out of bounds read. assert \valid_read(G->adj + (int)(value - 1));
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al044/GANDA_PROJ.c:150: 
  accessing uninitialized left-value.
  assert \initialized(&(*(G->adj + (int)(value - 1)))->v);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al044/GANDA_PROJ.c:150: 
  out of bounds read. assert \valid_read(&(*(G->adj + (int)(value - 1)))->v);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al044/GANDA_PROJ.c:150: 
  accessing uninitialized left-value.
  assert \initialized(&((*(G->adj + (int)(value - 1)))->v)->d);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al044/GANDA_PROJ.c:150: 
  out of bounds read.
  assert \valid_read(&((*(G->adj + (int)(value - 1)))->v)->d);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al044/GANDA_PROJ.c:151: 
  accessing uninitialized left-value. assert \initialized(&j->v);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al044/GANDA_PROJ.c:151: 
  out of bounds write. assert \valid(&(j->v)->d);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al044/GANDA_PROJ.c:151: 
  accessing uninitialized left-value.
  assert \initialized(G->adj + (int)(value - 1));
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al044/GANDA_PROJ.c:151: 
  out of bounds read. assert \valid_read(G->adj + (int)(value - 1));
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al044/GANDA_PROJ.c:151: 
  accessing uninitialized left-value.
  assert \initialized(&(*(G->adj + (int)(value - 1)))->v);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al044/GANDA_PROJ.c:151: 
  out of bounds read. assert \valid_read(&(*(G->adj + (int)(value - 1)))->v);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al044/GANDA_PROJ.c:151: 
  accessing uninitialized left-value.
  assert \initialized(&((*(G->adj + (int)(value - 1)))->v)->d);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al044/GANDA_PROJ.c:151: 
  out of bounds read.
  assert \valid_read(&((*(G->adj + (int)(value - 1)))->v)->d);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al044/GANDA_PROJ.c:152: 
  accessing uninitialized left-value. assert \initialized(&j->v);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al044/GANDA_PROJ.c:152: 
  accessing uninitialized left-value. assert \initialized(&(j->v)->d);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al044/GANDA_PROJ.c:152: 
  out of bounds read. assert \valid_read(&(j->v)->d);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al044/GANDA_PROJ.c:153: 
  accessing uninitialized left-value. assert \initialized(&j->v);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al044/GANDA_PROJ.c:153: 
  accessing uninitialized left-value. assert \initialized(&(j->v)->d);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al044/GANDA_PROJ.c:153: 
  out of bounds read. assert \valid_read(&(j->v)->d);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al044/GANDA_PROJ.c:144: 
  accessing uninitialized left-value. assert \initialized(&j->next);
[eva] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al044/GANDA_PROJ.c:144: 
  starting to merge loop iterations
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al044/GANDA_PROJ.c:68: 
  accessing left-value that contains escaping addresses.
  assert ¬\dangling(&q->tail);
[eva] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:11: 
  allocating variable __malloc_can_fail_malloc_l11_8
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al044/GANDA_PROJ.c:68: 
  accessing uninitialized left-value. assert \initialized(&(q->tail)->next);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al044/GANDA_PROJ.c:68: 
  out of bounds read. assert \valid_read(&(q->tail)->next);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al044/GANDA_PROJ.c:69: 
  accessing uninitialized left-value. assert \initialized(&(q->tail)->next);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al044/GANDA_PROJ.c:145: 
  signed overflow. assert -2147483648 ≤ (j->v)->inc_edges1 - 1;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al044/GANDA_PROJ.c:150: 
  signed overflow.
  assert ((*(G->adj + (int)(value - 1)))->v)->d + 1 ≤ 2147483647;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al044/GANDA_PROJ.c:151: 
  signed overflow.
  assert ((*(G->adj + (int)(value - 1)))->v)->d + 1 ≤ 2147483647;
[eva] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al044/GANDA_PROJ.c:142: 
  starting to merge loop iterations
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al044/GANDA_PROJ.c:73: 
  accessing uninitialized left-value. assert \initialized(&(q->head)->value);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al044/GANDA_PROJ.c:73: 
  out of bounds read. assert \valid_read(&(q->head)->value);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al044/GANDA_PROJ.c:74: 
  accessing uninitialized left-value. assert \initialized(&(q->head)->next);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al044/GANDA_PROJ.c:76: 
  accessing left-value that contains escaping addresses.
  assert ¬\dangling(&t);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al044/GANDA_PROJ.c:68: 
  accessing left-value that contains escaping addresses.
  assert ¬\dangling(&(q->tail)->next);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al044/GANDA_PROJ.c:69: 
  accessing left-value that contains escaping addresses.
  assert ¬\dangling(&(q->tail)->next);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al044/GANDA_PROJ.c:74: 
  accessing left-value that contains escaping addresses.
  assert ¬\dangling(&(q->head)->next);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al044/GANDA_PROJ.c:163: 
  signed overflow. assert d_max + 1 ≤ 2147483647;
[eva] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al044/GANDA_PROJ.c:168: 
  starting to merge loop iterations
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al044/GANDA_PROJ.c:171: 
  accessing uninitialized left-value. assert \initialized(G->adj + i);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al044/GANDA_PROJ.c:171: 
  out of bounds read. assert \valid_read(&(*(G->adj + i))->v);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al044/GANDA_PROJ.c:64: 
  accessing uninitialized left-value. assert \initialized(&q->head);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al044/GANDA_PROJ.c:65: 
  accessing uninitialized left-value. assert \initialized(&q->head);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al044/GANDA_PROJ.c:68: 
  accessing uninitialized left-value. assert \initialized(&q->tail);
[eva] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:11: 
  allocating variable __malloc_can_fail_malloc_l11_9
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al044/GANDA_PROJ.c:68: 
  accessing uninitialized left-value. assert \initialized(&q->tail);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al044/GANDA_PROJ.c:68: 
  accessing left-value that contains escaping addresses.
  assert ¬\dangling(&q->tail);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al044/GANDA_PROJ.c:68: 
  out of bounds write. assert \valid(&(q->tail)->next);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al044/GANDA_PROJ.c:69: 
  accessing uninitialized left-value. assert \initialized(&q->tail);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al044/GANDA_PROJ.c:69: 
  accessing left-value that contains escaping addresses.
  assert ¬\dangling(&q->tail);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al044/GANDA_PROJ.c:69: 
  out of bounds read. assert \valid_read(&(q->tail)->next);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al044/GANDA_PROJ.c:60: 
  accessing uninitialized left-value. assert \initialized(&q->head);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al044/GANDA_PROJ.c:73: 
  accessing uninitialized left-value. assert \initialized(&q->head);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al044/GANDA_PROJ.c:74: 
  accessing uninitialized left-value. assert \initialized(&q->head);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al044/GANDA_PROJ.c:74: 
  out of bounds read. assert \valid_read(&(q->head)->next);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al044/GANDA_PROJ.c:75: 
  accessing uninitialized left-value. assert \initialized(&q->head);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al044/GANDA_PROJ.c:64: 
  accessing left-value that contains escaping addresses.
  assert ¬\dangling(&q->head);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al044/GANDA_PROJ.c:65: 
  accessing left-value that contains escaping addresses.
  assert ¬\dangling(&q->head);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al044/GANDA_PROJ.c:60: 
  accessing left-value that contains escaping addresses.
  assert ¬\dangling(&q->head);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al044/GANDA_PROJ.c:73: 
  accessing left-value that contains escaping addresses.
  assert ¬\dangling(&q->head);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al044/GANDA_PROJ.c:74: 
  accessing left-value that contains escaping addresses.
  assert ¬\dangling(&q->head);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al044/GANDA_PROJ.c:75: 
  accessing left-value that contains escaping addresses.
  assert ¬\dangling(&q->head);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al044/GANDA_PROJ.c:170: 
  signed overflow. assert *(results + 0) + 1 ≤ 2147483647;
[eva] using specification for function printf_va_1
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al044/GANDA_PROJ.c:117: 
  accessing uninitialized left-value. assert \initialized(G->adj + i);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al044/GANDA_PROJ.c:117: 
  out of bounds read. assert \valid_read(G->adj + i);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al044/GANDA_PROJ.c:117: 
  accessing uninitialized left-value.
  assert \initialized(&(*(G->adj + i))->next);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al044/GANDA_PROJ.c:117: 
  out of bounds read. assert \valid_read(&(*(G->adj + i))->next);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al044/GANDA_PROJ.c:118: 
  accessing uninitialized left-value. assert \initialized(&j->next);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al044/GANDA_PROJ.c:120: 
  accessing left-value that contains escaping addresses.
  assert ¬\dangling(&aux);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al044/GANDA_PROJ.c:122: 
  accessing uninitialized left-value. assert \initialized(&aux->next);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al044/GANDA_PROJ.c:122: 
  accessing left-value that contains escaping addresses.
  assert ¬\dangling(&aux->next);
[eva] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al044/GANDA_PROJ.c:117: 
  starting to merge loop iterations
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al044/GANDA_PROJ.c:118: 
  accessing left-value that contains escaping addresses.
  assert ¬\dangling(&j->next);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al044/GANDA_PROJ.c:125: 
  out of bounds read. assert \valid_read(G->adj + i);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al044/GANDA_PROJ.c:125: 
  accessing uninitialized left-value. assert \initialized(&(*(G->adj + i))->v);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al044/GANDA_PROJ.c:126: 
  out of bounds read. assert \valid_read(G->adj + i);
[eva] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al044/GANDA_PROJ.c:116: 
  starting to merge loop iterations
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al044/GANDA_PROJ.c:117: 
  accessing left-value that contains escaping addresses.
  assert ¬\dangling(G->adj + i);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al044/GANDA_PROJ.c:117: 
  accessing left-value that contains escaping addresses.
  assert ¬\dangling(&(*(G->adj + i))->next);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al044/GANDA_PROJ.c:125: 
  accessing uninitialized left-value. assert \initialized(G->adj + i);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al044/GANDA_PROJ.c:125: 
  accessing left-value that contains escaping addresses.
  assert ¬\dangling(G->adj + i);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al044/GANDA_PROJ.c:125: 
  out of bounds read. assert \valid_read(&(*(G->adj + i))->v);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al044/GANDA_PROJ.c:125: 
  accessing left-value that contains escaping addresses.
  assert ¬\dangling(&(*(G->adj + i))->v);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al044/GANDA_PROJ.c:126: 
  accessing uninitialized left-value. assert \initialized(G->adj + i);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al044/GANDA_PROJ.c:126: 
  accessing left-value that contains escaping addresses.
  assert ¬\dangling(G->adj + i);
[eva] done for function main
[scope:rm_asserts] removing 48 assertion(s)
[eva] ====== VALUES COMPUTED ======
[eva:final-states] Values at end of function Q_empty:
  __retres ∈ {0; 1}
[eva:final-states] Values at end of function GraphDestroy:
  G ∈ ESCAPINGADDR
  i ∈ [0..2147483647]
  j ∈ {0} or UNINITIALIZED
  aux ∈
     {{ NULL ; (struct node *)&__malloc_w_can_fail_malloc_l11_4 }} or UNINITIALIZED
  G ∈ ESCAPINGADDR
  __malloc_can_fail_malloc_l11_0[bits 0 to 137438953407]# ∈
                                {{ NULL ;
                                   (? *)&__malloc_w_can_fail_malloc_l11_1 }} or UNINITIALIZED or ESCAPINGADDR repeated %64 
                                [17179869176..18446744073709551607] ∈
                                UNINITIALIZED
  __malloc_w_can_fail_malloc_l11_1[bits 0 to 63] ∈
                                  {{ NULL ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_2 }} or UNINITIALIZED or ESCAPINGADDR
                                  [bits 64 to 127] ∈
                                  {{ NULL ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_4 }} or UNINITIALIZED or ESCAPINGADDR
  __malloc_w_can_fail_malloc_l11_4[bits 0 to 63] ∈
                                  {{ NULL ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_2 }} or UNINITIALIZED or ESCAPINGADDR
                                  [bits 64 to 127] ∈
                                  {{ NULL ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_4 }} or UNINITIALIZED or ESCAPINGADDR
[eva:final-states] Values at end of function Q_destroy:
  q ∈ ESCAPINGADDR
  Q ∈ ESCAPINGADDR
[eva:final-states] Values at end of function Q_get:
  value ∈ [1..2147483647]
  t ∈
   {{ NULL ; (struct q_node *)&__malloc_w_can_fail_malloc_l11_6 ;
      (struct q_node *)&__malloc_w_can_fail_malloc_l11_7 ;
      (struct q_node *)&__malloc_w_can_fail_malloc_l11_8 ;
      (struct q_node *)&__malloc_w_can_fail_malloc_l11_9 }}
  __malloc_w_can_fail_malloc_l11_5[bits 0 to 127]# ∈
                                  {{ NULL ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_6 ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_7 ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_8 ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_9 }} or UNINITIALIZED or ESCAPINGADDR repeated %64 
  __malloc_w_can_fail_malloc_l11_6[bits 0 to 31] ∈
                                  [1..2147483647] or UNINITIALIZED
                                  [4..7] ∈ UNINITIALIZED
                                  [bits 64 to 127] ∈
                                  {{ NULL ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_6 ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_7 ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_8 ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_9 }} or UNINITIALIZED or ESCAPINGADDR
  __malloc_w_can_fail_malloc_l11_7[bits 0 to 31] ∈
                                  [1..2147483647] or UNINITIALIZED
                                  [4..7] ∈ UNINITIALIZED
                                  [bits 64 to 127] ∈
                                  {{ NULL ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_6 ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_7 ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_8 ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_9 }} or UNINITIALIZED or ESCAPINGADDR
  __malloc_w_can_fail_malloc_l11_8[bits 0 to 31] ∈
                                  [1..2147483647] or UNINITIALIZED
                                  [4..7] ∈ UNINITIALIZED
                                  [bits 64 to 127] ∈
                                  {{ NULL ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_6 ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_7 ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_8 ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_9 }} or UNINITIALIZED or ESCAPINGADDR
  __malloc_w_can_fail_malloc_l11_9[bits 0 to 31] ∈
                                  [1..2147483647] or UNINITIALIZED
                                  [4..7] ∈ UNINITIALIZED
                                  [bits 64 to 127] ∈
                                  {{ NULL ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_6 ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_7 ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_8 ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_9 }} or UNINITIALIZED or ESCAPINGADDR
[eva:final-states] Values at end of function can_fail_malloc:
  __fc_heap_status ∈ [--..--]
  __fc_random_counter ∈ [--..--]
  fail ∈ [0. .. 1.]
  __retres ∈
          {{ NULL ; (void *)&__malloc_can_fail_malloc_l11 ;
             (void *)&__malloc_can_fail_malloc_l11_0 ;
             (void *)&__malloc_w_can_fail_malloc_l11_1 ;
             (void *)&__malloc_w_can_fail_malloc_l11_2 ;
             (void *)&__malloc_can_fail_malloc_l11_3 ;
             (void *)&__malloc_w_can_fail_malloc_l11_4 ;
             (void *)&__malloc_w_can_fail_malloc_l11_5 ;
             (void *)&__malloc_w_can_fail_malloc_l11_6 ;
             (void *)&__malloc_w_can_fail_malloc_l11_7 ;
             (void *)&__malloc_w_can_fail_malloc_l11_8 ;
             (void *)&__malloc_w_can_fail_malloc_l11_9 }}
[eva:final-states] Values at end of function AddEdge:
  __fc_heap_status ∈ [--..--]
  __fc_random_counter ∈ [--..--]
  x ∈ {{ (struct node *)&__malloc_w_can_fail_malloc_l11_4 }}
  __malloc_w_can_fail_malloc_l11_1[bits 0 to 63] ∈
                                  {{ NULL ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_2 }} or UNINITIALIZED
                                  [bits 64 to 127] ∈
                                  {{ NULL ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_4 }} or UNINITIALIZED
  __malloc_w_can_fail_malloc_l11_4[bits 0 to 63] ∈
                                  {{ NULL ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_2 }} or UNINITIALIZED
                                  [bits 64 to 127] ∈
                                  {{ NULL ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_4 }} or UNINITIALIZED
[eva:final-states] Values at end of function GraphInit:
  __fc_heap_status ∈ [--..--]
  __fc_random_counter ∈ [--..--]
  i ∈ [0..2147483647]
  G ∈ {{ (struct graph *)&__malloc_can_fail_malloc_l11 }}
  __malloc_can_fail_malloc_l11[0..3] ∈ [--..--]
                              [4..7] ∈ UNINITIALIZED
                              [bits 64 to 127] ∈
                              {{ NULL ;
                                 (? *)&__malloc_can_fail_malloc_l11_0 }}
  __malloc_can_fail_malloc_l11_0[bits 0 to 137438953407]# ∈
                                {{ NULL ;
                                   (? *)&__malloc_w_can_fail_malloc_l11_1 }} or UNINITIALIZED repeated %64 
                                [17179869176..18446744073709551607] ∈
                                UNINITIALIZED
  __malloc_w_can_fail_malloc_l11_1[bits 0 to 63] ∈
                                  {{ NULL ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_2 }} or UNINITIALIZED
                                  [8..15] ∈ {0} or UNINITIALIZED
  __malloc_w_can_fail_malloc_l11_2[bits 0 to 31] ∈
                                  [1..2147483647] or UNINITIALIZED
                                  [bits 32 to 63] ∈ {-1} or UNINITIALIZED
                                  [8..15] ∈ {0} or UNINITIALIZED
[eva:final-states] Values at end of function GraphInsert:
  __fc_heap_status ∈ [--..--]
  __fc_random_counter ∈ [--..--]
  v ∈ [1..2147483647]
  w ∈ [1..2147483647]
  __malloc_w_can_fail_malloc_l11_1[bits 0 to 63] ∈
                                  {{ NULL ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_2 }} or UNINITIALIZED
                                  [bits 64 to 127] ∈
                                  {{ NULL ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_4 }} or UNINITIALIZED
  __malloc_w_can_fail_malloc_l11_2[bits 0 to 31] ∈
                                  [1..2147483647] or UNINITIALIZED
                                  [bits 32 to 63] ∈ {-1} or UNINITIALIZED
                                  [bits 64 to 127]# ∈
                                  [0..2147483647] or UNINITIALIZED repeated %32 
  __malloc_w_can_fail_malloc_l11_4[bits 0 to 63] ∈
                                  {{ NULL ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_2 }} or UNINITIALIZED
                                  [bits 64 to 127] ∈
                                  {{ NULL ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_4 }} or UNINITIALIZED
[eva:final-states] Values at end of function NewLink:
  __fc_heap_status ∈ [--..--]
  __fc_random_counter ∈ [--..--]
  x ∈
   {{ (struct q_node *)&__malloc_w_can_fail_malloc_l11_6 ;
      (struct q_node *)&__malloc_w_can_fail_malloc_l11_7 ;
      (struct q_node *)&__malloc_w_can_fail_malloc_l11_8 ;
      (struct q_node *)&__malloc_w_can_fail_malloc_l11_9 }}
  __malloc_w_can_fail_malloc_l11_6[bits 0 to 31] ∈
                                  [1..2147483647] or UNINITIALIZED
                                  [4..7] ∈ UNINITIALIZED
                                  [bits 64 to 127] ∈
                                  {{ NULL ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_6 ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_7 ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_8 ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_9 }} or UNINITIALIZED or ESCAPINGADDR
  __malloc_w_can_fail_malloc_l11_7[bits 0 to 31] ∈
                                  [1..2147483647] or UNINITIALIZED
                                  [4..7] ∈ UNINITIALIZED
                                  [bits 64 to 127] ∈
                                  {{ NULL ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_6 ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_7 ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_8 ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_9 }} or UNINITIALIZED or ESCAPINGADDR
  __malloc_w_can_fail_malloc_l11_8[bits 0 to 31] ∈
                                  [1..2147483647] or UNINITIALIZED
                                  [4..7] ∈ UNINITIALIZED
                                  [bits 64 to 127] ∈
                                  {{ NULL ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_6 ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_7 ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_8 ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_9 }} or UNINITIALIZED or ESCAPINGADDR
  __malloc_w_can_fail_malloc_l11_9[bits 0 to 31] ∈
                                  [1..2147483647] or UNINITIALIZED
                                  [4..7] ∈ UNINITIALIZED
                                  [bits 64 to 127] ∈
                                  {{ NULL ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_6 ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_7 ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_8 ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_9 }} or UNINITIALIZED or ESCAPINGADDR
[eva:final-states] Values at end of function Q_init:
  __fc_heap_status ∈ [--..--]
  __fc_random_counter ∈ [--..--]
  q ∈ {{ (struct queue *)&__malloc_w_can_fail_malloc_l11_5 }}
  __malloc_w_can_fail_malloc_l11_5[bits 0 to 127]# ∈
                                  {{ NULL ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_6 ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_7 ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_8 ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_9 }} or UNINITIALIZED or ESCAPINGADDR repeated %64 
[eva:final-states] Values at end of function Q_put:
  __fc_heap_status ∈ [--..--]
  __fc_random_counter ∈ [--..--]
  __malloc_w_can_fail_malloc_l11_5[bits 0 to 127]# ∈
                                  {{ NULL ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_6 ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_7 ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_8 ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_9 }} or UNINITIALIZED or ESCAPINGADDR repeated %64 
  __malloc_w_can_fail_malloc_l11_6[bits 0 to 31] ∈
                                  [1..2147483647] or UNINITIALIZED
                                  [4..7] ∈ UNINITIALIZED
                                  [bits 64 to 127] ∈
                                  {{ NULL ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_6 ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_7 ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_8 ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_9 }} or UNINITIALIZED or ESCAPINGADDR
  __malloc_w_can_fail_malloc_l11_7[bits 0 to 31] ∈
                                  [1..2147483647] or UNINITIALIZED
                                  [4..7] ∈ UNINITIALIZED
                                  [bits 64 to 127] ∈
                                  {{ NULL ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_6 ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_7 ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_8 ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_9 }} or UNINITIALIZED or ESCAPINGADDR
  __malloc_w_can_fail_malloc_l11_8[bits 0 to 31] ∈
                                  [1..2147483647] or UNINITIALIZED
                                  [4..7] ∈ UNINITIALIZED
                                  [bits 64 to 127] ∈
                                  {{ NULL ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_6 ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_7 ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_8 ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_9 }} or UNINITIALIZED or ESCAPINGADDR
  __malloc_w_can_fail_malloc_l11_9[bits 0 to 31] ∈
                                  [1..2147483647] or UNINITIALIZED
                                  [4..7] ∈ UNINITIALIZED
                                  [bits 64 to 127] ∈
                                  {{ NULL ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_6 ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_7 ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_8 ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_9 }} or UNINITIALIZED or ESCAPINGADDR
[eva:final-states] Values at end of function BFS:
  __fc_heap_status ∈ [--..--]
  __fc_random_counter ∈ [--..--]
  d_max ∈ [-1..2147483646]
  value ∈ [1..2147483647] or UNINITIALIZED
  j ∈ {0} or UNINITIALIZED
  Q ∈ ESCAPINGADDR
  __retres ∈ [0..2147483647]
  __malloc_w_can_fail_malloc_l11_2[bits 0 to 31] ∈
                                  [1..2147483647] or UNINITIALIZED
                                  [bits 32 to 63] ∈
                                  [-1..2147483647] or UNINITIALIZED
                                  [bits 64 to 95] ∈
                                  [0..2147483647] or UNINITIALIZED
                                  [12..15] ∈ [--..--] or UNINITIALIZED
  __malloc_w_can_fail_malloc_l11_5[bits 0 to 127]# ∈
                                  {{ NULL ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_6 ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_7 ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_8 ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_9 }} or UNINITIALIZED or ESCAPINGADDR repeated %64 
  __malloc_w_can_fail_malloc_l11_6[bits 0 to 31] ∈
                                  [1..2147483647] or UNINITIALIZED
                                  [4..7] ∈ UNINITIALIZED
                                  [bits 64 to 127] ∈
                                  {{ NULL ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_6 ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_7 ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_8 ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_9 }} or UNINITIALIZED or ESCAPINGADDR
  __malloc_w_can_fail_malloc_l11_7[bits 0 to 31] ∈
                                  [1..2147483647] or UNINITIALIZED
                                  [4..7] ∈ UNINITIALIZED
                                  [bits 64 to 127] ∈
                                  {{ NULL ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_6 ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_7 ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_8 ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_9 }} or UNINITIALIZED or ESCAPINGADDR
  __malloc_w_can_fail_malloc_l11_8[bits 0 to 31] ∈
                                  [1..2147483647] or UNINITIALIZED
                                  [4..7] ∈ UNINITIALIZED
                                  [bits 64 to 127] ∈
                                  {{ NULL ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_6 ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_7 ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_8 ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_9 }} or UNINITIALIZED or ESCAPINGADDR
  __malloc_w_can_fail_malloc_l11_9[bits 0 to 31] ∈
                                  [1..2147483647] or UNINITIALIZED
                                  [4..7] ∈ UNINITIALIZED
                                  [bits 64 to 127] ∈
                                  {{ NULL ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_6 ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_7 ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_8 ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_9 }} or UNINITIALIZED or ESCAPINGADDR
[eva:final-states] Values at end of function DoBFS:
  __fc_heap_status ∈ [--..--]
  __fc_random_counter ∈ [--..--]
  aux ∈ [0..2147483647] or UNINITIALIZED
  i ∈ [0..2147483647]
  __malloc_w_can_fail_malloc_l11_2[bits 0 to 31] ∈
                                  [1..2147483647] or UNINITIALIZED
                                  [bits 32 to 63] ∈
                                  [-1..2147483647] or UNINITIALIZED
                                  [bits 64 to 95] ∈
                                  [0..2147483647] or UNINITIALIZED
                                  [12..15] ∈ [--..--] or UNINITIALIZED
  __malloc_can_fail_malloc_l11_3[bits 0 to 63]# ∈
                                [0..2147483647] repeated %32 
  __malloc_w_can_fail_malloc_l11_5[bits 0 to 127]# ∈
                                  {{ NULL ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_6 ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_7 ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_8 ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_9 }} or UNINITIALIZED or ESCAPINGADDR repeated %64 
  __malloc_w_can_fail_malloc_l11_6[bits 0 to 31] ∈
                                  [1..2147483647] or UNINITIALIZED
                                  [4..7] ∈ UNINITIALIZED
                                  [bits 64 to 127] ∈
                                  {{ NULL ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_6 ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_7 ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_8 ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_9 }} or UNINITIALIZED or ESCAPINGADDR
  __malloc_w_can_fail_malloc_l11_7[bits 0 to 31] ∈
                                  [1..2147483647] or UNINITIALIZED
                                  [4..7] ∈ UNINITIALIZED
                                  [bits 64 to 127] ∈
                                  {{ NULL ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_6 ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_7 ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_8 ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_9 }} or UNINITIALIZED or ESCAPINGADDR
  __malloc_w_can_fail_malloc_l11_8[bits 0 to 31] ∈
                                  [1..2147483647] or UNINITIALIZED
                                  [4..7] ∈ UNINITIALIZED
                                  [bits 64 to 127] ∈
                                  {{ NULL ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_6 ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_7 ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_8 ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_9 }} or UNINITIALIZED or ESCAPINGADDR
  __malloc_w_can_fail_malloc_l11_9[bits 0 to 31] ∈
                                  [1..2147483647] or UNINITIALIZED
                                  [4..7] ∈ UNINITIALIZED
                                  [bits 64 to 127] ∈
                                  {{ NULL ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_6 ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_7 ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_8 ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_9 }} or UNINITIALIZED or ESCAPINGADDR
[eva:final-states] Values at end of function main:
  __fc_heap_status ∈ [--..--]
  __fc_random_counter ∈ [--..--]
  V ∈ [--..--]
  E ∈ [--..--]
  i ∈ [0..2147483647]
  G ∈ ESCAPINGADDR
  e ∈ [--..--] or UNINITIALIZED
  results ∈ ESCAPINGADDR
  __retres ∈ {0}
  S___fc_stdin[0..1] ∈ [--..--]
  S___fc_stdout[0..1] ∈ [--..--]
  __malloc_can_fail_malloc_l11_0[bits 0 to 137438953407]# ∈
                                {{ NULL ;
                                   (? *)&__malloc_w_can_fail_malloc_l11_1 }} or UNINITIALIZED or ESCAPINGADDR repeated %64 
                                [17179869176..18446744073709551607] ∈
                                UNINITIALIZED
  __malloc_w_can_fail_malloc_l11_1[bits 0 to 63] ∈
                                  {{ NULL ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_2 }} or UNINITIALIZED or ESCAPINGADDR
                                  [bits 64 to 127] ∈
                                  {{ NULL ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_4 }} or UNINITIALIZED or ESCAPINGADDR
  __malloc_w_can_fail_malloc_l11_2[bits 0 to 31] ∈
                                  [1..2147483647] or UNINITIALIZED
                                  [bits 32 to 63] ∈
                                  [-1..2147483647] or UNINITIALIZED
                                  [bits 64 to 95] ∈
                                  [0..2147483647] or UNINITIALIZED
                                  [12..15] ∈ [--..--] or UNINITIALIZED
  __malloc_w_can_fail_malloc_l11_4[bits 0 to 63] ∈
                                  {{ NULL ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_2 }} or UNINITIALIZED or ESCAPINGADDR
                                  [bits 64 to 127] ∈
                                  {{ NULL ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_4 }} or UNINITIALIZED or ESCAPINGADDR
  __malloc_w_can_fail_malloc_l11_5[bits 0 to 127]# ∈
                                  {{ NULL ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_6 ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_7 ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_8 ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_9 }} or UNINITIALIZED or ESCAPINGADDR repeated %64 
  __malloc_w_can_fail_malloc_l11_6[bits 0 to 31] ∈
                                  [1..2147483647] or UNINITIALIZED
                                  [4..7] ∈ UNINITIALIZED
                                  [bits 64 to 127] ∈
                                  {{ NULL ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_6 ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_7 ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_8 ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_9 }} or UNINITIALIZED or ESCAPINGADDR
  __malloc_w_can_fail_malloc_l11_7[bits 0 to 31] ∈
                                  [1..2147483647] or UNINITIALIZED
                                  [4..7] ∈ UNINITIALIZED
                                  [bits 64 to 127] ∈
                                  {{ NULL ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_6 ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_7 ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_8 ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_9 }} or UNINITIALIZED or ESCAPINGADDR
  __malloc_w_can_fail_malloc_l11_8[bits 0 to 31] ∈
                                  [1..2147483647] or UNINITIALIZED
                                  [4..7] ∈ UNINITIALIZED
                                  [bits 64 to 127] ∈
                                  {{ NULL ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_6 ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_7 ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_8 ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_9 }} or UNINITIALIZED or ESCAPINGADDR
  __malloc_w_can_fail_malloc_l11_9[bits 0 to 31] ∈
                                  [1..2147483647] or UNINITIALIZED
                                  [4..7] ∈ UNINITIALIZED
                                  [bits 64 to 127] ∈
                                  {{ NULL ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_6 ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_7 ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_8 ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_9 }} or UNINITIALIZED or ESCAPINGADDR
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  14 functions analyzed (out of 16): 87% coverage.
  In these functions, 152 statements reached (out of 152): 100% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  146 alarms generated by the analysis:
      63 accesses to uninitialized left-values
      53 invalid memory accesses
      21 escaping addresses
       9 integer overflows
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    16 valid     1 unknown     0 invalid     17 total
  94% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[report] Classification
[report] Output /home/fmarques/sbugs/projects/outputs/framaC/asa_2021_p1/al044/errors.json
[report] Reviews     :   99
[report] Unclassified:   99
