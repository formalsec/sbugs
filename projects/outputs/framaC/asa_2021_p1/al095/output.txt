[report] Monitoring events
[report] Loading '/home/fmarques/sbugs/projects/configs/frama-c_report_rules.json'
[kernel] Parsing /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c (with preprocessing)
[kernel:parser:decimal-float] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:10: 
  Floating-point constant 0.10 is not represented exactly. Will use 0x1.999999999999ap-4.
[kernel:parser:decimal-float] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:17: 
  Floating-point constant 0.10 is not represented exactly. Will use 0x1.999999999999ap-4.
[kernel:parser:decimal-float] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:24: 
  Floating-point constant 0.10 is not represented exactly. Will use 0x1.999999999999ap-4.
[kernel:typing:no-proto] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:49: 
  Calling function initialize that is declared without prototype.
  Its formals will be inferred from actual arguments
[kernel:typing:no-proto] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:60: 
  Calling function dfs that is declared without prototype.
  Its formals will be inferred from actual arguments
[kernel:typing:no-proto] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:117: 
  Calling function pop that is declared without prototype.
  Its formals will be inferred from actual arguments
[kernel:typing:no-proto] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:112: 
  Calling function is_empty that is declared without prototype.
  Its formals will be inferred from actual arguments
[eva] Analyzing a complete application starting at main
[eva] Computing initial state
[eva] Initial state computed
[eva:initial-state] Values of globals at initialization
  table ∈ {0}
  max ∈ {0}
  min ∈ {0}
  number_total_dominos ∈ {0}
  number_total_relations ∈ {0}
  top ∈ {0}
[eva] using specification for function scanf_va_1
[eva] using specification for function exit
[eva] using specification for function time
[eva] using specification for function srand
[eva] using specification for function rand
[eva] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:11: 
  allocating variable __malloc_can_fail_malloc_l11
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:86: 
  out of bounds write. assert \valid(&(table + i)->number);
[eva] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:85: 
  starting to merge loop iterations
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:87: 
  out of bounds write. assert \valid(&(table + i)->color);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:88: 
  out of bounds write. assert \valid(&(table + i)->count_arrivel);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:89: 
  out of bounds write. assert \valid(&(table + i)->nfilhos);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:90: 
  out of bounds write. assert \valid(&(table + i)->filhos);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:91: 
  out of bounds write. assert \valid(&(table + i)->location);
[kernel] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:86: 
  more than 200(2147483647) locations to update in array. Approximating.
[kernel] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:87: 
  more than 200(2147483647) locations to update in array. Approximating.
[kernel] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:88: 
  more than 200(2147483647) locations to update in array. Approximating.
[kernel] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:89: 
  more than 200(2147483647) locations to update in array. Approximating.
[kernel] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:90: 
  more than 200(2147483647) locations to update in array. Approximating.
[kernel] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:91: 
  more than 200(2147483647) locations to update in array. Approximating.
[kernel] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:86: 
  more than 200(2147483647) elements to enumerate. Approximating.
[kernel] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:87: 
  more than 200(2147483647) elements to enumerate. Approximating.
[kernel] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:88: 
  more than 200(2147483647) elements to enumerate. Approximating.
[kernel] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:89: 
  more than 200(2147483647) elements to enumerate. Approximating.
[kernel] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:90: 
  more than 200(2147483647) elements to enumerate. Approximating.
[kernel] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:91: 
  more than 200(2147483647) elements to enumerate. Approximating.
[eva] using specification for function scanf_va_2
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:55: 
  signed overflow. assert -2147483648 ≤ second - 1;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:55: 
  signed overflow. assert -2147483648 ≤ first - 1;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:96: 
  accessing uninitialized left-value.
  assert \initialized(&(table + first)->nfilhos);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:96: 
  out of bounds read. assert \valid_read(&(table + first)->nfilhos);
[eva] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:11: 
  allocating variable __malloc_can_fail_malloc_l11_0
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:97: 
  out of bounds write. assert \valid(&(table + first)->filhos);
[kernel] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:97: 
  more than 200(2147483647) locations to update in array. Approximating.
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:98: 
  accessing uninitialized left-value.
  assert \initialized(&(table + first)->filhos);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:98: 
  out of bounds read. assert \valid_read(&(table + first)->filhos);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:98: 
  out of bounds write. assert \valid((table + first)->filhos + 0);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:99: 
  out of bounds write. assert \valid(&(table + first)->nfilhos);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:99: 
  accessing uninitialized left-value.
  assert \initialized(&(table + first)->nfilhos);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:99: 
  signed overflow. assert -2147483648 ≤ (table + first)->nfilhos + 1;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:99: 
  signed overflow. assert (table + first)->nfilhos + 1 ≤ 2147483647;
[eva] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:99: 
  Assigning imprecise value to (table + first)->nfilhos
  (pointing to __malloc_can_fail_malloc_l11 with offsets [96..549755813472],96%256).
  The imprecision originates from Merge
  {/home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:97}
[kernel] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:99: 
  more than 200(2147483647) locations to update in array. Approximating.
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:101: 
  out of bounds write. assert \valid(&(table + first)->nfilhos);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:101: 
  accessing uninitialized left-value.
  assert \initialized(&(table + first)->nfilhos);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:101: 
  signed overflow. assert (table + first)->nfilhos + 1 ≤ 2147483647;
[kernel] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:101: 
  more than 200(2147483647) locations to update in array. Approximating.
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:102: 
  accessing uninitialized left-value.
  assert \initialized(&(table + first)->nfilhos);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:102: 
  accessing uninitialized left-value.
  assert \initialized(&(table + first)->filhos);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:102: 
  out of bounds read. assert \valid_read(&(table + first)->nfilhos);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:102: 
  out of bounds read. assert \valid_read(&(table + first)->filhos);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:25: 
  function realloc: precondition 'freeable' got status unknown.
[eva] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:25: 
  allocating variable __realloc_can_fail_realloc_l25
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:102: 
  out of bounds write. assert \valid(&(table + first)->filhos);
[kernel] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:102: 
  more than 200(2147483647) locations to update in array. Approximating.
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:103: 
  accessing uninitialized left-value.
  assert \initialized(&(table + first)->filhos);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:103: 
  accessing uninitialized left-value.
  assert \initialized(&(table + first)->nfilhos);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:103: 
  out of bounds read. assert \valid_read(&(table + first)->filhos);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:103: 
  out of bounds read. assert \valid_read(&(table + first)->nfilhos);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:103: 
  signed overflow. assert -2147483648 ≤ (table + first)->nfilhos - 1;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:103: 
  signed overflow. assert (table + first)->nfilhos - 1 ≤ 2147483647;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:103: 
  out of bounds write.
  assert \valid((table + first)->filhos + (int)((table + first)->nfilhos - 1));
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:56: 
  out of bounds write.
  assert \valid(&(table + (int)(second - 1))->count_arrivel);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:56: 
  accessing uninitialized left-value.
  assert \initialized(&(table + (int)(second - 1))->count_arrivel);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:56: 
  signed overflow.
  assert -2147483648 ≤ (table + (int)(second - 1))->count_arrivel + 1;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:56: 
  signed overflow.
  assert (table + (int)(second - 1))->count_arrivel + 1 ≤ 2147483647;
[eva] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:56: 
  Assigning imprecise value to (table + (second - 1))->count_arrivel
  (pointing to __malloc_can_fail_malloc_l11 with offsets [32..549755813408],32%256).
  The imprecision originates from Merge
[kernel] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:56: 
  more than 200(2147483647) locations to update in array. Approximating.
[eva] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:53: 
  starting to merge loop iterations
[eva] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:99: 
  Assigning imprecise value to (table + first)->nfilhos
  (pointing to __malloc_can_fail_malloc_l11 with offsets [96..549755813472],96%256).
  The imprecision originates from Merge
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:101: 
  signed overflow. assert -2147483648 ≤ (table + first)->nfilhos + 1;
[eva] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:101: 
  Assigning imprecise value to (table + first)->nfilhos
  (pointing to __malloc_can_fail_malloc_l11 with offsets [96..549755813472],96%256).
  The imprecision originates from Merge
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:103: 
  accessing left-value that contains escaping addresses.
  assert ¬\dangling(&(table + first)->filhos);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:103: 
  accessing left-value that contains escaping addresses.
  assert ¬\dangling(&(table + first)->nfilhos);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:56: 
  accessing left-value that contains escaping addresses.
  assert ¬\dangling(&(table + (int)(second - 1))->count_arrivel);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:96: 
  accessing left-value that contains escaping addresses.
  assert ¬\dangling(&(table + first)->nfilhos);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:98: 
  accessing left-value that contains escaping addresses.
  assert ¬\dangling(&(table + first)->filhos);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:99: 
  accessing left-value that contains escaping addresses.
  assert ¬\dangling(&(table + first)->nfilhos);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:101: 
  accessing left-value that contains escaping addresses.
  assert ¬\dangling(&(table + first)->nfilhos);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:102: 
  accessing left-value that contains escaping addresses.
  assert ¬\dangling(&(table + first)->nfilhos);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:102: 
  accessing left-value that contains escaping addresses.
  assert ¬\dangling(&(table + first)->filhos);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:110: 
  accessing uninitialized left-value. assert \initialized(&(table + i)->color);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:110: 
  out of bounds read. assert \valid_read(&(table + i)->color);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:110: 
  accessing left-value that contains escaping addresses.
  assert ¬\dangling(&(table + i)->color);
[eva] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:11: 
  allocating variable __malloc_can_fail_malloc_l11_1
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:167: 
  out of bounds write. assert \valid(&new->value);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:116: 
  accessing uninitialized left-value.
  assert \initialized(&(table + value)->nfilhos);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:116: 
  accessing left-value that contains escaping addresses.
  assert ¬\dangling(&(table + value)->nfilhos);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:151: 
  accessing uninitialized left-value.
  assert \initialized(&(table + id)->filhos);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:151: 
  accessing left-value that contains escaping addresses.
  assert ¬\dangling(&(table + id)->filhos);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:151: 
  accessing uninitialized left-value.
  assert \initialized((table + id)->filhos + i);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:151: 
  out of bounds read. assert \valid_read((table + id)->filhos + i);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:151: 
  accessing uninitialized left-value.
  assert \initialized(&(table + *((table + id)->filhos + i))->color);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:151: 
  out of bounds read.
  assert \valid_read(&(table + *((table + id)->filhos + i))->color);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:151: 
  accessing left-value that contains escaping addresses.
  assert ¬\dangling(&(table + *((table + id)->filhos + i))->color);
[eva] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:150: 
  starting to merge loop iterations
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:150: 
  signed overflow. assert i + 1 ≤ 2147483647;
[kernel] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:151: 
  more than 200(2147483647) elements to enumerate. Approximating.
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:126: 
  accessing uninitialized left-value.
  assert \initialized(&(table + value)->filhos);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:126: 
  accessing left-value that contains escaping addresses.
  assert ¬\dangling(&(table + value)->filhos);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:126: 
  accessing uninitialized left-value.
  assert \initialized((table + value)->filhos + j);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:126: 
  out of bounds read. assert \valid_read((table + value)->filhos + j);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:126: 
  accessing uninitialized left-value.
  assert \initialized(&(table + *((table + value)->filhos + j))->color);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:126: 
  out of bounds read.
  assert \valid_read(&(table + *((table + value)->filhos + j))->color);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:126: 
  accessing left-value that contains escaping addresses.
  assert ¬\dangling(&(table + *((table + value)->filhos + j))->color);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:127: 
  accessing uninitialized left-value.
  assert \initialized((table + value)->filhos + j);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:127: 
  out of bounds read. assert \valid_read((table + value)->filhos + j);
[eva] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:11: 
  allocating variable __malloc_can_fail_malloc_l11_2
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:128: 
  accessing uninitialized left-value.
  assert \initialized((table + value)->filhos + j);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:128: 
  out of bounds read. assert \valid_read((table + value)->filhos + j);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:128: 
  out of bounds write.
  assert \valid(&(table + *((table + value)->filhos + j))->color);
[kernel] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:128: 
  more than 200(2147483647) locations to update in array. Approximating.
[eva] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:125: 
  starting to merge loop iterations
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:125: 
  signed overflow. assert j + 1 ≤ 2147483647;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:141: 
  accessing uninitialized left-value.
  assert \initialized(&(table + id)->filhos);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:141: 
  accessing left-value that contains escaping addresses.
  assert ¬\dangling(&(table + id)->filhos);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:141: 
  accessing uninitialized left-value.
  assert \initialized((table + id)->filhos + i);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:141: 
  out of bounds read. assert \valid_read((table + id)->filhos + i);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:141: 
  accessing uninitialized left-value.
  assert \initialized(&(table + *((table + id)->filhos + i))->location);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:141: 
  out of bounds read.
  assert \valid_read(&(table + *((table + id)->filhos + i))->location);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:141: 
  accessing left-value that contains escaping addresses.
  assert ¬\dangling(&(table + *((table + id)->filhos + i))->location);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:142: 
  accessing uninitialized left-value.
  assert \initialized((table + id)->filhos + i);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:142: 
  out of bounds read. assert \valid_read((table + id)->filhos + i);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:142: 
  accessing uninitialized left-value.
  assert \initialized(&(table + *((table + id)->filhos + i))->location);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:142: 
  out of bounds read.
  assert \valid_read(&(table + *((table + id)->filhos + i))->location);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:142: 
  accessing left-value that contains escaping addresses.
  assert ¬\dangling(&(table + *((table + id)->filhos + i))->location);
[eva] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:142: 
  Assigning imprecise value to max_0.
  The imprecision originates from Merge
[eva] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:140: 
  starting to merge loop iterations
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:140: 
  signed overflow. assert i + 1 ≤ 2147483647;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:145: 
  signed overflow. assert -2147483648 ≤ max_0 + 1;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:145: 
  signed overflow. assert max_0 + 1 ≤ 2147483647;
[eva] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:145: 
  Assigning imprecise value to __retres.
  The imprecision originates from Merge
[eva] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:145: 
  Assigning imprecise value to \result<max_location>.
  The imprecision originates from Merge
[eva] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:123: 
  Assigning imprecise value to (table + value)->location
  (pointing to __malloc_can_fail_malloc_l11 with offsets {192}).
  The imprecision originates from Merge
[eva] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:112: 
  starting to merge loop iterations
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:113: 
  accessing uninitialized left-value. assert \initialized(&top->value);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:113: 
  out of bounds read. assert \valid_read(&top->value);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:114: 
  out of bounds write. assert \valid(&(table + value)->color);
[kernel] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:114: 
  more than 200(2147483647) locations to update in array. Approximating.
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:116: 
  out of bounds read. assert \valid_read(&(table + value)->nfilhos);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:176: 
  accessing uninitialized left-value. assert \initialized(&top->value);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:178: 
  accessing uninitialized left-value. assert \initialized(&top->next);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:118: 
  out of bounds write. assert \valid(&(table + value)->color);
[kernel] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:118: 
  more than 200(2147483647) locations to update in array. Approximating.
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:119: 
  out of bounds write. assert \valid(&(table + value)->location);
[kernel] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:119: 
  more than 200(2147483647) locations to update in array. Approximating.
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:150: 
  accessing uninitialized left-value.
  assert \initialized(&(table + id)->nfilhos);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:150: 
  out of bounds read. assert \valid_read(&(table + id)->nfilhos);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:150: 
  accessing left-value that contains escaping addresses.
  assert ¬\dangling(&(table + id)->nfilhos);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:151: 
  out of bounds read. assert \valid_read(&(table + id)->filhos);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:125: 
  accessing uninitialized left-value.
  assert \initialized(&(table + value)->nfilhos);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:125: 
  out of bounds read. assert \valid_read(&(table + value)->nfilhos);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:125: 
  accessing left-value that contains escaping addresses.
  assert ¬\dangling(&(table + value)->nfilhos);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:126: 
  out of bounds read. assert \valid_read(&(table + value)->filhos);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:127: 
  accessing uninitialized left-value.
  assert \initialized(&(table + value)->filhos);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:127: 
  out of bounds read. assert \valid_read(&(table + value)->filhos);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:127: 
  accessing left-value that contains escaping addresses.
  assert ¬\dangling(&(table + value)->filhos);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:128: 
  accessing uninitialized left-value.
  assert \initialized(&(table + value)->filhos);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:128: 
  out of bounds read. assert \valid_read(&(table + value)->filhos);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:128: 
  accessing left-value that contains escaping addresses.
  assert ¬\dangling(&(table + value)->filhos);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:122: 
  out of bounds write. assert \valid(&(table + value)->color);
[kernel] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:122: 
  more than 200(2147483647) locations to update in array. Approximating.
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:140: 
  accessing uninitialized left-value.
  assert \initialized(&(table + id)->nfilhos);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:140: 
  out of bounds read. assert \valid_read(&(table + id)->nfilhos);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:140: 
  accessing left-value that contains escaping addresses.
  assert ¬\dangling(&(table + id)->nfilhos);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:141: 
  out of bounds read. assert \valid_read(&(table + id)->filhos);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:142: 
  accessing uninitialized left-value.
  assert \initialized(&(table + id)->filhos);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:142: 
  out of bounds read. assert \valid_read(&(table + id)->filhos);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:142: 
  accessing left-value that contains escaping addresses.
  assert ¬\dangling(&(table + id)->filhos);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:123: 
  out of bounds write. assert \valid(&(table + value)->location);
[eva] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:123: 
  Assigning imprecise value to (table + value)->location
  (pointing to __malloc_can_fail_malloc_l11 with offsets [192..549755813568],192%256).
  The imprecision originates from Merge
[kernel] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:123: 
  more than 200(2147483647) locations to update in array. Approximating.
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:187: 
  accessing left-value that contains escaping addresses.
  assert ¬\dangling(&top);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:178: 
  accessing left-value that contains escaping addresses.
  assert ¬\dangling(&top->next);
[eva] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:109: 
  starting to merge loop iterations
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:64: 
  accessing uninitialized left-value.
  assert \initialized(&(table + i)->count_arrivel);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:64: 
  out of bounds read. assert \valid_read(&(table + i)->count_arrivel);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:64: 
  accessing left-value that contains escaping addresses.
  assert ¬\dangling(&(table + i)->count_arrivel);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:67: 
  accessing uninitialized left-value.
  assert \initialized(&(table + i)->location);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:67: 
  accessing left-value that contains escaping addresses.
  assert ¬\dangling(&(table + i)->location);
[eva] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:68: 
  Assigning imprecise value to max.
  The imprecision originates from Merge
[eva] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:63: 
  starting to merge loop iterations
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:68: 
  accessing uninitialized left-value.
  assert \initialized(&(table + i)->location);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:68: 
  accessing left-value that contains escaping addresses.
  assert ¬\dangling(&(table + i)->location);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:67: 
  out of bounds read. assert \valid_read(&(table + i)->location);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:68: 
  out of bounds read. assert \valid_read(&(table + i)->location);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:65: 
  signed overflow. assert min + 1 ≤ 2147483647;
[eva] using specification for function printf_va_1
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:75: 
  accessing uninitialized left-value.
  assert \initialized(&(table + i)->filhos);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:75: 
  out of bounds read. assert \valid_read(&(table + i)->filhos);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:75: 
  accessing left-value that contains escaping addresses.
  assert ¬\dangling(&(table + i)->filhos);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:75: 
  function free: precondition 'freeable' got status unknown.
[eva] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:74: 
  starting to merge loop iterations
[eva] done for function main
[scope:rm_asserts] removing 29 assertion(s)
[eva] ====== VALUES COMPUTED ======
[eva:final-states] Values at end of function filho_color_white_or_gray:
  i ∈ [0..2147483647]
  __retres ∈ {0; 1}
[eva:final-states] Values at end of function initialize:
  i ∈ [2..2147483647]
  __malloc_can_fail_malloc_l11[bits 0 to 31] ∈
                              [1..2147483647] or UNINITIALIZED
                              [bits 32 to 549755813407]# ∈
                              [0..2147483647] or UNINITIALIZED repeated %32 
                              [bits 549755813408 to 549755813567]# ∈
                              {0; 1} or UNINITIALIZED repeated %32 
                              [bits 549755813568 to 549755813599] ∈
                              {1} or UNINITIALIZED
                              [68719476700..68719476703] ∈ UNINITIALIZED
[eva:final-states] Values at end of function is_empty:
  __retres ∈ {0; 1}
[eva:final-states] Values at end of function max_location:
  max_0 ∈
       {{ garbled mix of &{__malloc_w_can_fail_malloc_l11_0;
                           __realloc_w_can_fail_realloc_l25}
        (origin: Merge) }}
  i ∈ [0..2147483647]
  __retres ∈
          {{ garbled mix of &{__malloc_w_can_fail_malloc_l11_0;
                              __realloc_w_can_fail_realloc_l25}
           (origin: Merge) }}
[eva:final-states] Values at end of function pop:
  value ∈ [--..--]
  old ∈
     {{ (struct stack *)&__malloc_w_can_fail_malloc_l11_1 ;
        (struct stack *)&__malloc_w_can_fail_malloc_l11_2 }} or ESCAPINGADDR
  top ∈
     {{ NULL ; (struct stack *)&__malloc_w_can_fail_malloc_l11_1 ;
        (struct stack *)&__malloc_w_can_fail_malloc_l11_2 }} or ESCAPINGADDR
  __retres ∈ [--..--]
  __malloc_w_can_fail_malloc_l11_1[bits 0 to 31] ∈
                                  [0..2147483646] or UNINITIALIZED
                                  [4..7] ∈ UNINITIALIZED
                                  [bits 64 to 127] ∈
                                  {{ NULL ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_1 ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_2 }} or UNINITIALIZED or ESCAPINGADDR
  __malloc_w_can_fail_malloc_l11_2[0..3] ∈ [--..--] or UNINITIALIZED
                                  [4..7] ∈ UNINITIALIZED
                                  [bits 64 to 127] ∈
                                  {{ (? *)&__malloc_w_can_fail_malloc_l11_1 ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_2 }} or UNINITIALIZED or ESCAPINGADDR
[eva:final-states] Values at end of function can_fail_malloc:
  __fc_heap_status ∈ [--..--]
  __fc_random_counter ∈ [--..--]
  fail ∈ [0. .. 1.]
  __retres ∈
          {{ NULL ; (void *)&__malloc_can_fail_malloc_l11 ;
             (void *)&__malloc_w_can_fail_malloc_l11_0 ;
             (void *)&__malloc_w_can_fail_malloc_l11_1 ;
             (void *)&__malloc_w_can_fail_malloc_l11_2 }}
[eva:final-states] Values at end of function can_fail_realloc:
  __fc_random_counter ∈ [--..--]
  ptr ∈
     {{ garbled mix of &{__malloc_w_can_fail_malloc_l11_0;
                         __realloc_w_can_fail_realloc_l25}
      (origin: Merge) }} or ESCAPINGADDR
  size ∈
      {{ garbled mix of &{__malloc_w_can_fail_malloc_l11_0;
                          __realloc_w_can_fail_realloc_l25}
       (origin: Merge) }} or ESCAPINGADDR
  fail ∈ [0. .. 1.]
  __retres ∈ {{ NULL ; (void *)&__realloc_w_can_fail_realloc_l25 }}
  __malloc_can_fail_malloc_l11[bits 0 to 31] ∈
                              [1..2147483647] or UNINITIALIZED
                              [4..68719476695] ∈
                              {{ garbled mix of &{__malloc_w_can_fail_malloc_l11_0;
                                                  __realloc_w_can_fail_realloc_l25}
                               (origin: Merge) }} or UNINITIALIZED or ESCAPINGADDR
                              [bits 549755813568 to 549755813599] ∈
                              {1} or UNINITIALIZED
                              [68719476700..68719476703] ∈ UNINITIALIZED
[eva:final-states] Values at end of function push:
  __fc_heap_status ∈ [--..--]
  __fc_random_counter ∈ [--..--]
  new ∈
     {{ (struct stack *)&__malloc_w_can_fail_malloc_l11_1 ;
        (struct stack *)&__malloc_w_can_fail_malloc_l11_2 }}
  top ∈
     {{ (struct stack *)&__malloc_w_can_fail_malloc_l11_1 ;
        (struct stack *)&__malloc_w_can_fail_malloc_l11_2 }}
  __malloc_w_can_fail_malloc_l11_1[bits 0 to 31] ∈
                                  [0..2147483646] or UNINITIALIZED
                                  [4..7] ∈ UNINITIALIZED
                                  [bits 64 to 127] ∈
                                  {{ NULL ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_1 ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_2 }} or UNINITIALIZED or ESCAPINGADDR
  __malloc_w_can_fail_malloc_l11_2[0..3] ∈ [--..--] or UNINITIALIZED
                                  [4..7] ∈ UNINITIALIZED
                                  [bits 64 to 127] ∈
                                  {{ (? *)&__malloc_w_can_fail_malloc_l11_1 ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_2 }} or UNINITIALIZED or ESCAPINGADDR
[eva:final-states] Values at end of function dfs:
  __fc_heap_status ∈ [--..--]
  __fc_random_counter ∈ [--..--]
  i ∈ [2..2147483647]
  top ∈
     {{ NULL ; (struct stack *)&__malloc_w_can_fail_malloc_l11_1 ;
        (struct stack *)&__malloc_w_can_fail_malloc_l11_2 }}
  __malloc_can_fail_malloc_l11[bits 0 to 31] ∈
                              [1..2147483647] or UNINITIALIZED
                              [4..68719476695] ∈
                              {{ garbled mix of &{__malloc_w_can_fail_malloc_l11_0;
                                                  __realloc_w_can_fail_realloc_l25}
                               (origin: Merge) }} or UNINITIALIZED or ESCAPINGADDR
                              [68719476696..68719476699] ∈
                              {{ garbled mix of &{__malloc_w_can_fail_malloc_l11_0;
                                                  __realloc_w_can_fail_realloc_l25}
                               (origin: Merge) }} or UNINITIALIZED
                              [68719476700..68719476703] ∈ UNINITIALIZED
  __malloc_w_can_fail_malloc_l11_1[bits 0 to 31] ∈
                                  [0..2147483646] or UNINITIALIZED
                                  [4..7] ∈ UNINITIALIZED
                                  [bits 64 to 127] ∈
                                  {{ NULL ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_1 ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_2 }} or UNINITIALIZED or ESCAPINGADDR
  __malloc_w_can_fail_malloc_l11_2[0..3] ∈ [--..--] or UNINITIALIZED
                                  [4..7] ∈ UNINITIALIZED
                                  [bits 64 to 127] ∈
                                  {{ (? *)&__malloc_w_can_fail_malloc_l11_1 ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_2 }} or UNINITIALIZED or ESCAPINGADDR
[eva:final-states] Values at end of function putnode:
  __fc_heap_status ∈ [--..--]
  __fc_random_counter ∈ [--..--]
  __malloc_can_fail_malloc_l11[bits 0 to 31] ∈
                              [1..2147483647] or UNINITIALIZED
                              [4..68719476695] ∈
                              {{ garbled mix of &{__malloc_w_can_fail_malloc_l11_0;
                                                  __realloc_w_can_fail_realloc_l25}
                               (origin: Merge) }} or UNINITIALIZED or ESCAPINGADDR
                              [bits 549755813568 to 549755813599] ∈
                              {1} or UNINITIALIZED
                              [68719476700..68719476703] ∈ UNINITIALIZED
  __malloc_w_can_fail_malloc_l11_0[bits 0 to 31] ∈
                                  [-2147483648..2147483646] or UNINITIALIZED
  __realloc_w_can_fail_realloc_l25[0..18446744073709551615] ∈
                                  [--..--] or UNINITIALIZED
[eva:final-states] Values at end of function main:
  __fc_heap_status ∈ [--..--]
  __fc_random_counter ∈ [--..--]
  table ∈
       {{ NULL ; (Node *)&__malloc_can_fail_malloc_l11 }} or ESCAPINGADDR
  max ∈
     {{ garbled mix of &{__malloc_w_can_fail_malloc_l11_0;
                         __realloc_w_can_fail_realloc_l25}
      (origin: Merge) }} or ESCAPINGADDR
  min ∈ [0..2147483647]
  number_total_dominos ∈ [2..2147483647]
  number_total_relations ∈ [0..2147483647]
  i ∈ [2..2147483647]
  first ∈ [1..2147483647] or UNINITIALIZED
  second ∈ [1..2147483647] or UNINITIALIZED
  top ∈
     {{ NULL ; (struct stack *)&__malloc_w_can_fail_malloc_l11_1 ;
        (struct stack *)&__malloc_w_can_fail_malloc_l11_2 }}
  __retres ∈ {0}
  S___fc_stdin[0..1] ∈ [--..--]
  S___fc_stdout[0].__fc_FILE_id ∈ [--..--]
               [0].__fc_FILE_data ∈
               {{ garbled mix of &{__malloc_w_can_fail_malloc_l11_0;
                                   __realloc_w_can_fail_realloc_l25}
                (origin: Library function
                {/home/fmarques/sbugs/projects/alunos/asa_2021_p1/al095/dfs_i.c:72}) }} or ESCAPINGADDR
               [1] ∈ [--..--]
  __malloc_can_fail_malloc_l11[bits 0 to 31] ∈
                              [1..2147483647] or UNINITIALIZED
                              [4..68719476699] ∈
                              {{ garbled mix of &{__malloc_w_can_fail_malloc_l11_0;
                                                  __realloc_w_can_fail_realloc_l25}
                               (origin: Merge) }} or UNINITIALIZED or ESCAPINGADDR
                              [68719476700..68719476703] ∈ UNINITIALIZED
  __malloc_w_can_fail_malloc_l11_0[bits 0 to 31] ∈
                                  [-2147483648..2147483646] or UNINITIALIZED
  __realloc_w_can_fail_realloc_l25[0..18446744073709551615] ∈
                                  [--..--] or UNINITIALIZED
  __malloc_w_can_fail_malloc_l11_1[bits 0 to 31] ∈
                                  [0..2147483646] or UNINITIALIZED
                                  [4..7] ∈ UNINITIALIZED
                                  [bits 64 to 127] ∈
                                  {{ NULL ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_1 ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_2 }} or UNINITIALIZED or ESCAPINGADDR
  __malloc_w_can_fail_malloc_l11_2[0..3] ∈ [--..--] or UNINITIALIZED
                                  [4..7] ∈ UNINITIALIZED
                                  [bits 64 to 127] ∈
                                  {{ (? *)&__malloc_w_can_fail_malloc_l11_1 ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_2 }} or UNINITIALIZED or ESCAPINGADDR
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  11 functions analyzed (out of 13): 84% coverage.
  In these functions, 156 statements reached (out of 159): 98% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  135 alarms generated by the analysis:
      52 invalid memory accesses
      37 accesses to uninitialized left-values
      30 escaping addresses
      16 integer overflows
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    11 valid     2 unknown     0 invalid     13 total
  84% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[report] Classification
[report] Output /home/fmarques/sbugs/projects/outputs/framaC/asa_2021_p1/al095/errors.json
[report] Reviews     :  108
[report] Unclassified:  108
