[report] Monitoring events
[report] Loading '/home/fmarques/sbugs/projects/configs/frama-c_report_rules.json'
[kernel] Parsing /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al111/projeto1.c (with preprocessing)
[kernel:parser:decimal-float] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:10: 
  Floating-point constant 0.10 is not represented exactly. Will use 0x1.999999999999ap-4.
[kernel:parser:decimal-float] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:17: 
  Floating-point constant 0.10 is not represented exactly. Will use 0x1.999999999999ap-4.
[kernel:parser:decimal-float] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:24: 
  Floating-point constant 0.10 is not represented exactly. Will use 0x1.999999999999ap-4.
[eva] Analyzing a complete application starting at main
[eva] Computing initial state
[eva] Initial state computed
[eva:initial-state] Values of globals at initialization
  
[eva] using specification for function scanf_va_1
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al111/projeto1.c:91: 
  signed overflow. assert v + 1 ≤ 2147483647;
[eva] using specification for function time
[eva] using specification for function srand
[eva] using specification for function rand
[eva] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:11: 
  allocating variable __malloc_can_fail_malloc_l11
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al111/projeto1.c:49: 
  out of bounds write. assert \valid(&graph->V);
[eva] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:11: 
  allocating variable __malloc_can_fail_malloc_l11_0
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al111/projeto1.c:60: 
  out of bounds write. assert \valid(&(graph->array + i)->head);
[eva] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al111/projeto1.c:59: 
  starting to merge loop iterations
[eva] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:11: 
  allocating variable __malloc_can_fail_malloc_l11_1
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al111/projeto1.c:94: 
  out of bounds write. assert \valid(discovery + i);
[eva] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al111/projeto1.c:93: 
  starting to merge loop iterations
[eva] using specification for function scanf_va_2
[eva] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:11: 
  allocating variable __malloc_can_fail_malloc_l11_2
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al111/projeto1.c:40: 
  out of bounds write. assert \valid(&newNode->dest);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al111/projeto1.c:74: 
  accessing uninitialized left-value.
  assert \initialized(&(graph->array + src)->head);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al111/projeto1.c:74: 
  out of bounds read. assert \valid_read(&(graph->array + src)->head);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al111/projeto1.c:75: 
  out of bounds write. assert \valid(&(graph->array + src)->head);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al111/projeto1.c:101: 
  out of bounds write. assert \valid(discovery + inD);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al111/projeto1.c:102: 
  signed overflow. assert -2147483648 ≤ e - 1;
[eva] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al111/projeto1.c:98: 
  starting to merge loop iterations
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al111/projeto1.c:110: 
  accessing uninitialized left-value. assert \initialized(discovery + i);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al111/projeto1.c:110: 
  out of bounds read. assert \valid_read(discovery + i);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al111/projeto1.c:111: 
  accessing uninitialized left-value.
  assert \initialized(&(graph->array + i)->head);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al111/projeto1.c:111: 
  out of bounds read. assert \valid_read(&(graph->array + i)->head);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al111/projeto1.c:113: 
  accessing uninitialized left-value. assert \initialized(&pCrawl->dest);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al111/projeto1.c:113: 
  accessing uninitialized left-value.
  assert \initialized(discovery + pCrawl->dest);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al111/projeto1.c:113: 
  out of bounds read. assert \valid_read(discovery + pCrawl->dest);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al111/projeto1.c:113: 
  accessing uninitialized left-value. assert \initialized(&pCrawl->dest);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al111/projeto1.c:113: 
  out of bounds write. assert \valid(discovery + pCrawl->dest);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al111/projeto1.c:114: 
  accessing uninitialized left-value. assert \initialized(&pCrawl->next);
[eva] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al111/projeto1.c:112: 
  starting to merge loop iterations
[eva] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al111/projeto1.c:109: 
  starting to merge loop iterations
[eva] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al111/projeto1.c:108: 
  starting to merge loop iterations
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al111/projeto1.c:122: 
  accessing uninitialized left-value. assert \initialized(discovery + i);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al111/projeto1.c:122: 
  out of bounds read. assert \valid_read(discovery + i);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al111/projeto1.c:123: 
  out of bounds read. assert \valid_read(discovery + i);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al111/projeto1.c:123: 
  out of bounds read. assert \valid_read(discovery + i);
[eva] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al111/projeto1.c:121: 
  starting to merge loop iterations
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al111/projeto1.c:123: 
  accessing uninitialized left-value. assert \initialized(discovery + i);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al111/projeto1.c:123: 
  accessing uninitialized left-value. assert \initialized(discovery + i);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al111/projeto1.c:122: 
  signed overflow. assert minTouchesReq + 1 ≤ 2147483647;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al111/projeto1.c:126: 
  signed overflow. assert maxTime + 1 ≤ 2147483647;
[eva] using specification for function printf_va_1
[eva] done for function main
[scope:rm_asserts] removing 5 assertion(s)
[eva] ====== VALUES COMPUTED ======
[eva:final-states] Values at end of function can_fail_malloc:
  __fc_heap_status ∈ [--..--]
  __fc_random_counter ∈ [--..--]
  fail ∈ [0. .. 1.]
  __retres ∈
          {{ NULL ; (void *)&__malloc_can_fail_malloc_l11 ;
             (void *)&__malloc_can_fail_malloc_l11_0 ;
             (void *)&__malloc_can_fail_malloc_l11_1 ;
             (void *)&__malloc_w_can_fail_malloc_l11_2 }}
[eva:final-states] Values at end of function createGraph:
  __fc_heap_status ∈ [--..--]
  __fc_random_counter ∈ [--..--]
  graph ∈ {{ (struct Graph *)&__malloc_can_fail_malloc_l11 }}
  i ∈ [1..2147483647]
  __malloc_can_fail_malloc_l11[bits 0 to 31] ∈ [-2147483647..2147483647]
                              [4..7] ∈ UNINITIALIZED
                              [bits 64 to 127] ∈
                              {{ NULL ;
                                 (? *)&__malloc_can_fail_malloc_l11_0 }}
  __malloc_can_fail_malloc_l11_0[0..7] ∈ UNINITIALIZED
                                [8..17179869175] ∈ {0} or UNINITIALIZED
                                [17179869176..18446744073709551607] ∈
                                UNINITIALIZED
[eva:final-states] Values at end of function newAdjListNode:
  __fc_heap_status ∈ [--..--]
  __fc_random_counter ∈ [--..--]
  newNode ∈ {{ (struct AdjListNode *)&__malloc_w_can_fail_malloc_l11_2 }}
  __malloc_w_can_fail_malloc_l11_2[0..3] ∈ [--..--] or UNINITIALIZED
                                  [4..7] ∈ UNINITIALIZED
                                  [bits 64 to 127] ∈
                                  {{ NULL ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_2 }} or UNINITIALIZED
[eva:final-states] Values at end of function addEdge:
  __fc_heap_status ∈ [--..--]
  __fc_random_counter ∈ [--..--]
  newNode ∈ {{ (struct AdjListNode *)&__malloc_w_can_fail_malloc_l11_2 }}
  __malloc_can_fail_malloc_l11_0[bits 0 to 63] ∈
                                {{ (? *)&__malloc_w_can_fail_malloc_l11_2 }} or UNINITIALIZED
                                [bits 64 to 137438953407]# ∈
                                {{ NULL ;
                                   (? *)&__malloc_w_can_fail_malloc_l11_2 }} or UNINITIALIZED repeated %64 
                                [bits 137438953408 to 137438953471] ∈
                                {{ (? *)&__malloc_w_can_fail_malloc_l11_2 }} or UNINITIALIZED
                                [17179869184..18446744073709551607] ∈
                                UNINITIALIZED
  __malloc_w_can_fail_malloc_l11_2[0..3] ∈ [--..--] or UNINITIALIZED
                                  [4..7] ∈ UNINITIALIZED
                                  [bits 64 to 127] ∈
                                  {{ NULL ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_2 }} or UNINITIALIZED
[eva:final-states] Values at end of function main:
  __fc_heap_status ∈ [--..--]
  __fc_random_counter ∈ [--..--]
  i ∈ [1..2147483647] or UNINITIALIZED
  v ∈ [--..--]
  e ∈ [--..--]
  outD ∈ [--..--]
  inD ∈ [--..--]
  minTouchesReq ∈ [0..2147483647]
  discovery ∈
           {{ NULL ; (int *)&__malloc_can_fail_malloc_l11_1 }} or UNINITIALIZED or ESCAPINGADDR
  graph ∈
       {{ (struct Graph *)&__malloc_can_fail_malloc_l11 }} or UNINITIALIZED
  pCrawl ∈ {0} or UNINITIALIZED
  time_0 ∈ [0..2147483647] or UNINITIALIZED
  maxTime ∈ [0..2147483646] or UNINITIALIZED
  __retres ∈ {0; 1}
  S___fc_stdin[0..1] ∈ [--..--]
  S___fc_stdout[0..1] ∈ [--..--]
  __malloc_can_fail_malloc_l11[bits 0 to 31] ∈ [-2147483647..2147483647]
                              [4..7] ∈ UNINITIALIZED
                              [bits 64 to 127] ∈
                              {{ NULL ;
                                 (? *)&__malloc_can_fail_malloc_l11_0 }}
  __malloc_can_fail_malloc_l11_0[bits 0 to 63] ∈
                                {{ (? *)&__malloc_w_can_fail_malloc_l11_2 }} or UNINITIALIZED
                                [bits 64 to 137438953407]# ∈
                                {{ NULL ;
                                   (? *)&__malloc_w_can_fail_malloc_l11_2 }} or UNINITIALIZED repeated %64 
                                [bits 137438953408 to 137438953471] ∈
                                {{ (? *)&__malloc_w_can_fail_malloc_l11_2 }} or UNINITIALIZED
                                [17179869184..18446744073709551607] ∈
                                UNINITIALIZED
  __malloc_can_fail_malloc_l11_1[bits 0 to 31] ∈
                                [1..2147483647] or UNINITIALIZED
                                [bits 32 to 68719476703]# ∈
                                [0..2147483647] or UNINITIALIZED repeated %32 
                                [bits 68719476704 to 68719476735] ∈
                                [1..2147483647] or UNINITIALIZED
                                [8589934592..18446744073709551611] ∈
                                UNINITIALIZED
  __malloc_w_can_fail_malloc_l11_2[0..3] ∈ [--..--] or UNINITIALIZED
                                  [4..7] ∈ UNINITIALIZED
                                  [bits 64 to 127] ∈
                                  {{ NULL ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_2 }} or UNINITIALIZED
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  5 functions analyzed (out of 7): 71% coverage.
  In these functions, 96 statements reached (out of 96): 100% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  28 alarms generated by the analysis:
      14 invalid memory accesses
      10 accesses to uninitialized left-values
       4 integer overflows
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions     9 valid     0 unknown     0 invalid      9 total
  100% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[report] Classification
[report] Output /home/fmarques/sbugs/projects/outputs/framaC/asa_2021_p1/al111/errors.json
[report] Reviews     :   23
[report] Unclassified:   23
