[report] Monitoring events
[report] Loading '/home/fmarques/sbugs/projects/configs/frama-c_report_rules.json'
[kernel] Parsing /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al150/submit.c (with preprocessing)
[kernel:parser:decimal-float] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:10: 
  Floating-point constant 0.10 is not represented exactly. Will use 0x1.999999999999ap-4.
[kernel:parser:decimal-float] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:17: 
  Floating-point constant 0.10 is not represented exactly. Will use 0x1.999999999999ap-4.
[kernel:parser:decimal-float] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:24: 
  Floating-point constant 0.10 is not represented exactly. Will use 0x1.999999999999ap-4.
[eva] Analyzing a complete application starting at main
[eva] Computing initial state
[eva] Initial state computed
[eva:initial-state] Values of globals at initialization
  
[eva] using specification for function scanf_va_1
[eva] using specification for function fprintf_va_3
[eva] using specification for function exit
[eva] using specification for function time
[eva] using specification for function srand
[eva] using specification for function rand
[eva] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:11: 
  allocating variable __malloc_can_fail_malloc_l11
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al150/submit.c:84: 
  out of bounds write. assert \valid(&graph->size);
[eva] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:11: 
  allocating variable __malloc_can_fail_malloc_l11_0
[eva] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:11: 
  allocating variable __malloc_can_fail_malloc_l11_1
[eva] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:11: 
  allocating variable __malloc_can_fail_malloc_l11_2
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al150/submit.c:75: 
  out of bounds write. assert \valid(&v->edges);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al150/submit.c:91: 
  out of bounds write. assert \valid(graph->v_list + i);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al150/submit.c:92: 
  out of bounds write. assert \valid(graph->adj_lists + i);
[eva] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al150/submit.c:90: 
  starting to merge loop iterations
[eva] using specification for function scanf_va_2
[eva] using specification for function fprintf_va_4
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al150/submit.c:99: 
  accessing uninitialized left-value.
  assert \initialized(graph->v_list + dest);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al150/submit.c:99: 
  out of bounds read. assert \valid_read(graph->v_list + dest);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al150/submit.c:99: 
  accessing uninitialized left-value.
  assert \initialized(&(*(graph->v_list + dest))->edges);
[eva] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:11: 
  allocating variable __malloc_can_fail_malloc_l11_3
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al150/submit.c:67: 
  out of bounds write. assert \valid(&newnode->num);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al150/submit.c:101: 
  accessing uninitialized left-value.
  assert \initialized(graph->adj_lists + root);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al150/submit.c:101: 
  out of bounds read. assert \valid_read(graph->adj_lists + root);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al150/submit.c:102: 
  out of bounds write. assert \valid(graph->adj_lists + root);
[eva] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al150/submit.c:183: 
  starting to merge loop iterations
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al150/submit.c:99: 
  signed overflow. assert (*(graph->v_list + dest))->edges + 1 ≤ 2147483647;
[eva] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:11: 
  allocating variable __malloc_can_fail_malloc_l11_4
[eva] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:11: 
  allocating variable __malloc_can_fail_malloc_l11_5
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al150/submit.c:31: 
  out of bounds write. assert \valid(&queue->max_size);
[eva] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:11: 
  allocating variable __malloc_can_fail_malloc_l11_6
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al150/submit.c:114: 
  accessing uninitialized left-value. assert \initialized(graph->v_list + i);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al150/submit.c:114: 
  out of bounds read. assert \valid_read(graph->v_list + i);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al150/submit.c:114: 
  accessing uninitialized left-value.
  assert \initialized(&(*(graph->v_list + i))->edges);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al150/submit.c:48: 
  out of bounds write. assert \valid(queue->array + queue->back);
[eva] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al150/submit.c:113: 
  starting to merge loop iterations
[eva] using specification for function fprintf_va_1
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al150/submit.c:49: 
  signed overflow. assert queue->size + 1 ≤ 2147483647;
[eva] using specification for function fprintf_va_2
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al150/submit.c:57: 
  accessing uninitialized left-value.
  assert \initialized(queue->array + queue->front);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al150/submit.c:57: 
  out of bounds read. assert \valid_read(queue->array + queue->front);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al150/submit.c:121: 
  out of bounds write. assert \valid(sorted + tmp_1);
                       (tmp_1 from j++)
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al150/submit.c:123: 
  accessing uninitialized left-value.
  assert \initialized(graph->adj_lists + i);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al150/submit.c:123: 
  out of bounds read. assert \valid_read(graph->adj_lists + i);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al150/submit.c:125: 
  accessing uninitialized left-value. assert \initialized(&v->num);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al150/submit.c:126: 
  accessing uninitialized left-value. assert \initialized(graph->v_list + n);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al150/submit.c:126: 
  out of bounds read. assert \valid_read(graph->v_list + n);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al150/submit.c:126: 
  accessing uninitialized left-value.
  assert \initialized(&(*(graph->v_list + n))->edges);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al150/submit.c:127: 
  accessing uninitialized left-value. assert \initialized(graph->v_list + n);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al150/submit.c:127: 
  out of bounds read. assert \valid_read(graph->v_list + n);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al150/submit.c:127: 
  accessing uninitialized left-value.
  assert \initialized(&(*(graph->v_list + n))->edges);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al150/submit.c:129: 
  accessing uninitialized left-value. assert \initialized(&v->next);
[eva] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al150/submit.c:124: 
  starting to merge loop iterations
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al150/submit.c:126: 
  signed overflow. assert -2147483648 ≤ (*(graph->v_list + n))->edges - 1;
[eva] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al150/submit.c:119: 
  starting to merge loop iterations
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al150/submit.c:60: 
  signed overflow. assert -2147483648 ≤ queue->size - 1;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al150/submit.c:121: 
  signed overflow. assert j + 1 ≤ 2147483647;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al150/submit.c:143: 
  accessing uninitialized left-value. assert \initialized(sorted + i);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al150/submit.c:143: 
  out of bounds read. assert \valid_read(sorted + i);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al150/submit.c:145: 
  accessing uninitialized left-value. assert \initialized(graph->v_list + j);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al150/submit.c:145: 
  out of bounds read. assert \valid_read(graph->v_list + j);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al150/submit.c:145: 
  accessing uninitialized left-value.
  assert \initialized(&(*(graph->v_list + j))->vis_state);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al150/submit.c:146: 
  accessing uninitialized left-value. assert \initialized(graph->v_list + j);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al150/submit.c:146: 
  out of bounds read. assert \valid_read(graph->v_list + j);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al150/submit.c:150: 
  accessing uninitialized left-value.
  assert \initialized(graph->adj_lists + j);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al150/submit.c:150: 
  out of bounds read. assert \valid_read(graph->adj_lists + j);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al150/submit.c:152: 
  accessing uninitialized left-value. assert \initialized(&v->num);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al150/submit.c:153: 
  accessing uninitialized left-value. assert \initialized(graph->v_list + n);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al150/submit.c:153: 
  out of bounds read. assert \valid_read(graph->v_list + n);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al150/submit.c:155: 
  accessing uninitialized left-value. assert \initialized(graph->v_list + n);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al150/submit.c:155: 
  accessing uninitialized left-value. assert \initialized(graph->v_list + j);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al150/submit.c:155: 
  out of bounds read. assert \valid_read(graph->v_list + n);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al150/submit.c:155: 
  out of bounds read. assert \valid_read(graph->v_list + j);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al150/submit.c:155: 
  accessing uninitialized left-value.
  assert \initialized(&(*(graph->v_list + n))->tmp);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al150/submit.c:155: 
  accessing uninitialized left-value.
  assert \initialized(&(*(graph->v_list + j))->tmp);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al150/submit.c:157: 
  accessing uninitialized left-value. assert \initialized(graph->v_list + n);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al150/submit.c:157: 
  out of bounds read. assert \valid_read(graph->v_list + n);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al150/submit.c:157: 
  accessing uninitialized left-value. assert \initialized(graph->v_list + j);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al150/submit.c:157: 
  out of bounds read. assert \valid_read(graph->v_list + j);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al150/submit.c:157: 
  accessing uninitialized left-value.
  assert \initialized(&(*(graph->v_list + j))->tmp);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al150/submit.c:159: 
  accessing uninitialized left-value. assert \initialized(graph->v_list + j);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al150/submit.c:159: 
  out of bounds read. assert \valid_read(graph->v_list + j);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al150/submit.c:159: 
  accessing uninitialized left-value.
  assert \initialized(&(*(graph->v_list + j))->tmp);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al150/submit.c:160: 
  accessing uninitialized left-value. assert \initialized(graph->v_list + j);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al150/submit.c:160: 
  out of bounds read. assert \valid_read(graph->v_list + j);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al150/submit.c:160: 
  accessing uninitialized left-value.
  assert \initialized(&(*(graph->v_list + j))->tmp);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al150/submit.c:162: 
  accessing uninitialized left-value. assert \initialized(&v->next);
[eva] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al150/submit.c:151: 
  starting to merge loop iterations
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al150/submit.c:155: 
  signed overflow. assert (*(graph->v_list + j))->tmp + 1 ≤ 2147483647;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al150/submit.c:157: 
  signed overflow. assert (*(graph->v_list + j))->tmp + 1 ≤ 2147483647;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al150/submit.c:159: 
  signed overflow. assert (*(graph->v_list + j))->tmp + 1 ≤ 2147483647;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al150/submit.c:160: 
  signed overflow. assert (*(graph->v_list + j))->tmp + 1 ≤ 2147483647;
[eva] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al150/submit.c:142: 
  starting to merge loop iterations
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al150/submit.c:147: 
  signed overflow. assert num_paths + 1 ≤ 2147483647;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p1/al150/submit.c:166: 
  signed overflow. assert big_path + 1 ≤ 2147483647;
[eva] using specification for function printf_va_1
[eva] done for function main
[scope:rm_asserts] removing 20 assertion(s)
[eva] ====== VALUES COMPUTED ======
[eva:final-states] Values at end of function isEmpty:
  __retres ∈ {0; 1}
[eva:final-states] Values at end of function isFull:
  __retres ∈ {0; 1}
[eva:final-states] Values at end of function addQueue:
  S___fc_stderr[0..1] ∈ [--..--]
  __malloc_can_fail_malloc_l11_5[bits 0 to 63]# ∈
                                [0..2147483646] repeated %32 
                                [bits 64 to 95] ∈ [-2147483647..2147483647]
                                [bits 96 to 127] ∈ [2..2147483647]
                                [bits 128 to 191] ∈
                                {{ (? *)&__malloc_can_fail_malloc_l11_6 }}
  __malloc_can_fail_malloc_l11_6[bits 0 to 68719476703]# ∈
                                [0..2147483646] or UNINITIALIZED repeated %32 
[eva:final-states] Values at end of function longestPath:
  i ∈ [2..2147483647]
  j ∈ [0..2147483646] or UNINITIALIZED
  big_path ∈ [0..2147483646]
  num_paths ∈ [0..2147483647]
  S___fc_stdout[0..1] ∈ [--..--]
  __malloc_w_can_fail_malloc_l11_2[0..3] ∈ [--..--] or UNINITIALIZED
                                  [bits 32 to 63] ∈
                                  [0..2147483647] or UNINITIALIZED
                                  [bits 64 to 95] ∈ {0; 1} or UNINITIALIZED
[eva:final-states] Values at end of function removeQueue:
  item ∈ [0..2147483646]
  S___fc_stderr[0..1] ∈ [--..--]
  __malloc_can_fail_malloc_l11_5[bits 0 to 63]# ∈
                                [0..2147483646] repeated %32 
                                [bits 64 to 95] ∈ [-2147483648..2147483646]
                                [bits 96 to 127] ∈ [2..2147483647]
                                [bits 128 to 191] ∈
                                {{ (? *)&__malloc_can_fail_malloc_l11_6 }}
[eva:final-states] Values at end of function can_fail_malloc:
  __fc_heap_status ∈ [--..--]
  __fc_random_counter ∈ [--..--]
  fail ∈ [0. .. 1.]
  __retres ∈
          {{ NULL ; (void *)&__malloc_can_fail_malloc_l11 ;
             (void *)&__malloc_can_fail_malloc_l11_0 ;
             (void *)&__malloc_can_fail_malloc_l11_1 ;
             (void *)&__malloc_w_can_fail_malloc_l11_2 ;
             (void *)&__malloc_w_can_fail_malloc_l11_3 ;
             (void *)&__malloc_can_fail_malloc_l11_4 ;
             (void *)&__malloc_can_fail_malloc_l11_5 ;
             (void *)&__malloc_can_fail_malloc_l11_6 }}
[eva:final-states] Values at end of function createQueue:
  __fc_heap_status ∈ [--..--]
  __fc_random_counter ∈ [--..--]
  queue ∈ {{ (struct Queue *)&__malloc_can_fail_malloc_l11_5 }}
  __malloc_can_fail_malloc_l11_5[0..3] ∈ {0}
                                [bits 32 to 63] ∈ [1..2147483646]
                                [8..11] ∈ {0}
                                [bits 96 to 127] ∈ [2..2147483647]
                                [bits 128 to 191] ∈
                                {{ NULL ;
                                   (? *)&__malloc_can_fail_malloc_l11_6 }}
[eva:final-states] Values at end of function newNode:
  __fc_heap_status ∈ [--..--]
  __fc_random_counter ∈ [--..--]
  newnode ∈ {{ (struct node *)&__malloc_w_can_fail_malloc_l11_3 }}
  __malloc_w_can_fail_malloc_l11_3[bits 0 to 31] ∈
                                  [0..2147483646] or UNINITIALIZED
                                  [4..7] ∈ UNINITIALIZED
                                  [bits 64 to 127] ∈
                                  {{ NULL ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_3 }} or UNINITIALIZED
[eva:final-states] Values at end of function addEdge:
  __fc_heap_status ∈ [--..--]
  __fc_random_counter ∈ [--..--]
  newnode ∈ {{ (struct node *)&__malloc_w_can_fail_malloc_l11_3 }}
  __malloc_can_fail_malloc_l11_0[bits 0 to 137438953407]# ∈
                                {{ NULL ;
                                   (? *)&__malloc_w_can_fail_malloc_l11_3 }} or UNINITIALIZED repeated %64 
  __malloc_w_can_fail_malloc_l11_2[bits 0 to 31] ∈
                                  [0..2147483647] or UNINITIALIZED
                                  [4..11] ∈ {0} or UNINITIALIZED
  __malloc_w_can_fail_malloc_l11_3[bits 0 to 31] ∈
                                  [0..2147483646] or UNINITIALIZED
                                  [4..7] ∈ UNINITIALIZED
                                  [bits 64 to 127] ∈
                                  {{ NULL ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_3 }} or UNINITIALIZED
[eva:final-states] Values at end of function newVertice:
  __fc_heap_status ∈ [--..--]
  __fc_random_counter ∈ [--..--]
  v ∈ {{ (struct vertice *)&__malloc_w_can_fail_malloc_l11_2 }}
  __malloc_w_can_fail_malloc_l11_2[0..11] ∈ {0} or UNINITIALIZED
[eva:final-states] Values at end of function newGraph:
  __fc_heap_status ∈ [--..--]
  __fc_random_counter ∈ [--..--]
  graph ∈ {{ (struct Graph *)&__malloc_can_fail_malloc_l11 }}
  i ∈ [2..2147483647]
  __malloc_can_fail_malloc_l11[bits 0 to 31] ∈ [2..2147483647]
                              [4..7] ∈ UNINITIALIZED
                              [bits 64 to 127] ∈
                              {{ NULL ;
                                 (? *)&__malloc_can_fail_malloc_l11_0 }}
                              [bits 128 to 191] ∈
                              {{ NULL ;
                                 (? *)&__malloc_can_fail_malloc_l11_1 }}
  __malloc_can_fail_malloc_l11_0[0..17179869175] ∈ {0} or UNINITIALIZED
  __malloc_can_fail_malloc_l11_1[bits 0 to 137438953407]# ∈
                                {{ (? *)&__malloc_w_can_fail_malloc_l11_2 }} or UNINITIALIZED repeated %64 
  __malloc_w_can_fail_malloc_l11_2[0..11] ∈ {0} or UNINITIALIZED
[eva:final-states] Values at end of function processInput:
  __fc_heap_status ∈ [--..--]
  __fc_random_counter ∈ [--..--]
  num_ver ∈ [2..2147483647]
  num_ligs ∈ [0..2147483647]
  a ∈ [1..2147483647] or UNINITIALIZED
  b ∈ [1..2147483647] or UNINITIALIZED
  num_args ∈ {2}
  graph ∈ {{ (struct Graph *)&__malloc_can_fail_malloc_l11 }}
  i ∈ [0..2147483647]
  S___fc_stderr[0..1] ∈ [--..--]
  S___fc_stdin[0..1] ∈ [--..--]
  __malloc_can_fail_malloc_l11[bits 0 to 31] ∈ [2..2147483647]
                              [4..7] ∈ UNINITIALIZED
                              [bits 64 to 127] ∈
                              {{ NULL ;
                                 (? *)&__malloc_can_fail_malloc_l11_0 }}
                              [bits 128 to 191] ∈
                              {{ NULL ;
                                 (? *)&__malloc_can_fail_malloc_l11_1 }}
  __malloc_can_fail_malloc_l11_0[bits 0 to 137438953407]# ∈
                                {{ NULL ;
                                   (? *)&__malloc_w_can_fail_malloc_l11_3 }} or UNINITIALIZED repeated %64 
  __malloc_can_fail_malloc_l11_1[bits 0 to 137438953407]# ∈
                                {{ (? *)&__malloc_w_can_fail_malloc_l11_2 }} or UNINITIALIZED repeated %64 
  __malloc_w_can_fail_malloc_l11_2[bits 0 to 31] ∈
                                  [0..2147483647] or UNINITIALIZED
                                  [4..11] ∈ {0} or UNINITIALIZED
  __malloc_w_can_fail_malloc_l11_3[bits 0 to 31] ∈
                                  [0..2147483646] or UNINITIALIZED
                                  [4..7] ∈ UNINITIALIZED
                                  [bits 64 to 127] ∈
                                  {{ NULL ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_3 }} or UNINITIALIZED
[eva:final-states] Values at end of function topologicalSort:
  __fc_heap_status ∈ [--..--]
  __fc_random_counter ∈ [--..--]
  sorted ∈ {{ NULL ; (int *)&__malloc_can_fail_malloc_l11_4 }}
  i ∈ [0..2147483647]
  j ∈ [0..2147483647]
  queue ∈ {{ (struct Queue *)&__malloc_can_fail_malloc_l11_5 }}
  S___fc_stderr[0..1] ∈ [--..--]
  __malloc_w_can_fail_malloc_l11_2[0..3] ∈ [--..--] or UNINITIALIZED
                                  [4..11] ∈ {0} or UNINITIALIZED
  __malloc_can_fail_malloc_l11_4[bits 0 to 68719476703]# ∈
                                [0..2147483646] or UNINITIALIZED repeated %32 
  __malloc_can_fail_malloc_l11_5[bits 0 to 31] ∈ [0..2147483647]
                                [bits 32 to 63] ∈ [0..2147483646]
                                [8..11] ∈ [--..--]
                                [bits 96 to 127] ∈ [2..2147483647]
                                [bits 128 to 191] ∈
                                {{ NULL ;
                                   (? *)&__malloc_can_fail_malloc_l11_6 }}
  __malloc_can_fail_malloc_l11_6[bits 0 to 68719476703]# ∈
                                [0..2147483646] or UNINITIALIZED repeated %32 
[eva:final-states] Values at end of function getOutput:
  __fc_heap_status ∈ [--..--]
  __fc_random_counter ∈ [--..--]
  sorted ∈ {{ NULL ; (int *)&__malloc_can_fail_malloc_l11_4 }}
  S___fc_stderr[0..1] ∈ [--..--]
  S___fc_stdout[0..1] ∈ [--..--]
  __malloc_w_can_fail_malloc_l11_2[0..3] ∈ [--..--] or UNINITIALIZED
                                  [bits 32 to 63] ∈
                                  [0..2147483647] or UNINITIALIZED
                                  [bits 64 to 95] ∈ {0; 1} or UNINITIALIZED
  __malloc_can_fail_malloc_l11_4[bits 0 to 68719476703]# ∈
                                [0..2147483646] or UNINITIALIZED repeated %32 
  __malloc_can_fail_malloc_l11_5[bits 0 to 31] ∈ [0..2147483647]
                                [bits 32 to 63] ∈ [0..2147483646]
                                [8..11] ∈ [--..--]
                                [bits 96 to 127] ∈ [2..2147483647]
                                [bits 128 to 191] ∈
                                {{ NULL ;
                                   (? *)&__malloc_can_fail_malloc_l11_6 }}
  __malloc_can_fail_malloc_l11_6[bits 0 to 68719476703]# ∈
                                [0..2147483646] or UNINITIALIZED repeated %32 
[eva:final-states] Values at end of function main:
  __fc_heap_status ∈ [--..--]
  __fc_random_counter ∈ [--..--]
  grafo ∈ {{ (struct Graph *)&__malloc_can_fail_malloc_l11 }}
  __retres ∈ {0}
  S___fc_stderr[0..1] ∈ [--..--]
  S___fc_stdin[0..1] ∈ [--..--]
  S___fc_stdout[0..1] ∈ [--..--]
  __malloc_can_fail_malloc_l11[bits 0 to 31] ∈ [2..2147483647]
                              [4..7] ∈ UNINITIALIZED
                              [bits 64 to 127] ∈
                              {{ NULL ;
                                 (? *)&__malloc_can_fail_malloc_l11_0 }}
                              [bits 128 to 191] ∈
                              {{ NULL ;
                                 (? *)&__malloc_can_fail_malloc_l11_1 }}
  __malloc_can_fail_malloc_l11_0[bits 0 to 137438953407]# ∈
                                {{ NULL ;
                                   (? *)&__malloc_w_can_fail_malloc_l11_3 }} or UNINITIALIZED repeated %64 
  __malloc_can_fail_malloc_l11_1[bits 0 to 137438953407]# ∈
                                {{ (? *)&__malloc_w_can_fail_malloc_l11_2 }} or UNINITIALIZED repeated %64 
  __malloc_w_can_fail_malloc_l11_2[0..3] ∈ [--..--] or UNINITIALIZED
                                  [bits 32 to 63] ∈
                                  [0..2147483647] or UNINITIALIZED
                                  [bits 64 to 95] ∈ {0; 1} or UNINITIALIZED
  __malloc_w_can_fail_malloc_l11_3[bits 0 to 31] ∈
                                  [0..2147483646] or UNINITIALIZED
                                  [4..7] ∈ UNINITIALIZED
                                  [bits 64 to 127] ∈
                                  {{ NULL ;
                                     (? *)&__malloc_w_can_fail_malloc_l11_3 }} or UNINITIALIZED
  __malloc_can_fail_malloc_l11_4[bits 0 to 68719476703]# ∈
                                [0..2147483646] or UNINITIALIZED repeated %32 
  __malloc_can_fail_malloc_l11_5[bits 0 to 31] ∈ [0..2147483647]
                                [bits 32 to 63] ∈ [0..2147483646]
                                [8..11] ∈ [--..--]
                                [bits 96 to 127] ∈ [2..2147483647]
                                [bits 128 to 191] ∈
                                {{ NULL ;
                                   (? *)&__malloc_can_fail_malloc_l11_6 }}
  __malloc_can_fail_malloc_l11_6[bits 0 to 68719476703]# ∈
                                [0..2147483646] or UNINITIALIZED repeated %32 
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  15 functions analyzed (out of 17): 88% coverage.
  In these functions, 164 statements reached (out of 164): 100% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  70 alarms generated by the analysis:
      32 accesses to uninitialized left-values
      27 invalid memory accesses
      11 integer overflows
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    12 valid     0 unknown     0 invalid     12 total
  100% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[report] Classification
[report] Output /home/fmarques/sbugs/projects/outputs/framaC/asa_2021_p1/al150/errors.json
[report] Reviews     :   50
[report] Unclassified:   50
