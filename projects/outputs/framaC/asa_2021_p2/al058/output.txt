[report] Monitoring events
[report] Loading '/home/fmarques/sbugs/projects/configs/frama-c_report_rules.json'
[kernel] Parsing /home/fmarques/sbugs/projects/alunos/asa_2021_p2/al058/main.c (with preprocessing)
[kernel:parser:decimal-float] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:10: 
  Floating-point constant 0.10 is not represented exactly. Will use 0x1.999999999999ap-4.
[kernel:parser:decimal-float] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:17: 
  Floating-point constant 0.10 is not represented exactly. Will use 0x1.999999999999ap-4.
[kernel:parser:decimal-float] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:24: 
  Floating-point constant 0.10 is not represented exactly. Will use 0x1.999999999999ap-4.
[eva] Analyzing a complete application starting at main
[eva] Computing initial state
[eva] Initial state computed
[eva:initial-state] Values of globals at initialization
  
[eva] using specification for function scanf_va_1
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p2/al058/main.c:31: 
  signed overflow. assert vertices + 2 ≤ 2147483647;
[eva] using specification for function time
[eva] using specification for function srand
[eva] using specification for function rand
[eva] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:11: 
  allocating variable __malloc_can_fail_malloc_l11
[eva] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:11: 
  allocating variable __malloc_can_fail_malloc_l11_0
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p2/al058/main.c:41: 
  out of bounds write. assert \valid(graph->graphF + i);
[eva] /home/fmarques/sbugs/projects/alunos/asa_2021_p2/al058/main.c:40: 
  starting to merge loop iterations
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p2/al058/main.c:47: 
  accessing uninitialized left-value. assert \initialized(graph->graphF + i);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p2/al058/main.c:47: 
  out of bounds read. assert \valid_read(graph->graphF + i);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p2/al058/main.c:47: 
  out of bounds write. assert \valid(*(graph->graphF + i) + j);
[eva] /home/fmarques/sbugs/projects/alunos/asa_2021_p2/al058/main.c:46: 
  starting to merge loop iterations
[eva] /home/fmarques/sbugs/projects/alunos/asa_2021_p2/al058/main.c:45: 
  starting to merge loop iterations
[eva] using specification for function scanf_va_2
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p2/al058/main.c:54: 
  accessing uninitialized left-value. assert \initialized(graph->graphF + u);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p2/al058/main.c:54: 
  out of bounds read. assert \valid_read(graph->graphF + u);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p2/al058/main.c:54: 
  out of bounds write. assert \valid(*(graph->graphF + u) + v);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p2/al058/main.c:55: 
  accessing uninitialized left-value. assert \initialized(graph->graphF + v);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p2/al058/main.c:55: 
  out of bounds read. assert \valid_read(graph->graphF + v);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p2/al058/main.c:55: 
  out of bounds write. assert \valid(*(graph->graphF + v) + u);
[eva] /home/fmarques/sbugs/projects/alunos/asa_2021_p2/al058/main.c:186: 
  starting to merge loop iterations
[eva] using specification for function scanf_va_3
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p2/al058/main.c:199: 
  signed overflow. assert -2147483648 ≤ v - 1;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p2/al058/main.c:199: 
  signed overflow. assert -2147483648 ≤ u - 1;
[eva] /home/fmarques/sbugs/projects/alunos/asa_2021_p2/al058/main.c:195: 
  starting to merge loop iterations
[eva] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:11: 
  allocating variable __malloc_can_fail_malloc_l11_1
[eva] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:11: 
  allocating variable __malloc_can_fail_malloc_l11_2
[eva] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:11: 
  allocating variable __malloc_can_fail_malloc_l11_3
[eva] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:11: 
  allocating variable __malloc_can_fail_malloc_l11_4
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p2/al058/main.c:84: 
  out of bounds write. assert \valid(color + i);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p2/al058/main.c:85: 
  out of bounds write. assert \valid(parent + i);
[eva] /home/fmarques/sbugs/projects/alunos/asa_2021_p2/al058/main.c:83: 
  starting to merge loop iterations
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p2/al058/main.c:88: 
  out of bounds write. assert \valid(color + graph->source);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p2/al058/main.c:89: 
  out of bounds write. assert \valid(stack + stackHead);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p2/al058/main.c:93: 
  out of bounds read. assert \valid_read(stack + stackHead);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p2/al058/main.c:98: 
  accessing uninitialized left-value. assert \initialized(color + i);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p2/al058/main.c:98: 
  out of bounds read. assert \valid_read(color + i);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p2/al058/main.c:98: 
  accessing uninitialized left-value.
  assert \initialized(graph->graphF + head);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p2/al058/main.c:98: 
  out of bounds read. assert \valid_read(graph->graphF + head);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p2/al058/main.c:98: 
  accessing uninitialized left-value.
  assert \initialized(*(graph->graphF + head) + i);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p2/al058/main.c:98: 
  out of bounds read. assert \valid_read(*(graph->graphF + head) + i);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p2/al058/main.c:126: 
  out of bounds write. assert \valid(stack + stackHead);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p2/al058/main.c:127: 
  out of bounds write. assert \valid(parent + i);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p2/al058/main.c:128: 
  out of bounds write. assert \valid(color + i);
[eva] /home/fmarques/sbugs/projects/alunos/asa_2021_p2/al058/main.c:97: 
  starting to merge loop iterations
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p2/al058/main.c:126: 
  signed overflow. assert stackHead + 1 ≤ 2147483647;
[eva] /home/fmarques/sbugs/projects/alunos/asa_2021_p2/al058/main.c:91: 
  starting to merge loop iterations
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p2/al058/main.c:93: 
  accessing uninitialized left-value. assert \initialized(stack + stackHead);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p2/al058/main.c:104: 
  out of bounds write. assert \valid(parent + i);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p2/al058/main.c:107: 
  accessing uninitialized left-value. assert \initialized(parent + i);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p2/al058/main.c:107: 
  out of bounds read. assert \valid_read(parent + i);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p2/al058/main.c:108: 
  out of bounds write. assert \valid(path + *pathLength);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p2/al058/main.c:111: 
  accessing uninitialized left-value. assert \initialized(parent + i);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p2/al058/main.c:111: 
  out of bounds read. assert \valid_read(parent + i);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p2/al058/main.c:111: 
  accessing uninitialized left-value.
  assert \initialized(graph->graphF + *(parent + i));
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p2/al058/main.c:111: 
  out of bounds read. assert \valid_read(graph->graphF + *(parent + i));
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p2/al058/main.c:111: 
  accessing uninitialized left-value.
  assert \initialized(*(graph->graphF + *(parent + i)) + i);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p2/al058/main.c:111: 
  out of bounds read. assert \valid_read(*(graph->graphF + *(parent + i)) + i);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p2/al058/main.c:112: 
  accessing uninitialized left-value. assert \initialized(parent + i);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p2/al058/main.c:112: 
  out of bounds read. assert \valid_read(parent + i);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p2/al058/main.c:112: 
  accessing uninitialized left-value.
  assert \initialized(graph->graphF + *(parent + i));
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p2/al058/main.c:112: 
  out of bounds read. assert \valid_read(graph->graphF + *(parent + i));
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p2/al058/main.c:112: 
  accessing uninitialized left-value.
  assert \initialized(*(graph->graphF + *(parent + i)) + i);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p2/al058/main.c:112: 
  out of bounds read. assert \valid_read(*(graph->graphF + *(parent + i)) + i);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p2/al058/main.c:115: 
  accessing uninitialized left-value. assert \initialized(parent + i);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p2/al058/main.c:115: 
  out of bounds read. assert \valid_read(parent + i);
[eva] /home/fmarques/sbugs/projects/alunos/asa_2021_p2/al058/main.c:107: 
  starting to merge loop iterations
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p2/al058/main.c:109: 
  signed overflow. assert *pathLength + 1 ≤ 2147483647;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p2/al058/main.c:118: 
  out of bounds write. assert \valid(path + *pathLength);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p2/al058/main.c:119: 
  signed overflow. assert *pathLength + 1 ≤ 2147483647;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p2/al058/main.c:168: 
  accessing uninitialized left-value. assert \initialized(path + i);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p2/al058/main.c:168: 
  out of bounds read. assert \valid_read(path + i);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p2/al058/main.c:168: 
  accessing uninitialized left-value. assert \initialized(path + (int)(i + 1));
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p2/al058/main.c:168: 
  out of bounds read. assert \valid_read(path + (int)(i + 1));
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p2/al058/main.c:170: 
  accessing uninitialized left-value. assert \initialized(graph->graphF + v);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p2/al058/main.c:170: 
  out of bounds read. assert \valid_read(graph->graphF + v);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p2/al058/main.c:170: 
  out of bounds write. assert \valid(*(graph->graphF + v) + u);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p2/al058/main.c:170: 
  accessing uninitialized left-value.
  assert \initialized(*(graph->graphF + v) + u);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p2/al058/main.c:170: 
  signed overflow.
  assert -2147483648 ≤ *(*(graph->graphF + v) + u) - minimumIncrease;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p2/al058/main.c:170: 
  signed overflow.
  assert *(*(graph->graphF + v) + u) - minimumIncrease ≤ 2147483647;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p2/al058/main.c:171: 
  accessing uninitialized left-value. assert \initialized(graph->graphF + u);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p2/al058/main.c:171: 
  out of bounds read. assert \valid_read(graph->graphF + u);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p2/al058/main.c:171: 
  out of bounds write. assert \valid(*(graph->graphF + u) + v);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p2/al058/main.c:171: 
  accessing uninitialized left-value.
  assert \initialized(*(graph->graphF + u) + v);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p2/al058/main.c:171: 
  signed overflow.
  assert -2147483648 ≤ *(*(graph->graphF + u) + v) + minimumIncrease;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p2/al058/main.c:171: 
  signed overflow.
  assert *(*(graph->graphF + u) + v) + minimumIncrease ≤ 2147483647;
[eva] /home/fmarques/sbugs/projects/alunos/asa_2021_p2/al058/main.c:167: 
  starting to merge loop iterations
[eva] /home/fmarques/sbugs/projects/alunos/asa_2021_p2/al058/main.c:149: 
  starting to merge loop iterations
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p2/al058/main.c:174: 
  signed overflow. assert -2147483648 ≤ minimumCost + minimumIncrease;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p2/al058/main.c:174: 
  signed overflow. assert minimumCost + minimumIncrease ≤ 2147483647;
[eva] using specification for function printf_va_1
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p2/al058/main.c:63: 
  accessing uninitialized left-value. assert \initialized(graph->graphF + i);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p2/al058/main.c:63: 
  out of bounds read. assert \valid_read(graph->graphF + i);
[eva] /home/fmarques/sbugs/projects/alunos/asa_2021_p2/al058/main.c:62: 
  starting to merge loop iterations
[eva:alarm] /home/fmarques/sbugs/projects/alunos/asa_2021_p2/al058/main.c:63: 
  accessing left-value that contains escaping addresses.
  assert ¬\dangling(graph->graphF + i);
[eva] done for function main
[scope:rm_asserts] removing 10 assertion(s)
[eva] ====== VALUES COMPUTED ======
[eva:final-states] Values at end of function addEdge:
  __malloc_w_can_fail_malloc_l11_0[0..8589934587] ∈
                                  [--..--] or UNINITIALIZED
[eva:final-states] Values at end of function destroyGraph:
  i ∈ [0..2147483647]
  graph.vertices ∈ [-2147483646..2147483647]
       .source ∈ [0..2147483645]
       .target ∈ [-2147483647..2147483646]
       .[bits 96 to 127] ∈ UNINITIALIZED
       .graphF ∈
       {{ NULL ; (int **)&__malloc_can_fail_malloc_l11 }} or ESCAPINGADDR
  __malloc_can_fail_malloc_l11[bits 0 to 137438953407]# ∈
                              {{ NULL ;
                                 (? *)&__malloc_w_can_fail_malloc_l11_0 }} or UNINITIALIZED or ESCAPINGADDR repeated %64 
                              [17179869176..18446744073709551607] ∈
                              UNINITIALIZED
[eva:final-states] Values at end of function can_fail_malloc:
  __fc_heap_status ∈ [--..--]
  __fc_random_counter ∈ [--..--]
  fail ∈ [0. .. 1.]
  __retres ∈
          {{ NULL ; (void *)&__malloc_can_fail_malloc_l11 ;
             (void *)&__malloc_w_can_fail_malloc_l11_0 ;
             (void *)&__malloc_can_fail_malloc_l11_1 ;
             (void *)&__malloc_can_fail_malloc_l11_2 ;
             (void *)&__malloc_can_fail_malloc_l11_3 ;
             (void *)&__malloc_can_fail_malloc_l11_4 }}
[eva:final-states] Values at end of function getShortestPath:
  __fc_heap_status ∈ [--..--]
  __fc_random_counter ∈ [--..--]
  i ∈ [0..2147483647]
  head ∈ [0..2147483646] or UNINITIALIZED
  stack ∈ ESCAPINGADDR
  stackHead ∈ [-1..2147483647]
  pathLength ∈ [0..2147483647]
  __retres ∈ [--..--]
  __malloc_can_fail_malloc_l11_1[bits 0 to 68719476735]# ∈
                                [0..2147483646] or UNINITIALIZED repeated %32 
                                [8589934592..18446744073709551611] ∈
                                UNINITIALIZED
  __malloc_can_fail_malloc_l11_2[0..2147483646] ∈ {0; 1} or UNINITIALIZED
                                [2147483647..18446744073709551614] ∈
                                UNINITIALIZED
  __malloc_can_fail_malloc_l11_3[bits 0 to 68719476703]# ∈
                                [-1..2147483647] or UNINITIALIZED repeated %32 
                                [8589934588..18446744073709551611] ∈
                                UNINITIALIZED
[eva:final-states] Values at end of function computeMinimumCost:
  __fc_heap_status ∈ [--..--]
  __fc_random_counter ∈ [--..--]
  i ∈ [0..2147483647] or UNINITIALIZED
  minimumIncrease ∈ [--..--]
  minimumCost ∈ [--..--]
  path ∈
      {{ NULL ; (int *)&__malloc_can_fail_malloc_l11_1 }} or ESCAPINGADDR
  pathLength ∈ {0}
  color ∈ ESCAPINGADDR
  parent ∈
        {{ NULL ; (int *)&__malloc_can_fail_malloc_l11_3 }} or ESCAPINGADDR
  __retres ∈ [--..--]
  __malloc_w_can_fail_malloc_l11_0[0..8589934587] ∈
                                  [--..--] or UNINITIALIZED
  __malloc_can_fail_malloc_l11_1[bits 0 to 68719476735]# ∈
                                [0..2147483646] or UNINITIALIZED repeated %32 
                                [8589934592..18446744073709551611] ∈
                                UNINITIALIZED
  __malloc_can_fail_malloc_l11_3[bits 0 to 68719476703]# ∈
                                [-1..2147483647] or UNINITIALIZED repeated %32 
                                [8589934588..18446744073709551611] ∈
                                UNINITIALIZED
[eva:final-states] Values at end of function initGraph:
  __fc_heap_status ∈ [--..--]
  __fc_random_counter ∈ [--..--]
  vertices ∈ [-2147483646..2147483647]
  i ∈ [0..2147483647]
  j ∈ [1..2147483647] or UNINITIALIZED
  graph.vertices ∈ [-2147483646..2147483647]
       .source ∈ [-2147483648..2147483645]
       .target ∈ [-2147483647..2147483646]
       .[bits 96 to 127] ∈ UNINITIALIZED
       .graphF ∈ {{ NULL ; (int **)&__malloc_can_fail_malloc_l11 }}
  __malloc_can_fail_malloc_l11[bits 0 to 137438953407]# ∈
                              {{ NULL ;
                                 (? *)&__malloc_w_can_fail_malloc_l11_0 }} or UNINITIALIZED repeated %64 
                              [17179869176..18446744073709551607] ∈
                              UNINITIALIZED
  __malloc_w_can_fail_malloc_l11_0[0..8589934587] ∈ {0} or UNINITIALIZED
[eva:final-states] Values at end of function processInput:
  __fc_heap_status ∈ [--..--]
  __fc_random_counter ∈ [--..--]
  vertices ∈ [--..--]
  edges ∈ [--..--]
  i ∈ [0..2147483647]
  graph.vertices ∈ [-2147483646..2147483647]
       .source ∈ [-2147483648..2147483645]
       .target ∈ [-2147483647..2147483646]
       .[bits 96 to 127] ∈ UNINITIALIZED
       .graphF ∈ {{ NULL ; (int **)&__malloc_can_fail_malloc_l11 }}
  S___fc_stdin[0..1] ∈ [--..--]
  __malloc_can_fail_malloc_l11[bits 0 to 137438953407]# ∈
                              {{ NULL ;
                                 (? *)&__malloc_w_can_fail_malloc_l11_0 }} or UNINITIALIZED repeated %64 
                              [17179869176..18446744073709551607] ∈
                              UNINITIALIZED
  __malloc_w_can_fail_malloc_l11_0[0..8589934587] ∈
                                  [--..--] or UNINITIALIZED
[eva:final-states] Values at end of function main:
  __fc_heap_status ∈ [--..--]
  __fc_random_counter ∈ [--..--]
  graph.vertices ∈ [-2147483646..2147483647]
       .source ∈ [0..2147483645]
       .target ∈ [-2147483647..2147483646]
       .[bits 96 to 127] ∈ UNINITIALIZED
       .graphF ∈
       {{ NULL ; (int **)&__malloc_can_fail_malloc_l11 }} or ESCAPINGADDR
  minimumCost ∈ [--..--]
  __retres ∈ {0}
  S___fc_stdin[0..1] ∈ [--..--]
  S___fc_stdout[0..1] ∈ [--..--]
  __malloc_can_fail_malloc_l11[bits 0 to 137438953407]# ∈
                              {{ NULL ;
                                 (? *)&__malloc_w_can_fail_malloc_l11_0 }} or UNINITIALIZED or ESCAPINGADDR repeated %64 
                              [17179869176..18446744073709551607] ∈
                              UNINITIALIZED
  __malloc_w_can_fail_malloc_l11_0[0..8589934587] ∈
                                  [--..--] or UNINITIALIZED
  __malloc_can_fail_malloc_l11_1[bits 0 to 68719476735]# ∈
                                [0..2147483646] or UNINITIALIZED repeated %32 
                                [8589934592..18446744073709551611] ∈
                                UNINITIALIZED
  __malloc_can_fail_malloc_l11_3[bits 0 to 68719476703]# ∈
                                [-1..2147483647] or UNINITIALIZED repeated %32 
                                [8589934588..18446744073709551611] ∈
                                UNINITIALIZED
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  8 functions analyzed (out of 10): 80% coverage.
  In these functions, 154 statements reached (out of 154): 100% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  71 alarms generated by the analysis:
      36 invalid memory accesses
      22 accesses to uninitialized left-values
      12 integer overflows
       1 escaping address
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    19 valid     0 unknown     0 invalid     19 total
  100% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[report] Classification
[report] Output /home/fmarques/sbugs/projects/outputs/framaC/asa_2021_p2/al058/errors.json
[report] Reviews     :   61
[report] Unclassified:   61
