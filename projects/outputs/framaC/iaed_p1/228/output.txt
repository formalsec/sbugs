[report] Monitoring events
[report] Loading '/home/fmarques/sbugs/projects/configs/frama-c_report_rules.json'
[kernel] Parsing /home/fmarques/sbugs/projects/alunos/iaed_p1/228/final.c (with preprocessing)
[kernel:parser:decimal-float] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:10: 
  Floating-point constant 0.10 is not represented exactly. Will use 0x1.999999999999ap-4.
[kernel:parser:decimal-float] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:17: 
  Floating-point constant 0.10 is not represented exactly. Will use 0x1.999999999999ap-4.
[kernel:parser:decimal-float] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:24: 
  Floating-point constant 0.10 is not represented exactly. Will use 0x1.999999999999ap-4.
[kernel:typing:no-proto] /home/fmarques/sbugs/projects/alunos/iaed_p1/228/final.c:97: 
  Calling function add_item that is declared without prototype.
  Its formals will be inferred from actual arguments
[kernel:typing:no-proto] /home/fmarques/sbugs/projects/alunos/iaed_p1/228/final.c:102: 
  Calling function add_stock that is declared without prototype.
  Its formals will be inferred from actual arguments
[kernel:typing:no-proto] /home/fmarques/sbugs/projects/alunos/iaed_p1/228/final.c:106: 
  Calling function list_items that is declared without prototype.
  Its formals will be inferred from actual arguments
[kernel:typing:no-proto] /home/fmarques/sbugs/projects/alunos/iaed_p1/228/final.c:111: 
  Calling function list_items_in_order that is declared without prototype.
  Its formals will be inferred from actual arguments
[kernel:typing:no-proto] /home/fmarques/sbugs/projects/alunos/iaed_p1/228/final.c:115: 
  Calling function add_order that is declared without prototype.
  Its formals will be inferred from actual arguments
[kernel:typing:no-proto] /home/fmarques/sbugs/projects/alunos/iaed_p1/228/final.c:120: 
  Calling function item_to_order that is declared without prototype.
  Its formals will be inferred from actual arguments
[kernel:typing:no-proto] /home/fmarques/sbugs/projects/alunos/iaed_p1/228/final.c:125: 
  Calling function remove_stock that is declared without prototype.
  Its formals will be inferred from actual arguments
[kernel:typing:no-proto] /home/fmarques/sbugs/projects/alunos/iaed_p1/228/final.c:130: 
  Calling function remove_item_from_order that is declared without prototype.
  Its formals will be inferred from actual arguments
[kernel:typing:no-proto] /home/fmarques/sbugs/projects/alunos/iaed_p1/228/final.c:135: 
  Calling function order_cost that is declared without prototype.
  Its formals will be inferred from actual arguments
[kernel:typing:no-proto] /home/fmarques/sbugs/projects/alunos/iaed_p1/228/final.c:140: 
  Calling function change_price that is declared without prototype.
  Its formals will be inferred from actual arguments
[kernel:typing:no-proto] /home/fmarques/sbugs/projects/alunos/iaed_p1/228/final.c:145: 
  Calling function list_items_desc_amount_in_order that is declared without prototype.
  Its formals will be inferred from actual arguments
[kernel:typing:no-proto] /home/fmarques/sbugs/projects/alunos/iaed_p1/228/final.c:150: 
  Calling function most_item_occ_order that is declared without prototype.
  Its formals will be inferred from actual arguments
[kernel:typing:no-proto] /home/fmarques/sbugs/projects/alunos/iaed_p1/228/final.c:202: 
  Calling function is_item that is declared without prototype.
  Its formals will be inferred from actual arguments
[kernel:typing:no-proto] /home/fmarques/sbugs/projects/alunos/iaed_p1/228/final.c:218: 
  Calling function sort that is declared without prototype.
  Its formals will be inferred from actual arguments
[kernel:typing:no-proto] /home/fmarques/sbugs/projects/alunos/iaed_p1/228/final.c:293: 
  Calling function is_order that is declared without prototype.
  Its formals will be inferred from actual arguments
[kernel:typing:no-proto] /home/fmarques/sbugs/projects/alunos/iaed_p1/228/final.c:303: 
  Calling function no_stock that is declared without prototype.
  Its formals will be inferred from actual arguments
[kernel:typing:no-proto] /home/fmarques/sbugs/projects/alunos/iaed_p1/228/final.c:313: 
  Calling function item_to_order_aux that is declared without prototype.
  Its formals will be inferred from actual arguments
[kernel:typing:no-proto] /home/fmarques/sbugs/projects/alunos/iaed_p1/228/final.c:308: 
  Calling function is_overweight that is declared without prototype.
  Its formals will be inferred from actual arguments
[eva] Analyzing a complete application starting at main
[eva] Computing initial state
[eva] Initial state computed
[eva:initial-state] Values of globals at initialization
  items_array[0..9999] ∈ {0}
  orders_array[0..499] ∈ {0}
  aux_item_array[0..9998] ∈ {0}
  item_pos ∈ {0}
  orders_pos ∈ {0}
  args[0..197] ∈ {0}
  item_id_pos ∈ {0}
  order_id_pos ∈ {0}
[eva] using specification for function fgets
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/228/final.c:75: 
  function fgets: precondition 'valid_stream' got status unknown.
[eva] using specification for function fflush
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/228/final.c:79: 
  accessing uninitialized left-value. assert \initialized(&command[i]);
[eva] /home/fmarques/sbugs/projects/alunos/iaed_p1/228/final.c:79: 
  starting to merge loop iterations
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/228/final.c:81: 
  accessing uninitialized left-value. assert \initialized(&command[i]);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/228/final.c:85: 
  accessing uninitialized left-value. assert \initialized((char *)command);
[eva] using specification for function sscanf_va_1
[eva] using specification for function strcpy
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/228/final.c:189: 
  function strcpy: precondition 'valid_string_src' got status unknown.
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/228/final.c:189: 
  function strcpy: precondition 'room_string' got status unknown.
[eva] FRAMAC_SHARE/libc/string.h:373: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function strcmp
[eva] using specification for function printf_va_1
[eva] using specification for function sscanf_va_2
[eva] using specification for function printf_va_2
[eva] using specification for function printf_va_3
[eva] using specification for function sscanf_va_3
[eva] using specification for function printf_va_22
[eva] using specification for function printf_va_5
[eva] using specification for function sscanf_va_4
[eva] using specification for function printf_va_6
[eva] using specification for function sscanf_va_5
[eva] using specification for function printf_va_10
[eva] using specification for function sscanf_va_6
[eva] using specification for function printf_va_12
[eva] using specification for function sscanf_va_7
[eva] using specification for function printf_va_14
[eva] using specification for function sscanf_va_8
[eva] using specification for function printf_va_16
[eva] using specification for function sscanf_va_9
[eva] using specification for function printf_va_17
[eva] using specification for function sscanf_va_10
[eva] using specification for function printf_va_20
[eva] /home/fmarques/sbugs/projects/alunos/iaed_p1/228/final.c:335: 
  starting to merge loop iterations
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/228/final.c:208: 
  signed overflow.
  assert -2147483648 ≤ items_array[item_id_pos].stock + amount;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/228/final.c:208: 
  signed overflow.
  assert items_array[item_id_pos].stock + amount ≤ 2147483647;
[eva] using specification for function printf_va_4
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/228/final.c:221: 
  function printf_va_4: precondition valid_read_string(param0) got status unknown.
[eva] /home/fmarques/sbugs/projects/alunos/iaed_p1/228/final.c:220: 
  starting to merge loop iterations
[eva] /home/fmarques/sbugs/projects/alunos/iaed_p1/228/final.c:322: 
  starting to merge loop iterations
[eva] using specification for function printf_va_23
[eva] using specification for function printf_va_7
[eva] using specification for function printf_va_8
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/228/final.c:356: 
  signed overflow.
  assert -2147483648 ≤ tmp * amount;
  (tmp from getItemWeight(items_array[item_id_pos]))
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/228/final.c:356: 
  signed overflow.
  assert tmp * amount ≤ 2147483647;
  (tmp from getItemWeight(items_array[item_id_pos]))
[eva] using specification for function printf_va_9
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/228/final.c:371: 
  signed overflow.
  assert -2147483648 ≤ items_array[item_id_pos].stock - amount;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/228/final.c:371: 
  signed overflow.
  assert items_array[item_id_pos].stock - amount ≤ 2147483647;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/228/final.c:385: 
  signed overflow.
  assert -2147483648 ≤ tmp_0 * amount;
  (tmp_0 from getItemWeight(temp_item))
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/228/final.c:385: 
  signed overflow.
  assert tmp_0 * amount ≤ 2147483647;
  (tmp_0 from getItemWeight(temp_item))
[eva] using specification for function printf_va_11
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/228/final.c:405: 
  signed overflow.
  assert -2147483648 ≤ items_array[item_id_pos].stock - amount;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/228/final.c:405: 
  signed overflow.
  assert items_array[item_id_pos].stock - amount ≤ 2147483647;
[eva] using specification for function printf_va_13
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/228/final.c:437: 
  accessing uninitialized left-value. assert \initialized(&aux_id);
[eva] using specification for function printf_va_15
[eva] /home/fmarques/sbugs/projects/alunos/iaed_p1/228/final.c:483: 
  starting to merge loop iterations
[eva] using specification for function printf_va_18
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/228/final.c:519: 
  accessing uninitialized left-value. assert \initialized(&temp_item_pos);
[eva] /home/fmarques/sbugs/projects/alunos/iaed_p1/228/final.c:536: 
  starting to merge loop iterations
[eva] /home/fmarques/sbugs/projects/alunos/iaed_p1/228/final.c:597: 
  starting to merge loop iterations
[eva:recursion] /home/fmarques/sbugs/projects/alunos/iaed_p1/228/final.c:268: 
  detected recursive call of function sort.
[eva] /home/fmarques/sbugs/projects/alunos/iaed_p1/228/final.c:268: User Error: 
  Recursive call to sort without assigns clause.
  Generating probably incomplete assigns to interpret the call. Try to increase
  the -eva-unroll-recursive-calls parameter or write a correct specification
  for function sort.
[kernel:annot:missing-spec] /home/fmarques/sbugs/projects/alunos/iaed_p1/228/final.c:261: 
  Neither code nor specification for function sort, generating default assigns from the prototype
[eva] using specification for function sort
[eva:recursion] /home/fmarques/sbugs/projects/alunos/iaed_p1/228/final.c:270: 
  detected recursive call of function sort.
[eva] /home/fmarques/sbugs/projects/alunos/iaed_p1/228/final.c:270: 
  Using specification of function sort for recursive calls.
  Analysis of function sort is thus incomplete and its soundness
  relies on the written specification.
[eva] /home/fmarques/sbugs/projects/alunos/iaed_p1/228/final.c:231: 
  starting to merge loop iterations
[eva] /home/fmarques/sbugs/projects/alunos/iaed_p1/228/final.c:229: 
  starting to merge loop iterations
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/228/final.c:235: 
  out of bounds write. assert \valid(array_aux + i);
[kernel] /home/fmarques/sbugs/projects/alunos/iaed_p1/228/final.c:235: 
  too many locations to update in array. Approximating.
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/228/final.c:240: 
  out of bounds write. assert \valid(array_aux + i);
[kernel] /home/fmarques/sbugs/projects/alunos/iaed_p1/228/final.c:240: 
  too many locations to update in array. Approximating.
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/228/final.c:242: 
  out of bounds write. assert \valid(array_aux + i);
[kernel] /home/fmarques/sbugs/projects/alunos/iaed_p1/228/final.c:242: 
  too many locations to update in array. Approximating.
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/228/final.c:246: 
  out of bounds write. assert \valid(array_aux + i);
[kernel] /home/fmarques/sbugs/projects/alunos/iaed_p1/228/final.c:246: 
  too many locations to update in array. Approximating.
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/228/final.c:251: 
  signed overflow. assert i + 1 ≤ 2147483647;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/228/final.c:251: 
  out of bounds write. assert \valid(array_aux + tmp_9);
                       (tmp_9 from i++)
[kernel] /home/fmarques/sbugs/projects/alunos/iaed_p1/228/final.c:251: 
  too many locations to update in array. Approximating.
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/228/final.c:254: 
  signed overflow. assert i + 1 ≤ 2147483647;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/228/final.c:254: 
  out of bounds write. assert \valid(array_aux + tmp_11);
                       (tmp_11 from i++)
[kernel] /home/fmarques/sbugs/projects/alunos/iaed_p1/228/final.c:254: 
  too many locations to update in array. Approximating.
[eva] /home/fmarques/sbugs/projects/alunos/iaed_p1/228/final.c:256: 
  starting to merge loop iterations
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/228/final.c:183: 
  accessing uninitialized left-value. assert \initialized(&item.stock);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/228/final.c:171: 
  accessing uninitialized left-value. assert \initialized(&item.price);
[eva] using specification for function printf_va_24
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/228/final.c:587: 
  function printf_va_24: precondition valid_read_string(param0) got status unknown.
[eva] /home/fmarques/sbugs/projects/alunos/iaed_p1/228/final.c:584: 
  starting to merge loop iterations
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/228/final.c:356: 
  signed overflow.
  assert -2147483648 ≤ (int)(tmp * amount) + tmp_0;
  (tmp from getItemWeight(items_array[item_id_pos]), tmp_0 from
  getOrderWeight(orders_array[order_id_pos]))
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/228/final.c:356: 
  signed overflow.
  assert (int)(tmp * amount) + tmp_0 ≤ 2147483647;
  (tmp from getItemWeight(items_array[item_id_pos]), tmp_0 from
  getOrderWeight(orders_array[order_id_pos]))
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/228/final.c:163: 
  accessing uninitialized left-value. assert \initialized(&item.idp);
[eva] /home/fmarques/sbugs/projects/alunos/iaed_p1/228/final.c:373: 
  starting to merge loop iterations
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/228/final.c:385: 
  signed overflow.
  assert
  -2147483648 ≤ orders_array[order_id_pos].weight + (int)(tmp_0 * amount);
  (tmp_0 from getItemWeight(temp_item))
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/228/final.c:385: 
  signed overflow.
  assert
  orders_array[order_id_pos].weight + (int)(tmp_0 * amount) ≤ 2147483647;
  (tmp_0 from getItemWeight(temp_item))
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/228/final.c:390: 
  accessing uninitialized left-value.
  assert
  \initialized(&orders_array[order_id_pos].item_list[temp_item_pos].stock);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/228/final.c:390: 
  signed overflow.
  assert
  -2147483648 ≤
  orders_array[order_id_pos].item_list[temp_item_pos].stock + amount;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/228/final.c:390: 
  signed overflow.
  assert
  orders_array[order_id_pos].item_list[temp_item_pos].stock + amount ≤
  2147483647;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/228/final.c:175: 
  accessing uninitialized left-value. assert \initialized(&item.weight);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/228/final.c:391: 
  signed overflow.
  assert -2147483648 ≤ tmp_1 * amount;
  (tmp_1 from
  getItemWeight(orders_array[order_id_pos].item_list[temp_item_pos]))
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/228/final.c:391: 
  signed overflow.
  assert tmp_1 * amount ≤ 2147483647;
  (tmp_1 from
  getItemWeight(orders_array[order_id_pos].item_list[temp_item_pos]))
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/228/final.c:391: 
  signed overflow.
  assert
  -2147483648 ≤ orders_array[order_id_pos].weight + (int)(tmp_1 * amount);
  (tmp_1 from
  getItemWeight(orders_array[order_id_pos].item_list[temp_item_pos]))
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/228/final.c:391: 
  signed overflow.
  assert
  orders_array[order_id_pos].weight + (int)(tmp_1 * amount) ≤ 2147483647;
  (tmp_1 from
  getItemWeight(orders_array[order_id_pos].item_list[temp_item_pos]))
[eva] /home/fmarques/sbugs/projects/alunos/iaed_p1/228/final.c:426: 
  starting to merge loop iterations
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/228/final.c:430: 
  accessing uninitialized left-value.
  assert \initialized(&orders_array[order_id_pos].item_list[i].stock);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/228/final.c:431: 
  signed overflow.
  assert -2147483648 ≤ items_array[item_id_pos].stock + amount;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/228/final.c:431: 
  signed overflow.
  assert items_array[item_id_pos].stock + amount ≤ 2147483647;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/228/final.c:461: 
  signed overflow. assert -2147483648 ≤ price * amount;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/228/final.c:461: 
  signed overflow. assert price * amount ≤ 2147483647;
[eva] /home/fmarques/sbugs/projects/alunos/iaed_p1/228/final.c:458: 
  starting to merge loop iterations
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/228/final.c:461: 
  signed overflow. assert -2147483648 ≤ total_cost + (int)(price * amount);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/228/final.c:461: 
  signed overflow. assert total_cost + (int)(price * amount) ≤ 2147483647;
[eva] /home/fmarques/sbugs/projects/alunos/iaed_p1/228/final.c:486: 
  starting to merge loop iterations
[eva] /home/fmarques/sbugs/projects/alunos/iaed_p1/228/final.c:513: 
  starting to merge loop iterations
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/228/final.c:519: 
  accessing uninitialized left-value.
  assert
  \initialized(&orders_array[order_id_pos].item_list[temp_item_pos].stock);
[eva] using specification for function printf_va_19
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/228/final.c:520: 
  function printf_va_19: precondition valid_read_string(param0) got status unknown.
[eva] /home/fmarques/sbugs/projects/alunos/iaed_p1/228/final.c:539: 
  starting to merge loop iterations
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/228/final.c:541: 
  signed overflow.
  assert -2147483648 ≤ item_occ_in_order[i] + tmp_0;
  (tmp_0 from getStock(orders_array[i].item_list[j]))
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/228/final.c:541: 
  signed overflow.
  assert item_occ_in_order[i] + tmp_0 ≤ 2147483647;
  (tmp_0 from getStock(orders_array[i].item_list[j]))
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/228/final.c:560: 
  accessing uninitialized left-value. assert \initialized(&aux_order_id);
[eva] /home/fmarques/sbugs/projects/alunos/iaed_p1/228/final.c:552: 
  starting to merge loop iterations
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/228/final.c:567: 
  accessing uninitialized left-value. assert \initialized(&aux_order_id);
[eva] using specification for function printf_va_21
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/228/final.c:208: 
  accessing uninitialized left-value.
  assert \initialized(&items_array[item_id_pos].stock);
[eva] /home/fmarques/sbugs/projects/alunos/iaed_p1/228/final.c:268: 
  Using specification of function sort for recursive calls.
  Analysis of function sort is thus incomplete and its soundness
  relies on the written specification.
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/228/final.c:347: 
  accessing uninitialized left-value.
  assert \initialized(&items_array[item_id_pos].stock);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/228/final.c:371: 
  accessing uninitialized left-value.
  assert \initialized(&items_array[item_id_pos].stock);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/228/final.c:405: 
  accessing uninitialized left-value.
  assert \initialized(&items_array[item_id_pos].stock);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/228/final.c:431: 
  accessing uninitialized left-value.
  assert \initialized(&items_array[item_id_pos].stock);
[eva] /home/fmarques/sbugs/projects/alunos/iaed_p1/228/final.c:437: 
  starting to merge loop iterations
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/228/final.c:437: 
  signed overflow.
  assert -2147483648 ≤ orders_array[order_id_pos].next_pos - 1;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/228/final.c:439: 
  signed overflow.
  assert -2147483648 ≤ orders_array[order_id_pos].next_pos - 1;
[kernel] /home/fmarques/sbugs/projects/alunos/iaed_p1/228/final.c:194: 
  too many locations to update in array. Approximating.
[kernel] /home/fmarques/sbugs/projects/alunos/iaed_p1/228/final.c:208: 
  more than 200(10000) locations to update in array. Approximating.
[kernel] /home/fmarques/sbugs/projects/alunos/iaed_p1/228/final.c:208: 
  more than 200(10000) elements to enumerate. Approximating.
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/228/final.c:585: 
  accessing out of bounds index. assert i < 10000;
[kernel] /home/fmarques/sbugs/projects/alunos/iaed_p1/228/final.c:582: 
  more than 200(500) elements to enumerate. Approximating.
[kernel] /home/fmarques/sbugs/projects/alunos/iaed_p1/228/final.c:285: 
  too many locations to update in array. Approximating.
[kernel] /home/fmarques/sbugs/projects/alunos/iaed_p1/228/final.c:371: 
  more than 200(10000) locations to update in array. Approximating.
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/228/final.c:374: 
  accessing out of bounds index. assert i < 10000;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/228/final.c:384: 
  accessing out of bounds index. assert 0 ≤ next_pos;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/228/final.c:384: 
  accessing out of bounds index. assert next_pos < 10000;
[kernel] /home/fmarques/sbugs/projects/alunos/iaed_p1/228/final.c:384: 
  too many locations to update in array. Approximating.
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/228/final.c:385: 
  accessing uninitialized left-value.
  assert \initialized(&orders_array[order_id_pos].weight);
[kernel] /home/fmarques/sbugs/projects/alunos/iaed_p1/228/final.c:385: 
  more than 200(500) locations to update in array. Approximating.
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/228/final.c:386: 
  accessing uninitialized left-value.
  assert \initialized(&orders_array[order_id_pos].next_pos);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/228/final.c:386: 
  signed overflow.
  assert orders_array[order_id_pos].next_pos + 1 ≤ 2147483647;
[kernel] /home/fmarques/sbugs/projects/alunos/iaed_p1/228/final.c:386: 
  more than 200(500) locations to update in array. Approximating.
[kernel] /home/fmarques/sbugs/projects/alunos/iaed_p1/228/final.c:391: 
  more than 200(500) locations to update in array. Approximating.
[kernel] /home/fmarques/sbugs/projects/alunos/iaed_p1/228/final.c:391: 
  more than 200(500) elements to enumerate. Approximating.
[kernel] /home/fmarques/sbugs/projects/alunos/iaed_p1/228/final.c:405: 
  more than 200(10000) locations to update in array. Approximating.
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/228/final.c:427: 
  accessing out of bounds index. assert i < 10000;
[kernel] /home/fmarques/sbugs/projects/alunos/iaed_p1/228/final.c:431: 
  more than 200(10000) locations to update in array. Approximating.
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/228/final.c:438: 
  accessing out of bounds index. assert (int)(i + 1) < 10000;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/228/final.c:438: 
  partially overlapping lvalue assignment.
  assert
  &orders_array[order_id_pos].item_list[i] ≡
  &orders_array[order_id_pos].item_list[(int)(i + 1)] ∨
  \separated(
    &orders_array[order_id_pos].item_list[i],
    &orders_array[order_id_pos].item_list[(int)(i + 1)]
    );
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/228/final.c:439: 
  accessing uninitialized left-value.
  assert \initialized(&orders_array[order_id_pos].next_pos);
[kernel] /home/fmarques/sbugs/projects/alunos/iaed_p1/228/final.c:439: 
  more than 200(499) locations to update in array. Approximating.
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/228/final.c:437: 
  accessing uninitialized left-value.
  assert \initialized(&orders_array[order_id_pos].next_pos);
[kernel] /home/fmarques/sbugs/projects/alunos/iaed_p1/228/final.c:439: 
  more than 200(499) elements to enumerate. Approximating.
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/228/final.c:459: 
  accessing out of bounds index. assert i < 10000;
[kernel] /home/fmarques/sbugs/projects/alunos/iaed_p1/228/final.c:479: 
  more than 200(10000) locations to update in array. Approximating.
[kernel] /home/fmarques/sbugs/projects/alunos/iaed_p1/228/final.c:488: 
  more than 200(10000) locations to update in array. Approximating.
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/228/final.c:487: 
  accessing out of bounds index. assert j < 10000;
[kernel] /home/fmarques/sbugs/projects/alunos/iaed_p1/228/final.c:479: 
  more than 200(10000) elements to enumerate. Approximating.
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/228/final.c:514: 
  accessing out of bounds index. assert i < 10000;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/228/final.c:540: 
  accessing out of bounds index. assert j < 10000;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/228/final.c:194: 
  accessing out of bounds index. assert item_pos < 10000;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/228/final.c:257: 
  out of bounds read. assert \valid_read(array_aux + i);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/228/final.c:167: 
  accessing uninitialized left-value. assert \initialized(&order.ide);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/228/final.c:582: 
  accessing uninitialized left-value.
  assert \initialized(&orders_array[order_id_pos].next_pos);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/228/final.c:285: 
  accessing out of bounds index. assert orders_pos < 500;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/228/final.c:179: 
  accessing uninitialized left-value. assert \initialized(&order.weight);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/228/final.c:369: 
  accessing uninitialized left-value.
  assert \initialized(&orders_array[order_id_pos].next_pos);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/228/final.c:373: 
  accessing uninitialized left-value.
  assert \initialized(&orders_array[order_id_pos].next_pos);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/228/final.c:391: 
  accessing uninitialized left-value.
  assert \initialized(&orders_array[order_id_pos].weight);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/228/final.c:424: 
  accessing uninitialized left-value.
  assert \initialized(&orders_array[order_id_pos].next_pos);
[kernel] /home/fmarques/sbugs/projects/alunos/iaed_p1/228/final.c:439: 
  more than 200(500) locations to update in array. Approximating.
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/228/final.c:457: 
  accessing uninitialized left-value.
  assert \initialized(&orders_array[order_id_pos].next_pos);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/228/final.c:484: 
  accessing uninitialized left-value.
  assert \initialized(&orders_array[i].next_pos);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/228/final.c:512: 
  accessing uninitialized left-value.
  assert \initialized(&orders_array[order_id_pos].next_pos);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/228/final.c:537: 
  accessing uninitialized left-value.
  assert \initialized(&orders_array[i].next_pos);
[eva] done for function main
[scope:rm_asserts] removing 2 assertion(s)
[eva] ====== VALUES COMPUTED ======
[eva:final-states] Values at end of function getItemId:
  __retres ∈ [--..--]
[eva:final-states] Values at end of function getItemWeight:
  __retres ∈ [--..--]
[eva:final-states] Values at end of function getOrderId:
  __retres ∈ [--..--]
[eva:final-states] Values at end of function getOrderWeight:
  __retres ∈ [--..--]
[eva:final-states] Values at end of function getPrice:
  __retres ∈ [--..--]
[eva:final-states] Values at end of function getStock:
  __retres ∈ [--..--]
[eva:final-states] Values at end of function is_item:
  item_id_pos ∈ [0..9999]
  i ∈ [0..10000]
  __retres ∈ {0; 1}
[eva:final-states] Values at end of function is_order:
  order_id_pos ∈ [0..499]
  i ∈ [0..500]
  __retres ∈ {0; 1}
[eva:final-states] Values at end of function is_overweight:
  __retres ∈ {0; 1}
[eva:final-states] Values at end of function item_to_order_aux:
  items_array[0..9999] ∈ [--..--] or UNINITIALIZED
  orders_array[0..499] ∈ [--..--] or UNINITIALIZED
  temp_item_pos ∈ [0..9999]
  i ∈ [0..10000]
  is_in_order ∈ {0; 1}
  temp_item ∈ [--..--] or UNINITIALIZED
  next_pos ∈ [--..--]
[eva:final-states] Values at end of function merging:
  items_array[0..9999] ∈ [--..--] or UNINITIALIZED
  aux_item_array[0..9998] ∈ [--..--] or UNINITIALIZED
  l1 ∈ [1..2147483647]
  l2 ∈ [2..2147483647]
  i ∈ [2..2147483647]
  j ∈ [0..2147483647] or UNINITIALIZED
[eva:final-states] Values at end of function no_stock:
  item_id_pos ∈ [0..9999]
  __retres ∈ {0; 1}
[eva:final-states] Values at end of function order_cost:
  order_id_pos ∈ [0..499]
  total_cost ∈ [--..--]
  amount ∈ [--..--] or UNINITIALIZED
  price ∈ [--..--] or UNINITIALIZED
  len ∈ [-2147483648..10000] or UNINITIALIZED
  i ∈ [0..10000] or UNINITIALIZED
  __retres ∈ {0; 1}
  S___fc_stdout[0..1] ∈ [--..--]
[eva:final-states] Values at end of function change_price:
  items_array[0..9999] ∈ [--..--] or UNINITIALIZED
  orders_array[0..499] ∈ [--..--] or UNINITIALIZED
  item_id_pos ∈ [0..9999]
  i ∈ [0..500] or UNINITIALIZED
  j ∈ [0..10000] or UNINITIALIZED
  len ∈ [-2147483648..10000] or UNINITIALIZED
  __retres ∈ {0; 1}
  S___fc_stdout[0..1] ∈ [--..--]
[eva:final-states] Values at end of function list_items_desc_amount_in_order:
  item_id_pos ∈ [0..9999]
  order_id_pos ∈ [0..499]
  amount ∈ [--..--] or UNINITIALIZED
  temp_item_pos ∈ [0..9999] or UNINITIALIZED
  len ∈ [-2147483648..10000] or UNINITIALIZED
  i ∈ [0..10000] or UNINITIALIZED
  __retres ∈ {0; 1}
  S___fc_stdout[0..1] ∈ [--..--]
[eva:final-states] Values at end of function add_stock:
  items_array[0..9999] ∈ [--..--] or UNINITIALIZED
  item_id_pos ∈ [0..9999]
  __retres ∈ {0; 1}
  S___fc_stdout[0..1] ∈ [--..--]
[eva:final-states] Values at end of function most_item_occ_order:
  item_id_pos ∈ [0..9999]
  i ∈ [0..500] or UNINITIALIZED
  j ∈ [0..10000] or UNINITIALIZED
  len ∈ [-2147483648..10000] or UNINITIALIZED
  is_in_order ∈ {0; 1}
  max_stock ∈ [--..--]
  item_occ_in_order[0..499] ∈ [--..--]
  aux_order_id ∈ [0..499] or UNINITIALIZED
  __retres ∈ {0; 1}
  S___fc_stdout[0..1] ∈ [--..--]
[eva:final-states] Values at end of function list_items_in_order:
  order_id_pos ∈ [0..499]
  amount ∈ [--..--] or UNINITIALIZED
  price ∈ [--..--] or UNINITIALIZED
  len ∈ [-2147483648..10000] or UNINITIALIZED
  i ∈ [0..10000] or UNINITIALIZED
  __retres ∈ {0; 1}
  S___fc_stdout[0..1] ∈ [--..--]
[eva:final-states] Values at end of function add_order:
  orders_array[0..499] ∈ [--..--] or UNINITIALIZED
  orders_pos ∈ [1..500]
  order.ide ∈ [0..500]
       {.weight; .next_pos} ∈ {0}
       .item_list[0..9999] ∈ UNINITIALIZED
  S___fc_stdout[0..1] ∈ [--..--]
[eva:final-states] Values at end of function item_to_order:
  items_array[0..9999] ∈ [--..--] or UNINITIALIZED
  orders_array[0..499] ∈ [--..--] or UNINITIALIZED
  item_id_pos ∈ [0..9999]
  order_id_pos ∈ [0..499]
  __retres ∈ {0; 1}
  S___fc_stdout[0..1] ∈ [--..--]
[eva:final-states] Values at end of function remove_item_from_order:
  items_array[0..9999] ∈ [--..--] or UNINITIALIZED
  orders_array[0..499] ∈ [--..--] or UNINITIALIZED
  item_id_pos ∈ [0..9999]
  order_id_pos ∈ [0..499]
  i ∈ [0..9999] or UNINITIALIZED
  id ∈ [--..--] or UNINITIALIZED
  len ∈ [--..--] or UNINITIALIZED
  amount ∈ [--..--] or UNINITIALIZED
  aux_id ∈ [0..9999] or UNINITIALIZED
  __retres ∈ {0; 1}
  S___fc_stdout[0..1] ∈ [--..--]
[eva:final-states] Values at end of function remove_stock:
  items_array[0..9999] ∈ [--..--] or UNINITIALIZED
  item_id_pos ∈ [0..9999]
  __retres ∈ {0; 1}
  S___fc_stdout[0..1] ∈ [--..--]
[eva:final-states] Values at end of function add_item:
  items_array[0..9999] ∈ [--..--] or UNINITIALIZED
  item_pos ∈ [1..10000]
  item.idp ∈ [0..10000]
      {.price; .weight; .stock} ∈ [--..--]
      .description[0..63] ∈ [--..--] or UNINITIALIZED
  S___fc_stdout[0..1] ∈ [--..--]
[eva:final-states] Values at end of function list_items:
  items_array[0..9999] ∈ [--..--] or UNINITIALIZED
  aux_item_array[0..9998] ∈ [--..--] or UNINITIALIZED
  i ∈ [0..10000]
  S___fc_stdout[0..1] ∈ [--..--]
[eva:final-states] Values at end of function exe_command:
  __fc_fopen[0..15] ∈ {0}
  items_array[0..9999] ∈ [--..--] or UNINITIALIZED
  orders_array[0..499] ∈ [--..--] or UNINITIALIZED
  aux_item_array[0..9998] ∈ [--..--] or UNINITIALIZED
  item_pos ∈ [0..10000]
  orders_pos ∈ [0..500]
  item_id_pos ∈ [0..9999]
  order_id_pos ∈ [0..499]
  description[0] ∈ [--..--] or UNINITIALIZED
             [1..63] ∈ UNINITIALIZED
  price ∈ [--..--] or UNINITIALIZED
  weight ∈ [--..--] or UNINITIALIZED
  amount ∈ [--..--] or UNINITIALIZED
  ide ∈ [--..--] or UNINITIALIZED
  idp ∈ [--..--] or UNINITIALIZED
  __retres ∈ {0; 1}
  S___fc_stdin[0..1] ∈ [--..--]
  S___fc_stdout[0..1] ∈ [--..--]
[eva:final-states] Values at end of function get_command:
  __fc_fopen[0..15] ∈ {0}
  items_array[0..9999] ∈ [--..--] or UNINITIALIZED
  orders_array[0..499] ∈ [--..--] or UNINITIALIZED
  aux_item_array[0..9998] ∈ [--..--] or UNINITIALIZED
  item_pos ∈ [0..10000]
  orders_pos ∈ [0..500]
  args[0..196] ∈ [--..--]
      [197] ∈ {0}
  item_id_pos ∈ [0..9999]
  order_id_pos ∈ [0..499]
  command[0] ∈ [--..--]
         [1..199] ∈ [--..--] or UNINITIALIZED
  i ∈ [0..199]
  S___fc_stdin[0..1] ∈ [--..--]
  S___fc_stdout[0..1] ∈ [--..--]
[eva:final-states] Values at end of function main:
  __fc_fopen[0..15] ∈ {0}
  items_array[0..9999] ∈ [--..--] or UNINITIALIZED
  orders_array[0..499] ∈ [--..--] or UNINITIALIZED
  aux_item_array[0..9998] ∈ [--..--] or UNINITIALIZED
  item_pos ∈ [0..10000]
  orders_pos ∈ [0..500]
  args[0..196] ∈ [--..--]
      [197] ∈ {0}
  item_id_pos ∈ [0..9999]
  order_id_pos ∈ [0..499]
  exe ∈ {0}
  __retres ∈ {0}
  S___fc_stdin[0..1] ∈ [--..--]
  S___fc_stdout[0..1] ∈ [--..--]
[eva:final-states] Values at end of function sort:
  items_array[0..9999] ∈ [--..--] or UNINITIALIZED
  aux_item_array[0..9998] ∈ [--..--] or UNINITIALIZED
  mid ∈ [0..4999] or UNINITIALIZED
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  28 functions analyzed (out of 31): 90% coverage.
  In these functions, 529 statements reached (out of 530): 99% coverage.
  ----------------------------------------------------------------------------
  Some errors and warnings have been raised during the analysis:
    by the Eva analyzer:      1 error    0 warnings
    by the Frama-C kernel:    0 errors    0 warnings
  ----------------------------------------------------------------------------
  87 alarms generated by the analysis:
      34 accesses to uninitialized left-values
      33 integer overflows
      12 accesses out of bounds index
       7 invalid memory accesses
       1 other
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    68 valid     6 unknown     0 invalid     74 total
  91% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[eva] User Error: Deferred error message was emitted during execution. See above messages for more information.
[kernel] Plug-in eva aborted: invalid user input.
