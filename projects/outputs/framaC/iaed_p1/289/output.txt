[report] Monitoring events
[report] Loading '/home/fmarques/sbugs/projects/configs/frama-c_report_rules.json'
[kernel] Parsing /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c (with preprocessing)
[kernel:parser:decimal-float] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:10: 
  Floating-point constant 0.10 is not represented exactly. Will use 0x1.999999999999ap-4.
[kernel:parser:decimal-float] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:17: 
  Floating-point constant 0.10 is not represented exactly. Will use 0x1.999999999999ap-4.
[kernel:parser:decimal-float] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:24: 
  Floating-point constant 0.10 is not represented exactly. Will use 0x1.999999999999ap-4.
[eva] Analyzing a complete application starting at main
[eva] Computing initial state
[eva] Initial state computed
[eva:initial-state] Values of globals at initialization
  
[eva] using specification for function getchar
[eva] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:174: 
  starting to merge loop iterations
[eva] using specification for function scanf_va_1
[eva] using specification for function printf_va_1
[eva] using specification for function scanf_va_2
[eva] using specification for function printf_va_4
[eva] using specification for function scanf_va_3
[eva] using specification for function printf_va_5
[eva] using specification for function printf_va_2
[eva] using specification for function scanf_va_4
[eva] using specification for function printf_va_7
[eva] using specification for function printf_va_8
[eva] using specification for function scanf_va_5
[eva] using specification for function printf_va_11
[eva] using specification for function printf_va_9
[eva] using specification for function scanf_va_6
[eva] using specification for function printf_va_14
[eva] using specification for function scanf_va_9
[eva] using specification for function printf_va_22
[eva] using specification for function scanf_va_10
[eva] using specification for function printf_va_26
[eva] using specification for function scanf_va_8
[eva] using specification for function printf_va_20
[eva] using specification for function scanf_va_7
[eva] using specification for function printf_va_18
[eva] using specification for function printf_va_28
[eva] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:488: 
  starting to merge loop iterations
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:225: 
  accessing uninitialized left-value.
  assert \initialized(&(products + id)->stock);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:225: 
  signed overflow. assert -2147483648 ≤ (products + id)->stock + qtd;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:225: 
  signed overflow. assert (products + id)->stock + qtd ≤ 2147483647;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:243: 
  accessing uninitialized left-value.
  assert \initialized(&(products + id)->stock);
[eva] using specification for function printf_va_6
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:250: 
  signed overflow. assert -2147483648 ≤ (products + id)->stock - qtd;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:250: 
  signed overflow. assert (products + id)->stock - qtd ≤ 2147483647;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:204: 
  accessing uninitialized left-value.
  assert \initialized(&(products + i)->stock);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:204: 
  accessing uninitialized left-value.
  assert \initialized(&(products + i)->price);
[eva] using specification for function printf_va_3
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:204: 
  function printf_va_3: precondition valid_read_string(param0) got status unknown.
[eva] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:202: 
  starting to merge loop iterations
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:304: 
  accessing uninitialized left-value.
  assert \initialized(&(orders + id)->numProducts);
[eva] using specification for function printf_va_12
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:288: 
  accessing uninitialized left-value.
  assert \initialized(&(orders + i)->weight);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:288: 
  accessing uninitialized left-value. assert \initialized(&(orders + i)->id);
[eva] using specification for function printf_va_10
[eva] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:286: 
  starting to merge loop iterations
[eva] using specification for function printf_va_15
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:330: 
  accessing uninitialized left-value.
  assert \initialized(&(products + idProd)->stock);
[eva] using specification for function printf_va_16
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:335: 
  accessing uninitialized left-value.
  assert \initialized(&(orders + idOrder)->weight);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:335: 
  accessing uninitialized left-value.
  assert \initialized(&(products + idProd)->weight);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:335: 
  signed overflow. assert -2147483648 ≤ (products + idProd)->weight * qtd;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:335: 
  signed overflow. assert (products + idProd)->weight * qtd ≤ 2147483647;
[eva] using specification for function printf_va_17
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:340: 
  accessing uninitialized left-value.
  assert \initialized(&(orders + idOrder)->numProducts);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:353: 
  signed overflow. assert -2147483648 ≤ (products + idProd)->weight * qtd;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:353: 
  signed overflow. assert (products + idProd)->weight * qtd ≤ 2147483647;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:359: 
  signed overflow. assert -2147483648 ≤ (products + idProd)->stock - qtd;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:359: 
  signed overflow. assert (products + idProd)->stock - qtd ≤ 2147483647;
[eva] using specification for function printf_va_23
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:436: 
  accessing uninitialized left-value.
  assert \initialized(&(orders + idOrder)->numProducts);
[eva] using specification for function printf_va_25
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:445: 
  function printf_va_25: precondition valid_read_string(param0) got status unknown.
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:464: 
  accessing uninitialized left-value.
  assert \initialized(&(orders + idOrder)->numProducts);
[eva] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:463: 
  starting to merge loop iterations
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:415: 
  accessing uninitialized left-value.
  assert \initialized(&(orders + idOrder)->numProducts);
[eva] using specification for function printf_va_21
[eva] using specification for function printf_va_19
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:382: 
  accessing uninitialized left-value.
  assert \initialized(&(orders + idOrder)->numProducts);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:250: 
  accessing uninitialized left-value.
  assert \initialized(&(products + id)->stock);
[eva:recursion] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:121: 
  detected recursive call of function orderProductsMS.
[eva] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:121: User Error: 
  Recursive call to orderProductsMS without assigns clause.
  Generating probably incomplete assigns to interpret the call. Try to increase
  the -eva-unroll-recursive-calls parameter or write a correct specification
  for function orderProductsMS.
[kernel:annot:missing-spec] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:114: 
  Neither code nor specification for function orderProductsMS, generating default assigns from the prototype
[eva] using specification for function orderProductsMS
[eva:recursion] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:122: 
  detected recursive call of function orderProductsMS.
[eva] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:122: 
  Using specification of function orderProductsMS for recursive calls.
  Analysis of function orderProductsMS is thus incomplete and its soundness
  relies on the written specification.
[eva] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:69: 
  starting to merge loop iterations
[eva] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:74: 
  starting to merge loop iterations
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:86: 
  accessing uninitialized left-value. assert \initialized(&ord1[i].price);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:86: 
  accessing uninitialized left-value. assert \initialized(&ord2[j].price);
[eva] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:84: 
  starting to merge loop iterations
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:88: 
  out of bounds write. assert \valid(products + k);
[kernel] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:88: 
  too many locations to update in array. Approximating.
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:93: 
  out of bounds write. assert \valid(products + k);
[kernel] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:93: 
  too many locations to update in array. Approximating.
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:96: 
  signed overflow. assert k + 1 ≤ 2147483647;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:101: 
  out of bounds write. assert \valid(products + k);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:108: 
  out of bounds write. assert \valid(products + k);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:306: 
  accessing uninitialized left-value.
  assert \initialized(&(orders + id)->numProducts);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:308: 
  accessing uninitialized left-value.
  assert \initialized(&(orders + id)->products[i].quantity);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:308: 
  accessing uninitialized left-value.
  assert \initialized(&(orders + id)->products[i].product);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:308: 
  accessing uninitialized left-value.
  assert \initialized(&((orders + id)->products[i].product)->price);
[eva] using specification for function printf_va_13
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:308: 
  function printf_va_13: precondition valid_read_string(param0) got status unknown.
[eva] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:306: 
  starting to merge loop iterations
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:335: 
  signed overflow.
  assert
  -2147483648 ≤
  (orders + idOrder)->weight + (int)((products + idProd)->weight * qtd);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:335: 
  signed overflow.
  assert
  (orders + idOrder)->weight + (int)((products + idProd)->weight * qtd) ≤
  2147483647;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:341: 
  accessing uninitialized left-value.
  assert \initialized(&(orders + idOrder)->products[i].product);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:341: 
  accessing uninitialized left-value.
  assert \initialized(&((orders + idOrder)->products[i].product)->id);
[eva] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:340: 
  starting to merge loop iterations
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:348: 
  accessing uninitialized left-value.
  assert \initialized(&(orders + idOrder)->products[orderProdId].quantity);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:348: 
  signed overflow.
  assert
  -2147483648 ≤ (orders + idOrder)->products[orderProdId].quantity + qtd;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:348: 
  signed overflow.
  assert
  (orders + idOrder)->products[orderProdId].quantity + qtd ≤ 2147483647;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:349: 
  accessing uninitialized left-value.
  assert \initialized(&(orders + idOrder)->weight);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:349: 
  accessing uninitialized left-value.
  assert \initialized(&(products + idProd)->weight);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:349: 
  signed overflow. assert -2147483648 ≤ (products + idProd)->weight * qtd;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:349: 
  signed overflow. assert (products + idProd)->weight * qtd ≤ 2147483647;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:349: 
  signed overflow.
  assert
  -2147483648 ≤
  (orders + idOrder)->weight + (int)((products + idProd)->weight * qtd);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:349: 
  signed overflow.
  assert
  (orders + idOrder)->weight + (int)((products + idProd)->weight * qtd) ≤
  2147483647;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:353: 
  accessing uninitialized left-value.
  assert \initialized(&(orders + idOrder)->weight);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:353: 
  accessing uninitialized left-value.
  assert \initialized(&(products + idProd)->weight);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:353: 
  signed overflow.
  assert
  -2147483648 ≤
  (orders + idOrder)->weight + (int)((products + idProd)->weight * qtd);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:353: 
  signed overflow.
  assert
  (orders + idOrder)->weight + (int)((products + idProd)->weight * qtd) ≤
  2147483647;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:354: 
  accessing uninitialized left-value.
  assert \initialized(&(orders + idOrder)->numProducts);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:355: 
  accessing uninitialized left-value.
  assert \initialized(&(orders + idOrder)->numProducts);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:359: 
  accessing uninitialized left-value.
  assert \initialized(&(products + idProd)->stock);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:437: 
  accessing uninitialized left-value.
  assert \initialized(&(orders + idOrder)->products[i].product);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:437: 
  accessing uninitialized left-value.
  assert \initialized(&((orders + idOrder)->products[i].product)->id);
[eva] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:436: 
  starting to merge loop iterations
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:438: 
  accessing uninitialized left-value.
  assert \initialized(&(orders + idOrder)->products[i].quantity);
[eva] using specification for function printf_va_24
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:438: 
  function printf_va_24: precondition valid_read_string(param0) got status unknown.
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:444: 
  accessing uninitialized left-value.
  assert \initialized(&(orders + idOrder)->numProducts);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:465: 
  accessing uninitialized left-value.
  assert \initialized(&(orders + idOrder)->products[i].product);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:465: 
  accessing uninitialized left-value.
  assert \initialized(&((orders + idOrder)->products[i].product)->id);
[eva] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:464: 
  starting to merge loop iterations
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:466: 
  accessing uninitialized left-value.
  assert \initialized(&(orders + idOrder)->products[i].quantity);
[eva] using specification for function printf_va_27
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:416: 
  accessing uninitialized left-value.
  assert \initialized(&(orders + idOrder)->products[i].product);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:416: 
  accessing uninitialized left-value.
  assert \initialized(&(orders + idOrder)->products[i].quantity);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:416: 
  accessing uninitialized left-value.
  assert \initialized(&((orders + idOrder)->products[i].product)->price);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:416: 
  signed overflow.
  assert
  -2147483648 ≤
  ((orders + idOrder)->products[i].product)->price *
  (orders + idOrder)->products[i].quantity;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:416: 
  signed overflow.
  assert
  ((orders + idOrder)->products[i].product)->price *
  (orders + idOrder)->products[i].quantity ≤ 2147483647;
[eva] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:415: 
  starting to merge loop iterations
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:416: 
  signed overflow.
  assert
  -2147483648 ≤
  orderPrice +
  (int)(((orders + idOrder)->products[i].product)->price *
        (orders + idOrder)->products[i].quantity);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:416: 
  signed overflow.
  assert
  orderPrice +
  (int)(((orders + idOrder)->products[i].product)->price *
        (orders + idOrder)->products[i].quantity)
  ≤ 2147483647;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:383: 
  accessing uninitialized left-value.
  assert \initialized(&(orders + idOrder)->products[i].product);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:383: 
  accessing uninitialized left-value.
  assert \initialized(&((orders + idOrder)->products[i].product)->id);
[eva] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:382: 
  starting to merge loop iterations
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:389: 
  accessing uninitialized left-value.
  assert \initialized(&(orders + idOrder)->products[orderProdId].product);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:390: 
  accessing uninitialized left-value. assert \initialized(&p->stock);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:390: 
  accessing uninitialized left-value.
  assert \initialized(&(orders + idOrder)->products[orderProdId].quantity);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:390: 
  signed overflow.
  assert
  -2147483648 ≤ p->stock + (orders + idOrder)->products[orderProdId].quantity;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:390: 
  signed overflow.
  assert
  p->stock + (orders + idOrder)->products[orderProdId].quantity ≤ 2147483647;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:392: 
  accessing uninitialized left-value. assert \initialized(&p->weight);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:392: 
  accessing uninitialized left-value.
  assert \initialized(&(orders + idOrder)->weight);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:392: 
  signed overflow.
  assert
  -2147483648 ≤
  p->weight * (orders + idOrder)->products[orderProdId].quantity;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:392: 
  signed overflow.
  assert
  p->weight * (orders + idOrder)->products[orderProdId].quantity ≤ 2147483647;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:392: 
  signed overflow.
  assert
  -2147483648 ≤
  (orders + idOrder)->weight -
  (int)(p->weight * (orders + idOrder)->products[orderProdId].quantity);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:392: 
  signed overflow.
  assert
  (orders + idOrder)->weight -
  (int)(p->weight * (orders + idOrder)->products[orderProdId].quantity) ≤
  2147483647;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:394: 
  accessing uninitialized left-value.
  assert \initialized(&(orders + idOrder)->numProducts);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:396: 
  accessing out of bounds index. assert 0 ≤ (orders + idOrder)->numProducts;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:493: 
  signed overflow. assert numProd + 1 ≤ 2147483647;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:185: 
  out of bounds write. assert \valid(&(products + id)->id);
[kernel] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:185: 
  more than 200(10000) locations to update in array. Approximating.
[kernel] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:176: 
  more than 200(10000) locations to update in array. Approximating.
[kernel] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:188: 
  more than 200(10000) elements to enumerate. Approximating.
[kernel] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:188: 
  more than 200(10000) locations to update in array. Approximating.
[kernel] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:185: 
  more than 200(10000) elements to enumerate. Approximating.
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:225: 
  out of bounds write. assert \valid(&(products + id)->stock);
[kernel] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:225: 
  more than 200(10000) locations to update in array. Approximating.
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:243: 
  out of bounds read. assert \valid_read(&(products + id)->stock);
[kernel] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:250: 
  more than 200(10000) locations to update in array. Approximating.
[eva] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:121: 
  Using specification of function orderProductsMS for recursive calls.
  Analysis of function orderProductsMS is thus incomplete and its soundness
  relies on the written specification.
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:71: 
  accessing out of bounds index. assert i < (int)(10000 / 2);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:76: 
  out of bounds read.
  assert \valid_read(products + (int)((int)(middle + 1) + i));
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:76: 
  accessing out of bounds index. assert i < (int)(10000 / 2);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:91: 
  accessing uninitialized left-value. assert \initialized(&ord1[i].price);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:91: 
  accessing uninitialized left-value. assert \initialized(&ord2[j].price);
[kernel] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:86: 
  more than 200(5000) elements to enumerate. Approximating.
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:204: 
  out of bounds read. assert \valid_read(&(products + i)->stock);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:268: 
  out of bounds write. assert \valid(&(products + id)->price);
[kernel] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:268: 
  more than 200(10000) locations to update in array. Approximating.
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:508: 
  signed overflow. assert numOrder + 1 ≤ 2147483647;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:275: 
  out of bounds write. assert \valid(&(orders + id)->id);
[kernel] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:275: 
  more than 200(500) locations to update in array. Approximating.
[kernel] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:276: 
  more than 200(500) locations to update in array. Approximating.
[kernel] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:277: 
  more than 200(500) locations to update in array. Approximating.
[kernel] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:275: 
  more than 200(500) elements to enumerate. Approximating.
[kernel] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:276: 
  more than 200(500) elements to enumerate. Approximating.
[kernel] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:277: 
  more than 200(500) elements to enumerate. Approximating.
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:304: 
  out of bounds read. assert \valid_read(&(orders + id)->numProducts);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:140: 
  out of bounds read. assert \valid_read(orderProducts + high);
[eva] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:140: 
  Assigning imprecise value to pivot.
  The imprecision originates from Merge
  {/home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:140}
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:145: 
  accessing uninitialized left-value. assert \initialized(&pivot.product);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:145: 
  accessing uninitialized left-value.
  assert \initialized(&(orderProducts + j)->product);
[eva] using specification for function strcmp
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:145: 
  function strcmp: precondition 'valid_string_s1' got status unknown.
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:145: 
  function strcmp: precondition 'valid_string_s2' got status unknown.
[eva] FRAMAC_SHARE/libc/string.h:156: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function strcmp
[kernel] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:145: 
  more than 200(500) elements to enumerate. Approximating.
[kernel] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:134: 
  too many locations to update in array. Approximating.
[kernel] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:134: 
  more than 200(500) locations to update in array. Approximating.
[kernel] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:135: 
  too many locations to update in array. Approximating.
[kernel] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:135: 
  more than 200(500) locations to update in array. Approximating.
[kernel] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:133: 
  more than 200(500) elements to enumerate. Approximating.
[eva] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:143: 
  starting to merge loop iterations
[kernel] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:145: 
  more than 200(100301) elements to enumerate. Approximating.
[eva] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:133: 
  Assigning imprecise value to t.
  The imprecision originates from Misaligned
[eva] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:134: 
  Assigning imprecise value to *a
  (pointing to orders with offsets [128..12838528],0%128).
  The imprecision originates from Misaligned
[eva] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:135: 
  Assigning imprecise value to *b
  (pointing to orders with offsets [128..12838528],0%128).
  The imprecision originates from Misaligned
[kernel] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:145: 
  more than 200(100302) elements to enumerate. Approximating.
[eva] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:134: 
  Assigning imprecise value to *a
  (pointing to orders with offsets [128..12838656],0%128).
  The imprecision originates from Misaligned
[eva] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:135: 
  Assigning imprecise value to *b
  (pointing to orders with offsets [128..12838656],0%128).
  The imprecision originates from Misaligned
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:145: 
  out of bounds read. assert \valid_read(&(orderProducts + j)->product);
[kernel] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:145: 
  more than 200(100499) elements to enumerate. Approximating.
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:134: 
  out of bounds read. assert \valid_read(b);
[eva] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:134: 
  Assigning imprecise value to *a
  (pointing to orders with offsets [128..12838784],0%128).
  The imprecision originates from Misaligned
[eva] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:135: 
  Assigning imprecise value to *b
  (pointing to orders with offsets [128..12863872],0%128).
  The imprecision originates from Misaligned
[eva] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:134: 
  Assigning imprecise value to *a
  (pointing to orders with offsets [128..12838912],0%128).
  The imprecision originates from Misaligned
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:147: 
  signed overflow. assert i + 1 ≤ 2147483647;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:133: 
  out of bounds read. assert \valid_read(a);
[eva] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:134: 
  Assigning imprecise value to *a
  (pointing to orders with offsets [128..12863872],0%128).
  The imprecision originates from Misaligned
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:151: 
  signed overflow. assert i + 1 ≤ 2147483647;
[eva] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:135: 
  Assigning imprecise value to *b
  (pointing to orders with offsets [256..12863872],0%128).
  The imprecision originates from Misaligned
[eva:recursion] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:161: 
  detected recursive call of function orderOrderProductsMS.
[eva] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:161: User Error: 
  Recursive call to orderOrderProductsMS without assigns clause.
  Generating probably incomplete assigns to interpret the call. Try to increase
  the -eva-unroll-recursive-calls parameter or write a correct specification
  for function orderOrderProductsMS.
[kernel:annot:missing-spec] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:155: 
  Neither code nor specification for function orderOrderProductsMS, generating default assigns from the prototype
[eva] using specification for function orderOrderProductsMS
[kernel] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:155: 
  more than 200(500) locations to update in array. Approximating.
[eva:recursion] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:162: 
  detected recursive call of function orderOrderProductsMS.
[eva] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:162: 
  Using specification of function orderOrderProductsMS for recursive calls.
  Analysis of function orderOrderProductsMS is thus incomplete
  and its soundness relies on the written specification.
[kernel] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:162: 
  more than 200(500) locations to update in array. Approximating.
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:308: 
  out of bounds read.
  assert \valid_read(&((orders + id)->products[i].product)->price);
[kernel] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:308: 
  more than 200(500) elements to enumerate. Approximating.
[kernel] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:308: 
  more than 200(100301) elements to enumerate. Approximating.
[kernel] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:308: 
  more than 200(100302) elements to enumerate. Approximating.
[kernel] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:308: 
  more than 200(100499) elements to enumerate. Approximating.
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:308: 
  accessing out of bounds index. assert i < 200;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:288: 
  out of bounds read. assert \valid_read(&(orders + i)->weight);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:330: 
  out of bounds read. assert \valid_read(&(products + idProd)->stock);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:335: 
  out of bounds read. assert \valid_read(&(orders + idOrder)->weight);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:341: 
  out of bounds read.
  assert \valid_read(&((orders + idOrder)->products[i].product)->id);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:341: 
  accessing out of bounds index. assert i < 200;
[kernel] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:348: 
  more than 200(100298) locations to update in array. Approximating.
[kernel] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:349: 
  more than 200(499) locations to update in array. Approximating.
[kernel] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:353: 
  more than 200(499) locations to update in array. Approximating.
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:355: 
  signed overflow. assert (orders + idOrder)->numProducts + 1 ≤ 2147483647;
[kernel] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:355: 
  more than 200(499) locations to update in array. Approximating.
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:356: 
  accessing out of bounds index. assert 0 ≤ orderProdId;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:356: 
  accessing out of bounds index. assert orderProdId < 200;
[kernel] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:356: 
  more than 200(100298) locations to update in array. Approximating.
[kernel] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:357: 
  more than 200(100298) locations to update in array. Approximating.
[kernel] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:359: 
  more than 200(10000) locations to update in array. Approximating.
[kernel] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:341: 
  more than 200(100299) elements to enumerate. Approximating.
[kernel] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:341: 
  more than 200(100298) elements to enumerate. Approximating.
[kernel] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:348: 
  more than 200(100298) elements to enumerate. Approximating.
[kernel] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:353: 
  more than 200(499) elements to enumerate. Approximating.
[kernel] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:354: 
  more than 200(499) elements to enumerate. Approximating.
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:436: 
  out of bounds read. assert \valid_read(&(orders + idOrder)->numProducts);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:437: 
  out of bounds read.
  assert \valid_read(&((orders + idOrder)->products[i].product)->id);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:437: 
  accessing out of bounds index. assert i < 200;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:438: 
  accessing uninitialized left-value.
  assert \initialized(&(orders + idOrder)->products[i].product);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:468: 
  accessing uninitialized left-value.
  assert \initialized(&(orders + idOrder)->products[i].quantity);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:464: 
  out of bounds read. assert \valid_read(&(orders + idOrder)->numProducts);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:465: 
  out of bounds read.
  assert \valid_read(&((orders + idOrder)->products[i].product)->id);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:465: 
  accessing out of bounds index. assert i < 200;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:415: 
  out of bounds read. assert \valid_read(&(orders + idOrder)->numProducts);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:416: 
  out of bounds read.
  assert \valid_read(&((orders + idOrder)->products[i].product)->price);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:416: 
  accessing out of bounds index. assert i < 200;
[kernel] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:416: 
  more than 200(100299) elements to enumerate. Approximating.
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:382: 
  out of bounds read. assert \valid_read(&(orders + idOrder)->numProducts);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:383: 
  out of bounds read.
  assert \valid_read(&((orders + idOrder)->products[i].product)->id);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:383: 
  accessing out of bounds index. assert i < 200;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:390: 
  out of bounds write. assert \valid(&p->stock);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:392: 
  accessing uninitialized left-value.
  assert \initialized(&(orders + idOrder)->products[orderProdId].quantity);
[kernel] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:392: 
  more than 200(499) locations to update in array. Approximating.
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:394: 
  signed overflow. assert -2147483648 ≤ (orders + idOrder)->numProducts - 1;
[kernel] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:394: 
  more than 200(499) locations to update in array. Approximating.
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:396: 
  accessing uninitialized left-value.
  assert \initialized(&(orders + idOrder)->numProducts);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:396: 
  accessing out of bounds index. assert (orders + idOrder)->numProducts < 200;
[eva] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:396: 
  Assigning imprecise value to tmp.
  The imprecision originates from Merge
  {/home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:394}
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:397: 
  accessing uninitialized left-value.
  assert \initialized(&(orders + idOrder)->numProducts);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:397: 
  accessing out of bounds index. assert 0 ≤ (orders + idOrder)->numProducts;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:397: 
  accessing out of bounds index. assert (orders + idOrder)->numProducts < 200;
[eva] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:397: 
  Assigning imprecise value to (orders + idOrder)->products[(orders + idOrder)->numProducts]
  (pointing to orders with offsets [128..12838144],0%128).
  The imprecision originates from Merge
  {/home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:394}
[kernel] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:397: 
  too many locations to update in array. Approximating.
[eva] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:398: 
  Assigning imprecise value to (orders + idOrder)->products[orderProdId]
  (pointing to orders with offsets [128..12838144],0%128).
  The imprecision originates from Merge
  {/home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:394}
[kernel] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:398: 
  too many locations to update in array. Approximating.
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:304: 
  signed overflow. assert -2147483648 ≤ (orders + id)->numProducts - 1;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:304: 
  signed overflow. assert (orders + id)->numProducts - 1 ≤ 2147483647;
[eva] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:140: 
  Assigning imprecise value to pivot.
  The imprecision originates from Misaligned
[eva] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:134: 
  Assigning imprecise value to *a
  (pointing to orders with offsets [128..12838400],128%25728).
  The imprecision originates from Misaligned
[eva] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:135: 
  Assigning imprecise value to *b
  (pointing to orders with offsets [128..12838400],128%25728).
  The imprecision originates from Misaligned
[eva] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:135: 
  Assigning imprecise value to *b
  (pointing to orders with offsets [0..12863872],0%128).
  The imprecision originates from Misaligned
[eva] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:161: 
  Using specification of function orderOrderProductsMS for recursive calls.
  Analysis of function orderOrderProductsMS is thus incomplete
  and its soundness relies on the written specification.
[kernel] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:161: 
  more than 200(500) locations to update in array. Approximating.
[eva] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:348: 
  Assigning imprecise value to (orders + idOrder)->products[orderProdId].quantity
  (pointing to orders with offsets [192..12863936],64%128).
  The imprecision originates from Misaligned
[kernel] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:348: 
  more than 200(100499) locations to update in array. Approximating.
[eva] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:349: 
  Assigning imprecise value to (orders + idOrder)->weight
  (pointing to orders with offsets [32..12838304],32%25728).
  The imprecision originates from Misaligned
[kernel] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:349: 
  more than 200(500) locations to update in array. Approximating.
[eva] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:353: 
  Assigning imprecise value to (orders + idOrder)->weight
  (pointing to orders with offsets [32..12838304],32%25728).
  The imprecision originates from Misaligned
[kernel] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:353: 
  more than 200(500) locations to update in array. Approximating.
[eva] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:354: 
  Assigning imprecise value to orderProdId.
  The imprecision originates from Misaligned
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:355: 
  signed overflow. assert -2147483648 ≤ (orders + idOrder)->numProducts + 1;
[eva] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:355: 
  Assigning imprecise value to (orders + idOrder)->numProducts
  (pointing to orders with offsets [64..12838336],64%25728).
  The imprecision originates from Misaligned
[kernel] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:355: 
  more than 200(500) locations to update in array. Approximating.
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:356: 
  out of bounds write.
  assert \valid(&(orders + idOrder)->products[orderProdId].quantity);
[kernel] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:356: 
  all target addresses were invalid. This path is assumed to be dead.
[eva] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:468: 
  Assigning imprecise value to bOrderAmount.
  The imprecision originates from Misaligned
[eva] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:416: 
  Assigning imprecise value to orderPrice.
  The imprecision originates from Misaligned
[eva] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:389: 
  Assigning imprecise value to p.
  The imprecision originates from Misaligned
[eva] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:390: 
  Assigning imprecise value to p->stock
  (pointing to products with offsets [0..6399968],0%8).
  The imprecision originates from Misaligned
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:392: 
  out of bounds read. assert \valid_read(&p->weight);
[eva] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:392: 
  Assigning imprecise value to (orders + idOrder)->weight
  (pointing to orders with offsets [32..12838304],32%25728).
  The imprecision originates from Misaligned
[kernel] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:392: 
  more than 200(500) locations to update in array. Approximating.
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:394: 
  signed overflow. assert (orders + idOrder)->numProducts - 1 ≤ 2147483647;
[eva] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:394: 
  Assigning imprecise value to (orders + idOrder)->numProducts
  (pointing to orders with offsets [64..12838336],64%25728).
  The imprecision originates from Misaligned
[kernel] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:394: 
  more than 200(500) locations to update in array. Approximating.
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:396: 
  out of bounds read.
  assert
  \valid_read(&(orders + idOrder)->products[(orders + idOrder)->numProducts]);
[eva] done for function main
[scope:rm_asserts] removing 21 assertion(s)
[eva] ====== VALUES COMPUTED ======
[eva:final-states] Values at end of function orderProductsMerge:
  size_of_ord1 ∈ [1..5000]
  size_of_ord2 ∈ [-1073741822..5000]
  i ∈ [1..5000]
  j ∈ [0..5000]
  k ∈ [0..2147483647]
  ord1[0..4999] ∈ [--..--] or UNINITIALIZED
  ord2[0..4999] ∈ [--..--] or UNINITIALIZED
  products[0..9999] ∈ [--..--] or UNINITIALIZED
[eva:final-states] Values at end of function newOrder:
  orders[0..499] ∈
        {{ garbled mix of &{products}
         (origin: Misaligned) }} or UNINITIALIZED
  S___fc_stdout[0].__fc_FILE_id ∈ [--..--]
               [0].__fc_FILE_data ∈
               {{ garbled mix of &{products} (origin: Misaligned) }}
               [1] ∈ [--..--]
[eva:final-states] Values at end of function listOrderAll:
  i ∈ [0..2147483647]
  S___fc_stdout[0].__fc_FILE_id ∈ [--..--]
               [0].__fc_FILE_data ∈
               {{ garbled mix of &{products} (origin: Misaligned) }}
               [1] ∈ [--..--]
[eva:final-states] Values at end of function readDescription:
  i ∈ [0..64]
  ch ∈ {-1; 58}
  products[0..9999] ∈ [--..--] or UNINITIALIZED
  S___fc_stdin[0..1] ∈ [--..--]
[eva:final-states] Values at end of function addProduct:
  products[0..9999] ∈ [--..--] or UNINITIALIZED
  S___fc_stdin[0..1] ∈ [--..--]
  S___fc_stdout[0].__fc_FILE_id ∈ [--..--]
               [0].__fc_FILE_data ∈
               {{ garbled mix of &{products} (origin: Misaligned) }}
               [1] ∈ [--..--]
[eva:final-states] Values at end of function addStock:
  id ∈ [--..--]
  qtd ∈ [--..--]
  products[0..9999] ∈ [--..--] or UNINITIALIZED
  S___fc_stdin[0..1] ∈ [--..--]
  S___fc_stdout[0].__fc_FILE_id ∈ [--..--]
               [0].__fc_FILE_data ∈
               {{ garbled mix of &{products} (origin: Misaligned) }}
               [1] ∈ [--..--]
[eva:final-states] Values at end of function removeStock:
  id ∈ [--..--]
  qtd ∈ [--..--]
  products[0..9999] ∈ [--..--] or UNINITIALIZED
  S___fc_stdin[0..1] ∈ [--..--]
  S___fc_stdout[0].__fc_FILE_id ∈ [--..--]
               [0].__fc_FILE_data ∈
               {{ garbled mix of &{products} (origin: Misaligned) }}
               [1] ∈ [--..--]
[eva:final-states] Values at end of function changePrice:
  id ∈ [--..--]
  price ∈ [--..--]
  products[0..9999] ∈ [--..--] or UNINITIALIZED
  S___fc_stdin[0..1] ∈ [--..--]
  S___fc_stdout[0].__fc_FILE_id ∈ [--..--]
               [0].__fc_FILE_data ∈
               {{ garbled mix of &{products} (origin: Misaligned) }}
               [1] ∈ [--..--]
[eva:final-states] Values at end of function addProductToOrder:
  idOrder ∈ [--..--]
  idProd ∈ [--..--]
  qtd ∈ [--..--]
  orderProdId ∈ [-1..199]
  products[0..9999] ∈ [--..--] or UNINITIALIZED
  orders[0..499] ∈
        {{ garbled mix of &{products}
         (origin: Misaligned) }} or UNINITIALIZED
  S___fc_stdin[0..1] ∈ [--..--]
  S___fc_stdout[0].__fc_FILE_id ∈ [--..--]
               [0].__fc_FILE_data ∈
               {{ garbled mix of &{products} (origin: Misaligned) }}
               [1] ∈ [--..--]
[eva:final-states] Values at end of function removeProductFromOrder:
  idOrder ∈ [--..--]
  idProd ∈ [--..--]
  orderProdId ∈ [-1..199]
  p ∈ {{ &products{[0], [1]} }} or UNINITIALIZED
  tmp.product ∈
     {{ garbled mix of &{products}
      (origin: Merge
      {/home/fmarques/sbugs/projects/alunos/iaed_p1/289/projetofinal.c:394}) }} or UNINITIALIZED
     {.quantity; .[bits 96 to 127]} ∈ [--..--] or UNINITIALIZED
  products[0..9999] ∈ [--..--] or UNINITIALIZED
  orders[0..499] ∈
        {{ garbled mix of &{products}
         (origin: Misaligned) }} or UNINITIALIZED
  S___fc_stdin[0..1] ∈ [--..--]
  S___fc_stdout[0].__fc_FILE_id ∈ [--..--]
               [0].__fc_FILE_data ∈
               {{ garbled mix of &{products} (origin: Misaligned) }}
               [1] ∈ [--..--]
[eva:final-states] Values at end of function listProductInOrder:
  idOrder ∈ [--..--]
  idProd ∈ [--..--]
  i ∈ [0..200] or UNINITIALIZED
  S___fc_stdin[0..1] ∈ [--..--]
  S___fc_stdout[0].__fc_FILE_id ∈ [--..--]
               [0].__fc_FILE_data ∈
               {{ garbled mix of &{products} (origin: Misaligned) }}
               [1] ∈ [--..--]
[eva:final-states] Values at end of function searchProductInOrder:
  idProd ∈ [--..--]
  idOrder ∈ [0..2147483647] or UNINITIALIZED
  i ∈ [0..200] or UNINITIALIZED
  bOrder ∈ [-1..499]
  bOrderAmount ∈ {{ garbled mix of &{products} (origin: Misaligned) }}
  S___fc_stdin[0..1] ∈ [--..--]
  S___fc_stdout[0].__fc_FILE_id ∈ [--..--]
               [0].__fc_FILE_data ∈
               {{ garbled mix of &{products} (origin: Misaligned) }}
               [1] ∈ [--..--]
[eva:final-states] Values at end of function swap:
  t ∈
   {{ garbled mix of &{products} (origin: Misaligned) }} or UNINITIALIZED
  orders[0..499] ∈
        {{ garbled mix of &{products}
         (origin: Misaligned) }} or UNINITIALIZED
[eva:final-states] Values at end of function partition:
  pivot ∈
       {{ garbled mix of &{products} (origin: Misaligned) }} or UNINITIALIZED
  i ∈ [-1..100497]
  j ∈ [0..2147483647]
  orders[0..499] ∈
        {{ garbled mix of &{products}
         (origin: Misaligned) }} or UNINITIALIZED
  __retres ∈ [0..100498]
[eva:final-states] Values at end of function totalOrderPrice:
  idOrder ∈ [--..--]
  i ∈ [0..200] or UNINITIALIZED
  orderPrice ∈ {{ garbled mix of &{products} (origin: Misaligned) }}
  S___fc_stdin[0..1] ∈ [--..--]
  S___fc_stdout[0].__fc_FILE_id ∈ [--..--]
               [0].__fc_FILE_data ∈
               {{ garbled mix of &{products} (origin: Misaligned) }}
               [1] ∈ [--..--]
[eva:final-states] Values at end of function listOrder:
  id ∈ [--..--]
  orders[0..499] ∈
        {{ garbled mix of &{products}
         (origin: Misaligned) }} or UNINITIALIZED
  S___fc_stdin[0..1] ∈ [--..--]
  S___fc_stdout[0].__fc_FILE_id ∈ [--..--]
               [0].__fc_FILE_data ∈
               {{ garbled mix of &{products} (origin: Misaligned) }}
               [1] ∈ [--..--]
[eva:final-states] Values at end of function listProduct:
  i ∈ [0..2147483647]
  products[0..9999] ∈ [--..--] or UNINITIALIZED
  S___fc_stdout[0].__fc_FILE_id ∈ [--..--]
               [0].__fc_FILE_data ∈
               {{ garbled mix of &{products} (origin: Misaligned) }}
               [1] ∈ [--..--]
[eva:final-states] Values at end of function main:
  command ∈ {0; 120}
  numProd ∈ [0..2147483647]
  numOrder ∈ [0..2147483647]
  products[0..9999] ∈ [--..--] or UNINITIALIZED
  orders[0..499] ∈
        {{ garbled mix of &{products}
         (origin: Misaligned) }} or UNINITIALIZED
  __retres ∈ {-1; 0}
  S___fc_stdin[0..1] ∈ [--..--]
  S___fc_stdout[0].__fc_FILE_id ∈ [--..--]
               [0].__fc_FILE_data ∈
               {{ garbled mix of &{products} (origin: Misaligned) }}
               [1] ∈ [--..--]
[eva:final-states] Values at end of function orderOrderProductsMS:
  orders[0..499] ∈
        {{ garbled mix of &{products}
         (origin: Misaligned) }} or UNINITIALIZED
[eva:final-states] Values at end of function orderProductsMS:
  products[0..9999] ∈ [--..--] or UNINITIALIZED
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  20 functions analyzed (out of 23): 86% coverage.
  In these functions, 346 statements reached (out of 347): 99% coverage.
  ----------------------------------------------------------------------------
  Some errors and warnings have been raised during the analysis:
    by the Eva analyzer:      2 errors    0 warnings
    by the Frama-C kernel:    0 errors    0 warnings
  ----------------------------------------------------------------------------
  147 alarms generated by the analysis:
      59 accesses to uninitialized left-values
      41 integer overflows
      33 invalid memory accesses
      14 accesses out of bounds index
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    57 valid     6 unknown     0 invalid     63 total
  90% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[eva] User Error: Deferred error message was emitted during execution. See above messages for more information.
[kernel] Plug-in eva aborted: invalid user input.
