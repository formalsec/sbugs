[report] Monitoring events
[report] Loading '/home/fmarques/sbugs/projects/configs/frama-c_report_rules.json'
[kernel] Parsing /home/fmarques/sbugs/projects/alunos/iaed_p1/361/proj1.c (with preprocessing)
[kernel:parser:decimal-float] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:10: 
  Floating-point constant 0.10 is not represented exactly. Will use 0x1.999999999999ap-4.
[kernel:parser:decimal-float] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:17: 
  Floating-point constant 0.10 is not represented exactly. Will use 0x1.999999999999ap-4.
[kernel:parser:decimal-float] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:24: 
  Floating-point constant 0.10 is not represented exactly. Will use 0x1.999999999999ap-4.
[variadic:typing] /home/fmarques/sbugs/projects/alunos/iaed_p1/361/proj1.c:343: Warning: 
  Incorrect type for argument 2. The argument will be cast from int to unsigned int.
[eva] Analyzing a complete application starting at main
[eva] Computing initial state
[eva] Initial state computed
[eva:initial-state] Values of globals at initialization
  numberProducts ∈ {0}
  numberOrders ∈ {0}
  ido[0..499] ∈ {0}
  idp[0..9999] ∈ {0}
  x[0..9999] ∈ {0}
[eva] using specification for function getchar
[eva] using specification for function scanf_va_1
[eva] using specification for function printf_va_1
[eva] using specification for function scanf_va_3
[eva] using specification for function printf_va_4
[eva] using specification for function printf_va_5
[eva] using specification for function scanf_va_5
[eva] using specification for function printf_va_8
[eva] using specification for function scanf_va_2
[eva] using specification for function printf_va_2
[eva] using specification for function scanf_va_4
[eva] using specification for function printf_va_6
[eva] using specification for function scanf_va_6
[eva] using specification for function printf_va_12
[eva] using specification for function scanf_va_7
[eva] using specification for function printf_va_14
[eva] using specification for function scanf_va_8
[eva] using specification for function printf_va_15
[eva] using specification for function scanf_va_9
[eva] using specification for function printf_va_18
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/361/proj1.c:311: 
  accessing out of bounds index. assert idproduct < 10000;
[kernel] /home/fmarques/sbugs/projects/alunos/iaed_p1/361/proj1.c:311: 
  more than 200(10000) elements to enumerate. Approximating.
[eva] using specification for function printf_va_20
[eva] using specification for function scanf_va_10
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/361/proj1.c:337: 
  accessing out of bounds index. assert idorder < 500;
[kernel] /home/fmarques/sbugs/projects/alunos/iaed_p1/361/proj1.c:337: 
  more than 200(500) elements to enumerate. Approximating.
[eva] using specification for function printf_va_22
[eva] /home/fmarques/sbugs/projects/alunos/iaed_p1/361/proj1.c:356: 
  starting to merge loop iterations
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/361/proj1.c:24: 
  out of bounds read. assert \valid_read(&(v + id)->stock);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/361/proj1.c:24: 
  signed overflow. assert -2147483648 ≤ (v + id)->stock + qtd;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/361/proj1.c:24: 
  signed overflow. assert (v + id)->stock + qtd ≤ 2147483647;
[kernel] /home/fmarques/sbugs/projects/alunos/iaed_p1/361/proj1.c:24: 
  more than 200(10000) elements to enumerate. Approximating.
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/361/proj1.c:180: 
  out of bounds write. assert \valid(&(idp_0 + id)->stock);
[kernel] /home/fmarques/sbugs/projects/alunos/iaed_p1/361/proj1.c:180: 
  more than 200(10000) locations to update in array. Approximating.
[eva] using specification for function printf_va_9
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/361/proj1.c:149: 
  accessing out of bounds index. assert 0 ≤ idproduct;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/361/proj1.c:149: 
  accessing out of bounds index. assert idproduct < 10000;
[eva] using specification for function printf_va_10
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/361/proj1.c:194: 
  accessing out of bounds index. assert 0 ≤ idorder;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/361/proj1.c:194: 
  accessing out of bounds index. assert idorder < 500;
[eva] using specification for function printf_va_11
[kernel] /home/fmarques/sbugs/projects/alunos/iaed_p1/361/proj1.c:261: 
  more than 200(500) locations to update in array. Approximating.
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/361/proj1.c:262: 
  signed overflow. assert ido[idorder].idpQty[idproduct] + qty ≤ 2147483647;
[kernel] /home/fmarques/sbugs/projects/alunos/iaed_p1/361/proj1.c:263: 
  more than 200(500) locations to update in array. Approximating.
[kernel] /home/fmarques/sbugs/projects/alunos/iaed_p1/361/proj1.c:264: 
  more than 200(10000) locations to update in array. Approximating.
[kernel] /home/fmarques/sbugs/projects/alunos/iaed_p1/361/proj1.c:265: 
  more than 200(10000) locations to update in array. Approximating.
[kernel] /home/fmarques/sbugs/projects/alunos/iaed_p1/361/proj1.c:254: 
  more than 200(10000) elements to enumerate. Approximating.
[kernel] /home/fmarques/sbugs/projects/alunos/iaed_p1/361/proj1.c:261: 
  more than 200(500) elements to enumerate. Approximating.
[kernel] /home/fmarques/sbugs/projects/alunos/iaed_p1/361/proj1.c:264: 
  more than 200(10000) elements to enumerate. Approximating.
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/361/proj1.c:162: 
  signed overflow. assert -qtd ≤ 2147483647;
[eva] using specification for function printf_va_3
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/361/proj1.c:166: 
  out of bounds write. assert \valid(&(idp_0 + id)->stock);
[kernel] /home/fmarques/sbugs/projects/alunos/iaed_p1/361/proj1.c:166: 
  more than 200(10000) locations to update in array. Approximating.
[eva] using specification for function printf_va_7
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/361/proj1.c:129: 
  accessing out of bounds index. assert idorder < 500;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/361/proj1.c:199: 
  accessing out of bounds index. assert 0 ≤ idorder;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/361/proj1.c:199: 
  accessing out of bounds index. assert idorder < 500;
[eva] using specification for function printf_va_13
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/361/proj1.c:287: 
  accessing out of bounds index. assert 0 ≤ idproduct;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/361/proj1.c:287: 
  accessing out of bounds index. assert idproduct < 10000;
[kernel] /home/fmarques/sbugs/projects/alunos/iaed_p1/361/proj1.c:287: 
  more than 200(10000) locations to update in array. Approximating.
[kernel] /home/fmarques/sbugs/projects/alunos/iaed_p1/361/proj1.c:287: 
  more than 200(10000) elements to enumerate. Approximating.
[eva] using specification for function printf_va_16
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/361/proj1.c:301: 
  accessing out of bounds index. assert 0 ≤ idorder;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/361/proj1.c:301: 
  accessing out of bounds index. assert idorder < 500;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/361/proj1.c:301: 
  accessing out of bounds index. assert 0 ≤ idproduct;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/361/proj1.c:301: 
  accessing out of bounds index. assert idproduct < 10000;
[eva] using specification for function printf_va_17
[eva] using specification for function printf_va_21
[eva] /home/fmarques/sbugs/projects/alunos/iaed_p1/361/proj1.c:328: 
  starting to merge loop iterations
[eva] using specification for function printf_va_23
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/361/proj1.c:150: 
  accessing out of bounds index. assert 0 ≤ idp[idproduct].ordersList[i];
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/361/proj1.c:150: 
  accessing out of bounds index. assert idp[idproduct].ordersList[i] < 500;
[eva] /home/fmarques/sbugs/projects/alunos/iaed_p1/361/proj1.c:149: 
  starting to merge loop iterations
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/361/proj1.c:150: 
  signed overflow.
  assert
  -2147483648 ≤ Qty + ido[idp[idproduct].ordersList[i]].idpQty[idproduct];
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/361/proj1.c:150: 
  signed overflow.
  assert
  Qty + ido[idp[idproduct].ordersList[i]].idpQty[idproduct] ≤ 2147483647;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/361/proj1.c:150: 
  accessing out of bounds index. assert i < 500;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/361/proj1.c:251: 
  signed overflow.
  assert -2147483648 ≤ qty + tmp_0;
  (tmp_0 from QtyAlreadyOrded(idproduct))
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/361/proj1.c:251: 
  signed overflow.
  assert qty + tmp_0 ≤ 2147483647;
  (tmp_0 from QtyAlreadyOrded(idproduct))
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/361/proj1.c:195: 
  accessing out of bounds index. assert 0 ≤ ido[idorder].list[i];
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/361/proj1.c:195: 
  accessing out of bounds index. assert ido[idorder].list[i] < 10000;
[eva] /home/fmarques/sbugs/projects/alunos/iaed_p1/361/proj1.c:194: 
  starting to merge loop iterations
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/361/proj1.c:195: 
  accessing out of bounds index. assert i < 10000;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/361/proj1.c:258: 
  signed overflow. assert -2147483648 ≤ ido[idorder].idpQty[idproduct] + qty;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/361/proj1.c:258: 
  signed overflow. assert ido[idorder].idpQty[idproduct] + qty ≤ 2147483647;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/361/proj1.c:261: 
  accessing out of bounds index. assert ido[idorder].NumberOfProducts < 10000;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/361/proj1.c:264: 
  accessing out of bounds index. assert idp[idproduct].ordernumber < 500;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/361/proj1.c:162: 
  signed overflow.
  assert -2147483648 ≤ tmp - tmp_0;
  (tmp from StockOperation(idp_0, (int)id, - qtd), tmp_0 from
  QtyAlreadyOrded((int)id))
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/361/proj1.c:162: 
  signed overflow.
  assert tmp - tmp_0 ≤ 2147483647;
  (tmp from StockOperation(idp_0, (int)id, - qtd), tmp_0 from
  QtyAlreadyOrded((int)id))
[eva] /home/fmarques/sbugs/projects/alunos/iaed_p1/361/proj1.c:129: 
  starting to merge loop iterations
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/361/proj1.c:130: 
  accessing out of bounds index. assert i < 10000;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/361/proj1.c:217: 
  accessing out of bounds index. assert 0 ≤ idorder;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/361/proj1.c:217: 
  accessing out of bounds index. assert idorder < 500;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/361/proj1.c:219: 
  accessing out of bounds index. assert 0 ≤ ido[idorder].list[i];
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/361/proj1.c:219: 
  accessing out of bounds index. assert ido[idorder].list[i] < 10000;
[kernel] /home/fmarques/sbugs/projects/alunos/iaed_p1/361/proj1.c:220: 
  more than 200(500) locations to update in array. Approximating.
[eva] /home/fmarques/sbugs/projects/alunos/iaed_p1/361/proj1.c:217: 
  starting to merge loop iterations
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/361/proj1.c:224: 
  accessing out of bounds index. assert (unsigned int)(i - 1) < 10000;
[kernel] /home/fmarques/sbugs/projects/alunos/iaed_p1/361/proj1.c:224: 
  more than 200(500) locations to update in array. Approximating.
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/361/proj1.c:218: 
  accessing out of bounds index. assert i < 10000;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/361/proj1.c:228: 
  accessing out of bounds index. assert 0 ≤ idproduct;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/361/proj1.c:228: 
  accessing out of bounds index. assert idproduct < 10000;
[kernel] /home/fmarques/sbugs/projects/alunos/iaed_p1/361/proj1.c:230: 
  more than 200(10000) locations to update in array. Approximating.
[eva] /home/fmarques/sbugs/projects/alunos/iaed_p1/361/proj1.c:228: 
  starting to merge loop iterations
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/361/proj1.c:234: 
  accessing out of bounds index. assert (unsigned int)(i - 1) < 500;
[kernel] /home/fmarques/sbugs/projects/alunos/iaed_p1/361/proj1.c:234: 
  more than 200(10000) locations to update in array. Approximating.
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/361/proj1.c:229: 
  accessing out of bounds index. assert i < 500;
[kernel] /home/fmarques/sbugs/projects/alunos/iaed_p1/361/proj1.c:237: 
  more than 200(500) locations to update in array. Approximating.
[kernel] /home/fmarques/sbugs/projects/alunos/iaed_p1/361/proj1.c:238: 
  more than 200(10000) locations to update in array. Approximating.
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/361/proj1.c:200: 
  accessing out of bounds index. assert 0 ≤ ido[idorder].list[i];
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/361/proj1.c:200: 
  accessing out of bounds index. assert ido[idorder].list[i] < 10000;
[eva] /home/fmarques/sbugs/projects/alunos/iaed_p1/361/proj1.c:199: 
  starting to merge loop iterations
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/361/proj1.c:200: 
  accessing out of bounds index. assert i < 10000;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/361/proj1.c:313: 
  accessing out of bounds index. assert 0 ≤ idp[idproduct].ordersList[i];
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/361/proj1.c:313: 
  accessing out of bounds index. assert idp[idproduct].ordersList[i] < 500;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/361/proj1.c:313: 
  accessing out of bounds index. assert 0 ≤ idp[idproduct].ordersList[aux];
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/361/proj1.c:313: 
  accessing out of bounds index. assert idp[idproduct].ordersList[aux] < 500;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/361/proj1.c:316: 
  accessing out of bounds index. assert 0 ≤ idp[idproduct].ordersList[i];
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/361/proj1.c:316: 
  accessing out of bounds index. assert idp[idproduct].ordersList[i] < 500;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/361/proj1.c:316: 
  accessing out of bounds index. assert 0 ≤ idp[idproduct].ordersList[aux];
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/361/proj1.c:316: 
  accessing out of bounds index. assert idp[idproduct].ordersList[aux] < 500;
[eva] /home/fmarques/sbugs/projects/alunos/iaed_p1/361/proj1.c:312: 
  starting to merge loop iterations
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/361/proj1.c:313: 
  accessing out of bounds index. assert i < 500;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/361/proj1.c:320: 
  accessing out of bounds index. assert 0 ≤ idp[idproduct].ordersList[aux];
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/361/proj1.c:320: 
  accessing out of bounds index. assert idp[idproduct].ordersList[aux] < 500;
[eva] using specification for function printf_va_19
[eva:recursion] /home/fmarques/sbugs/projects/alunos/iaed_p1/361/proj1.c:111: 
  detected recursive call of function mergeSort.
[eva] /home/fmarques/sbugs/projects/alunos/iaed_p1/361/proj1.c:111: User Error: 
  Recursive call to mergeSort without assigns clause.
  Generating probably incomplete assigns to interpret the call. Try to increase
  the -eva-unroll-recursive-calls parameter or write a correct specification
  for function mergeSort.
[kernel:annot:missing-spec] /home/fmarques/sbugs/projects/alunos/iaed_p1/361/proj1.c:104: 
  Neither code nor specification for function mergeSort, generating default assigns from the prototype
[eva] using specification for function mergeSort
[eva:recursion] /home/fmarques/sbugs/projects/alunos/iaed_p1/361/proj1.c:113: 
  detected recursive call of function mergeSort.
[eva] /home/fmarques/sbugs/projects/alunos/iaed_p1/361/proj1.c:113: 
  Using specification of function mergeSort for recursive calls.
  Analysis of function mergeSort is thus incomplete and its soundness
  relies on the written specification.
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/361/proj1.c:75: 
  accessing out of bounds index. assert 0 ≤ *(a + i);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/361/proj1.c:75: 
  accessing out of bounds index. assert *(a + i) < 10000;
[eva] /home/fmarques/sbugs/projects/alunos/iaed_p1/361/proj1.c:74: 
  starting to merge loop iterations
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/361/proj1.c:76: 
  signed overflow. assert k + 1 ≤ 2147483647;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/361/proj1.c:76: 
  accessing out of bounds index. assert tmp_3 < 10000;
                                 (tmp_3 from k++)
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/361/proj1.c:79: 
  signed overflow. assert k + 1 ≤ 2147483647;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/361/proj1.c:79: 
  accessing out of bounds index. assert tmp_5 < 10000;
                                 (tmp_5 from k++)
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/361/proj1.c:83: 
  signed overflow. assert k + 1 ≤ 2147483647;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/361/proj1.c:83: 
  accessing out of bounds index. assert tmp_7 < 10000;
                                 (tmp_7 from k++)
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/361/proj1.c:86: 
  signed overflow. assert k + 1 ≤ 2147483647;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/361/proj1.c:86: 
  accessing out of bounds index. assert tmp_9 < 10000;
                                 (tmp_9 from k++)
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/361/proj1.c:92: 
  signed overflow. assert k + 1 ≤ 2147483647;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/361/proj1.c:92: 
  accessing out of bounds index. assert tmp_11 < 10000;
                                 (tmp_11 from k++)
[eva] /home/fmarques/sbugs/projects/alunos/iaed_p1/361/proj1.c:91: 
  starting to merge loop iterations
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/361/proj1.c:95: 
  signed overflow. assert k + 1 ≤ 2147483647;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/361/proj1.c:95: 
  accessing out of bounds index. assert tmp_13 < 10000;
                                 (tmp_13 from k++)
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/361/proj1.c:98: 
  accessing uninitialized left-value. assert \initialized(&aux[i]);
[eva] /home/fmarques/sbugs/projects/alunos/iaed_p1/361/proj1.c:97: 
  starting to merge loop iterations
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/361/proj1.c:329: 
  signed overflow.
  assert -2147483648 ≤ idp[x[loop]].stock - tmp;
  (tmp from QtyAlreadyOrded(x[loop]))
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/361/proj1.c:329: 
  signed overflow.
  assert idp[x[loop]].stock - tmp ≤ 2147483647;
  (tmp from QtyAlreadyOrded(x[loop]))
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/361/proj1.c:329: 
  accessing out of bounds index. assert 0 ≤ x[loop];
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/361/proj1.c:329: 
  accessing out of bounds index. assert x[loop] < 10000;
[eva] /home/fmarques/sbugs/projects/alunos/iaed_p1/361/proj1.c:111: 
  Using specification of function mergeSort for recursive calls.
  Analysis of function mergeSort is thus incomplete and its soundness
  relies on the written specification.
[kernel] /home/fmarques/sbugs/projects/alunos/iaed_p1/361/proj1.c:111: 
  more than 200(500) locations to update in array. Approximating.
[kernel] /home/fmarques/sbugs/projects/alunos/iaed_p1/361/proj1.c:113: 
  more than 200(500) locations to update in array. Approximating.
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/361/proj1.c:58: 
  out of bounds read. assert \valid_read(a + j);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/361/proj1.c:58: 
  accessing out of bounds index. assert 0 ≤ *(a + i);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/361/proj1.c:58: 
  accessing out of bounds index. assert *(a + i) < 10000;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/361/proj1.c:58: 
  accessing out of bounds index. assert 0 ≤ *(a + j);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/361/proj1.c:58: 
  accessing out of bounds index. assert *(a + j) < 10000;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/361/proj1.c:62: 
  out of bounds read. assert \valid_read(a + j);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/361/proj1.c:62: 
  accessing out of bounds index. assert 0 ≤ *(a + i);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/361/proj1.c:62: 
  accessing out of bounds index. assert *(a + i) < 10000;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/361/proj1.c:62: 
  accessing out of bounds index. assert 0 ≤ *(a + j);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/361/proj1.c:62: 
  accessing out of bounds index. assert *(a + j) < 10000;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/361/proj1.c:63: 
  out of bounds read. assert \valid_read(a + tmp_2);
                      (tmp_2 from j++)
[eva] /home/fmarques/sbugs/projects/alunos/iaed_p1/361/proj1.c:57: 
  starting to merge loop iterations
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/361/proj1.c:58: 
  out of bounds read. assert \valid_read(a + i);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/361/proj1.c:59: 
  out of bounds read. assert \valid_read(a + tmp_0);
                      (tmp_0 from i++)
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/361/proj1.c:62: 
  out of bounds read. assert \valid_read(a + i);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/361/proj1.c:59: 
  signed overflow. assert k + 1 ≤ 2147483647;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/361/proj1.c:59: 
  accessing out of bounds index. assert tmp < 10000;
                                 (tmp from k++)
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/361/proj1.c:63: 
  signed overflow. assert k + 1 ≤ 2147483647;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/361/proj1.c:63: 
  accessing out of bounds index. assert tmp_1 < 10000;
                                 (tmp_1 from k++)
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/361/proj1.c:58: 
  accessing out of bounds index. assert c < 64;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/361/proj1.c:92: 
  out of bounds read. assert \valid_read(a + tmp_12);
                      (tmp_12 from i++)
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/361/proj1.c:95: 
  out of bounds read. assert \valid_read(a + tmp_14);
                      (tmp_14 from j++)
[eva] /home/fmarques/sbugs/projects/alunos/iaed_p1/361/proj1.c:94: 
  starting to merge loop iterations
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/361/proj1.c:95: 
  signed overflow. assert j + 1 ≤ 2147483647;
[kernel] /home/fmarques/sbugs/projects/alunos/iaed_p1/361/proj1.c:98: 
  more than 200(500) locations to update in array. Approximating.
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/361/proj1.c:98: 
  accessing out of bounds index. assert i < 10000;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/361/proj1.c:347: 
  accessing out of bounds index. assert 0 ≤ ido[idorder].list[loop];
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/361/proj1.c:347: 
  accessing out of bounds index. assert ido[idorder].list[loop] < 10000;
[eva] using specification for function printf_va_24
[eva] /home/fmarques/sbugs/projects/alunos/iaed_p1/361/proj1.c:345: 
  starting to merge loop iterations
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/361/proj1.c:347: 
  accessing out of bounds index. assert loop < 10000;
[kernel] /home/fmarques/sbugs/projects/alunos/iaed_p1/361/proj1.c:139: 
  more than 200(10000) elements to enumerate. Approximating.
[kernel] /home/fmarques/sbugs/projects/alunos/iaed_p1/361/proj1.c:139: 
  more than 200(10000) locations to update in array. Approximating.
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/361/proj1.c:301: 
  function printf_va_17: precondition valid_read_string(param0) got status unknown.
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/361/proj1.c:75: 
  out of bounds read. assert \valid_read(a + j);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/361/proj1.c:75: 
  accessing out of bounds index. assert 0 ≤ *(a + j);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/361/proj1.c:75: 
  accessing out of bounds index. assert *(a + j) < 10000;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/361/proj1.c:78: 
  accessing out of bounds index. assert 0 ≤ *(a + j);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/361/proj1.c:78: 
  accessing out of bounds index. assert *(a + j) < 10000;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/361/proj1.c:78: 
  accessing out of bounds index. assert 0 ≤ *(a + i);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/361/proj1.c:78: 
  accessing out of bounds index. assert *(a + i) < 10000;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/361/proj1.c:75: 
  out of bounds read. assert \valid_read(a + i);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/361/proj1.c:98: 
  out of bounds write. assert \valid(a + i);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/361/proj1.c:329: 
  function printf_va_21: precondition valid_read_string(param0) got status unknown.
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/361/proj1.c:347: 
  function printf_va_24: precondition valid_read_string(param0) got status unknown.
[eva] done for function main
[scope:rm_asserts] removing 14 assertion(s)
[eva] ====== VALUES COMPUTED ======
[eva:final-states] Values at end of function NotValidID:
  result ∈ {0; 1}
[eva:final-states] Values at end of function PorductInOrder:
  result ∈ {0; 1}
  i ∈ [0..10000]
  __retres ∈ {0; 1}
[eva:final-states] Values at end of function QtyAlreadyOrded:
  i ∈ [0..500]
  Qty ∈ [--..--]
[eva:final-states] Values at end of function StockOperation:
  aux ∈ [--..--]
[eva:final-states] Values at end of function WPCalculation:
  i ∈ [0..10000]
  result ∈ [--..--]
  __retres ∈ [--..--]
[eva:final-states] Values at end of function merge:
  ido[0..499] ∈ [--..--]
  x[0..9999] ∈ [--..--]
  mid ∈ [0..1073741823]
  i ∈ [2..10000]
  j ∈ [2..2147483647]
  k ∈ [0..2147483647]
  aux[0..9999] ∈ [--..--] or UNINITIALIZED
[eva:final-states] Values at end of function CreatNewOrder:
  numberOrders ∈ [1..500]
  S___fc_stdout[0..1] ∈ [--..--]
[eva:final-states] Values at end of function CreatNewProduct:
  numberProducts ∈ [1..10000]
  idp[0..9999] ∈ [--..--]
  x[0..9999] ∈ [--..--]
  S___fc_stdin[0..1] ∈ [--..--]
  S___fc_stdout[0..1] ∈ [--..--]
[eva:final-states] Values at end of function RemoveStock:
  idp[0..9999] ∈ [--..--]
  id ∈ [--..--]
  qtd ∈ [--..--]
  S___fc_stdin[0..1] ∈ [--..--]
  S___fc_stdout[0..1] ∈ [--..--]
[eva:final-states] Values at end of function AddStock:
  idp[0..9999] ∈ [--..--]
  id ∈ [--..--]
  qtd ∈ [--..--]
  S___fc_stdin[0..1] ∈ [--..--]
  S___fc_stdout[0..1] ∈ [--..--]
[eva:final-states] Values at end of function RemoveProduct:
  ido[0..499] ∈ [--..--]
  idp[0..9999] ∈ [--..--]
  i ∈ [0..500] or UNINITIALIZED
  remove_0 ∈ {0; 1}
  idorder ∈ [--..--]
  idproduct ∈ [--..--]
  S___fc_stdin[0..1] ∈ [--..--]
  S___fc_stdout[0..1] ∈ [--..--]
[eva:final-states] Values at end of function OrderaProduct:
  ido[0..499] ∈ [--..--]
  idp[0..9999] ∈ [--..--]
  idproduct ∈ [--..--]
  idorder ∈ [--..--]
  qty ∈ [--..--]
  S___fc_stdin[0..1] ∈ [--..--]
  S___fc_stdout[0..1] ∈ [--..--]
[eva:final-states] Values at end of function PriceCalculator:
  idorder ∈ [--..--]
  S___fc_stdin[0..1] ∈ [--..--]
  S___fc_stdout[0..1] ∈ [--..--]
[eva:final-states] Values at end of function ChangePrice:
  idp[0..9999] ∈ [--..--]
  idproduct ∈ [--..--]
  Price ∈ [--..--]
  S___fc_stdin[0..1] ∈ [--..--]
  S___fc_stdout[0..1] ∈ [--..--]
[eva:final-states] Values at end of function ProductQtyOrder:
  idorder ∈ [--..--]
  idproduct ∈ [--..--]
  S___fc_stdin[0..1] ∈ [--..--]
  S___fc_stdout[0..1] ∈ [--..--]
[eva:final-states] Values at end of function MaxProduct:
  idproduct ∈ [0..9999]
  i ∈ [0..500]
  aux ∈ [0..499]
  S___fc_stdin[0..1] ∈ [--..--]
  S___fc_stdout[0..1] ∈ [--..--]
[eva:final-states] Values at end of function AlphabeticalOrder:
  ido[0..499] ∈ [--..--]
  idorder ∈ [0..499]
  loop ∈ [0..10000] or UNINITIALIZED
  S___fc_stdin[0..1] ∈ [--..--]
  S___fc_stdout[0..1] ∈ [--..--]
[eva:final-states] Values at end of function PriceOrder:
  x[0..9999] ∈ [--..--]
  loop ∈ [0..10000]
  S___fc_stdout[0..1] ∈ [--..--]
[eva:final-states] Values at end of function main:
  numberProducts ∈ [0..10000]
  numberOrders ∈ [0..500]
  ido[0..499] ∈ [--..--]
  idp[0..9999] ∈ [--..--]
  x[0..9999] ∈ [--..--]
  command ∈ {120}
  __retres ∈ {0}
  S___fc_stdin[0..1] ∈ [--..--]
  S___fc_stdout[0..1] ∈ [--..--]
[eva:final-states] Values at end of function mergeSort:
  ido[0..499] ∈ [--..--]
  x[0..9999] ∈ [--..--]
  mid ∈ [-1073741824..1073741823]
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  20 functions analyzed (out of 23): 86% coverage.
  In these functions, 345 statements reached (out of 345): 100% coverage.
  ----------------------------------------------------------------------------
  Some errors and warnings have been raised during the analysis:
    by the Eva analyzer:      1 error    0 warnings
    by the Frama-C kernel:    0 errors    0 warnings
  ----------------------------------------------------------------------------
  117 alarms generated by the analysis:
      79 accesses out of bounds index
      23 integer overflows
      14 invalid memory accesses
       1 access to uninitialized left-values
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    54 valid     3 unknown     0 invalid     57 total
  94% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[eva] User Error: Deferred error message was emitted during execution. See above messages for more information.
[kernel] Plug-in eva aborted: invalid user input.
