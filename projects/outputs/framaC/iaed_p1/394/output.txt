[report] Monitoring events
[report] Loading '/home/fmarques/sbugs/projects/configs/frama-c_report_rules.json'
[kernel] Parsing /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c (with preprocessing)
[kernel:parser:decimal-float] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:10: 
  Floating-point constant 0.10 is not represented exactly. Will use 0x1.999999999999ap-4.
[kernel:parser:decimal-float] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:17: 
  Floating-point constant 0.10 is not represented exactly. Will use 0x1.999999999999ap-4.
[kernel:parser:decimal-float] /home/fmarques/sbugs/projects/alunos/lib/allocators.h:24: 
  Floating-point constant 0.10 is not represented exactly. Will use 0x1.999999999999ap-4.
[kernel:typing:no-proto] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:62: 
  Calling function init that is declared without prototype.
  Its formals will be inferred from actual arguments
[kernel:typing:no-proto] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:69: 
  Calling function addProduct that is declared without prototype.
  Its formals will be inferred from actual arguments
[kernel:typing:no-proto] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:73: 
  Calling function addStock that is declared without prototype.
  Its formals will be inferred from actual arguments
[kernel:typing:no-proto] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:77: 
  Calling function removeStock that is declared without prototype.
  Its formals will be inferred from actual arguments
[kernel:typing:no-proto] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:81: 
  Calling function newOrder that is declared without prototype.
  Its formals will be inferred from actual arguments
[kernel:typing:no-proto] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:85: 
  Calling function addProductToOrder that is declared without prototype.
  Its formals will be inferred from actual arguments
[kernel:typing:no-proto] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:89: 
  Calling function removeProductFromOrder that is declared without prototype.
  Its formals will be inferred from actual arguments
[kernel:typing:no-proto] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:93: 
  Calling function orderCost that is declared without prototype.
  Its formals will be inferred from actual arguments
[kernel:typing:no-proto] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:97: 
  Calling function changePrice that is declared without prototype.
  Its formals will be inferred from actual arguments
[kernel:typing:no-proto] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:101: 
  Calling function listOrderDescQtd that is declared without prototype.
  Its formals will be inferred from actual arguments
[kernel:typing:no-proto] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:105: 
  Calling function listMostOrderId that is declared without prototype.
  Its formals will be inferred from actual arguments
[kernel:typing:no-proto] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:109: 
  Calling function listProductsByPrice that is declared without prototype.
  Its formals will be inferred from actual arguments
[kernel:typing:no-proto] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:113: 
  Calling function listOrderByDesc that is declared without prototype.
  Its formals will be inferred from actual arguments
[eva] Analyzing a complete application starting at main
[eva] Computing initial state
[eva] Initial state computed
[eva:initial-state] Values of globals at initialization
  products[0..9999] ∈ {0}
  orders[0..499] ∈ {0}
  productsId ∈ {0}
  ordersId ∈ {0}
[eva] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:384: 
  starting to merge loop iterations
[kernel] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:385: 
  more than 200(500) locations to update in array. Approximating.
[kernel] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:385: 
  more than 200(501) locations to update in array. Approximating.
[kernel] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:385: 
  more than 200(10000) locations to update in array. Approximating.
[eva] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:388: 
  starting to merge loop iterations
[kernel] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:389: 
  more than 200(500) locations to update in array. Approximating.
[kernel] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:385: 
  more than 200(10000) elements to enumerate. Approximating.
[kernel] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:389: 
  more than 200(500) elements to enumerate. Approximating.
[eva] using specification for function getchar
[eva] using specification for function scanf_va_1
[eva] using specification for function printf_va_1
[eva] using specification for function scanf_va_2
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:142: 
  accessing out of bounds index. assert 0 ≤ idp;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:142: 
  accessing out of bounds index. assert idp < 10000;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:143: 
  signed overflow. assert -2147483648 ≤ products[idp].stock + stock;
[kernel] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:143: 
  more than 200(10000) locations to update in array. Approximating.
[eva] using specification for function printf_va_2
[kernel] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:143: 
  more than 200(10000) elements to enumerate. Approximating.
[eva] using specification for function scanf_va_3
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:154: 
  accessing out of bounds index. assert 0 ≤ idp;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:154: 
  accessing out of bounds index. assert idp < 10000;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:155: 
  signed overflow. assert products[idp].stock - stock ≤ 2147483647;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:156: 
  signed overflow. assert products[idp].stock - stock ≤ 2147483647;
[kernel] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:156: 
  more than 200(10000) locations to update in array. Approximating.
[eva] using specification for function printf_va_3
[eva] using specification for function printf_va_4
[eva] using specification for function printf_va_5
[eva] using specification for function scanf_va_4
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:180: 
  accessing out of bounds index. assert 0 ≤ ide;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:180: 
  accessing out of bounds index. assert ide < 500;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:181: 
  accessing out of bounds index. assert 0 ≤ idp;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:181: 
  accessing out of bounds index. assert idp < 10000;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:182: 
  signed overflow. assert products[idp].stock - qty ≤ 2147483647;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:183: 
  signed overflow. assert qty * products[idp].weight ≤ 2147483647;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:397: 
  accessing out of bounds index. assert 0 ≤ prodIndex;
[kernel] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:397: 
  more than 200(500) locations to update in array. Approximating.
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:399: 
  signed overflow.
  assert -2147483648 ≤ orders[tempIde].orderProd[prodIndex][1] + tempQtd;
[kernel] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:399: 
  more than 200(500) locations to update in array. Approximating.
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:400: 
  signed overflow. assert products[tempIdp].stock - tempQtd ≤ 2147483647;
[kernel] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:400: 
  more than 200(10000) locations to update in array. Approximating.
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:401: 
  signed overflow. assert -2147483648 ≤ tempQtd * products[tempIdp].weight;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:401: 
  signed overflow. assert tempQtd * products[tempIdp].weight ≤ 2147483647;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:401: 
  signed overflow.
  assert
  -2147483648 ≤
  orders[tempIde].weight + (int)(tempQtd * products[tempIdp].weight);
[kernel] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:401: 
  more than 200(500) locations to update in array. Approximating.
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:402: 
  signed overflow. assert -2147483648 ≤ tempQtd * products[tempIdp].price;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:402: 
  signed overflow. assert tempQtd * products[tempIdp].price ≤ 2147483647;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:402: 
  signed overflow.
  assert
  -2147483648 ≤
  orders[tempIde].cost + (int)(tempQtd * products[tempIdp].price);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:402: 
  signed overflow.
  assert
  orders[tempIde].cost + (int)(tempQtd * products[tempIdp].price) ≤
  2147483647;
[kernel] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:402: 
  more than 200(500) locations to update in array. Approximating.
[kernel] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:397: 
  more than 200(500) elements to enumerate. Approximating.
[kernel] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:399: 
  more than 200(500) elements to enumerate. Approximating.
[kernel] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:401: 
  more than 200(500) elements to enumerate. Approximating.
[kernel] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:401: 
  more than 200(10000) elements to enumerate. Approximating.
[kernel] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:402: 
  more than 200(500) elements to enumerate. Approximating.
[kernel] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:402: 
  more than 200(10000) elements to enumerate. Approximating.
[kernel] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:208: 
  more than 200(500) elements to enumerate. Approximating.
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:209: 
  signed overflow. assert orders[ide].orderProdId + 1 ≤ 2147483647;
[kernel] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:209: 
  more than 200(500) locations to update in array. Approximating.
[eva] using specification for function printf_va_6
[eva] using specification for function printf_va_7
[eva] using specification for function printf_va_8
[eva] using specification for function printf_va_9
[eva] using specification for function scanf_va_5
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:228: 
  accessing out of bounds index. assert 0 ≤ ide;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:228: 
  accessing out of bounds index. assert ide < 500;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:229: 
  accessing out of bounds index. assert 0 ≤ idp;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:229: 
  accessing out of bounds index. assert idp < 10000;
[eva] using specification for function printf_va_10
[eva] using specification for function printf_va_11
[eva] using specification for function scanf_va_6
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:250: 
  accessing out of bounds index. assert 0 ≤ ide;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:250: 
  accessing out of bounds index. assert ide < 500;
[eva] using specification for function printf_va_12
[eva] using specification for function printf_va_13
[eva] using specification for function scanf_va_7
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:262: 
  accessing out of bounds index. assert 0 ≤ idp;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:262: 
  accessing out of bounds index. assert idp < 10000;
[kernel] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:264: 
  more than 200(10000) locations to update in array. Approximating.
[eva] using specification for function printf_va_14
[eva] using specification for function scanf_va_8
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:285: 
  accessing out of bounds index. assert 0 ≤ ide;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:285: 
  accessing out of bounds index. assert ide < 500;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:286: 
  accessing out of bounds index. assert 0 ≤ idp;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:286: 
  accessing out of bounds index. assert idp < 10000;
[eva] using specification for function printf_va_16
[eva] using specification for function printf_va_17
[eva] using specification for function printf_va_18
[eva] using specification for function scanf_va_9
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:308: 
  accessing out of bounds index. assert 0 ≤ idp;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:308: 
  accessing out of bounds index. assert idp < 10000;
[eva] using specification for function printf_va_20
[eva] using specification for function printf_va_21
[eva] using specification for function scanf_va_10
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:358: 
  accessing out of bounds index. assert 0 ≤ ide;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:358: 
  accessing out of bounds index. assert ide < 500;
[eva] using specification for function printf_va_23
[eva] using specification for function printf_va_25
[eva] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:64: 
  starting to merge loop iterations
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:143: 
  signed overflow. assert products[idp].stock + stock ≤ 2147483647;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:155: 
  signed overflow. assert -2147483648 ≤ products[idp].stock - stock;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:156: 
  signed overflow. assert -2147483648 ≤ products[idp].stock - stock;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:182: 
  signed overflow. assert -2147483648 ≤ products[idp].stock - qty;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:183: 
  signed overflow. assert -2147483648 ≤ qty * products[idp].weight;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:183: 
  signed overflow.
  assert
  -2147483648 ≤ orders[ide].weight + (int)(qty * products[idp].weight);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:183: 
  signed overflow.
  assert orders[ide].weight + (int)(qty * products[idp].weight) ≤ 2147483647;
[eva] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:189: 
  starting to merge loop iterations
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:190: 
  accessing out of bounds index. assert i < 200;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:399: 
  signed overflow.
  assert orders[tempIde].orderProd[prodIndex][1] + tempQtd ≤ 2147483647;
[kernel] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:399: 
  more than 200(100998) locations to update in array. Approximating.
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:400: 
  signed overflow. assert -2147483648 ≤ products[tempIdp].stock - tempQtd;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:401: 
  signed overflow.
  assert
  orders[tempIde].weight + (int)(tempQtd * products[tempIdp].weight) ≤
  2147483647;
[kernel] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:399: 
  more than 200(100998) elements to enumerate. Approximating.
[eva] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:201: 
  starting to merge loop iterations
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:202: 
  accessing out of bounds index. assert i < 200;
[kernel] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:397: 
  more than 200(100998) locations to update in array. Approximating.
[kernel] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:397: 
  more than 200(100998) elements to enumerate. Approximating.
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:397: 
  accessing out of bounds index. assert prodIndex < 200;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:232: 
  accessing out of bounds index. assert 0 ≤ orders[ide].orderProd[i][0];
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:232: 
  accessing out of bounds index. assert orders[ide].orderProd[i][0] < 10000;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:232: 
  signed overflow.
  assert
  -2147483648 ≤
  orders[ide].orderProd[i][1] * products[orders[ide].orderProd[i][0]].price;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:232: 
  signed overflow.
  assert
  orders[ide].orderProd[i][1] * products[orders[ide].orderProd[i][0]].price ≤
  2147483647;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:232: 
  signed overflow.
  assert
  -2147483648 ≤
  orders[ide].cost -
  (int)(orders[ide].orderProd[i][1] *
        products[orders[ide].orderProd[i][0]].price);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:232: 
  signed overflow.
  assert
  orders[ide].cost -
  (int)(orders[ide].orderProd[i][1] *
        products[orders[ide].orderProd[i][0]].price)
  ≤ 2147483647;
[kernel] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:232: 
  more than 200(500) locations to update in array. Approximating.
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:233: 
  accessing out of bounds index. assert 0 ≤ orders[ide].orderProd[i][0];
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:233: 
  accessing out of bounds index. assert orders[ide].orderProd[i][0] < 10000;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:233: 
  signed overflow.
  assert
  -2147483648 ≤
  orders[ide].orderProd[i][1] * products[orders[ide].orderProd[i][0]].weight;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:233: 
  signed overflow.
  assert
  orders[ide].orderProd[i][1] * products[orders[ide].orderProd[i][0]].weight
  ≤ 2147483647;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:233: 
  signed overflow.
  assert
  -2147483648 ≤
  orders[ide].weight -
  (int)(orders[ide].orderProd[i][1] *
        products[orders[ide].orderProd[i][0]].weight);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:233: 
  signed overflow.
  assert
  orders[ide].weight -
  (int)(orders[ide].orderProd[i][1] *
        products[orders[ide].orderProd[i][0]].weight)
  ≤ 2147483647;
[kernel] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:233: 
  more than 200(500) locations to update in array. Approximating.
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:234: 
  signed overflow.
  assert -2147483648 ≤ products[idp].stock + orders[ide].orderProd[i][1];
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:234: 
  signed overflow.
  assert products[idp].stock + orders[ide].orderProd[i][1] ≤ 2147483647;
[kernel] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:234: 
  more than 200(10000) locations to update in array. Approximating.
[kernel] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:235: 
  more than 200(500) locations to update in array. Approximating.
[eva] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:230: 
  starting to merge loop iterations
[kernel] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:235: 
  more than 200(100800) locations to update in array. Approximating.
[kernel] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:235: 
  more than 200(100801) locations to update in array. Approximating.
[kernel] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:235: 
  more than 200(100998) locations to update in array. Approximating.
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:231: 
  accessing out of bounds index. assert i < 200;
[eva] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:267: 
  starting to merge loop iterations
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:269: 
  accessing out of bounds index. assert j < 200;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:270: 
  signed overflow. assert -2147483648 ≤ price - prevPrice;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:270: 
  signed overflow. assert price - prevPrice ≤ 2147483647;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:270: 
  signed overflow.
  assert -2147483648 ≤ (int)(price - prevPrice) * orders[i].orderProd[j][1];
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:270: 
  signed overflow.
  assert (int)(price - prevPrice) * orders[i].orderProd[j][1] ≤ 2147483647;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:270: 
  signed overflow.
  assert
  -2147483648 ≤
  orders[i].cost + (int)((int)(price - prevPrice) * orders[i].orderProd[j][1]);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:270: 
  signed overflow.
  assert
  orders[i].cost + (int)((int)(price - prevPrice) * orders[i].orderProd[j][1])
  ≤ 2147483647;
[eva] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:266: 
  starting to merge loop iterations
[eva] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:288: 
  starting to merge loop iterations
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:289: 
  accessing out of bounds index. assert i < 200;
[eva] using specification for function printf_va_15
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:290: 
  function printf_va_15: precondition valid_read_string(param0) got status unknown.
[eva] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:313: 
  starting to merge loop iterations
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:314: 
  accessing out of bounds index. assert j < 200;
[eva] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:312: 
  starting to merge loop iterations
[eva] using specification for function printf_va_19
[eva] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:337: 
  starting to merge loop iterations
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:345: 
  accessing uninitialized left-value.
  assert \initialized(&tempProducts[i].stock);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:345: 
  accessing uninitialized left-value.
  assert \initialized(&tempProducts[i].price);
[eva] using specification for function printf_va_22
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:345: 
  function printf_va_22: precondition valid_read_string(param0) got status unknown.
[eva] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:344: 
  starting to merge loop iterations
[eva] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:359: 
  starting to merge loop iterations
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:360: 
  accessing out of bounds index. assert i < 200;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:364: 
  signed overflow. assert -2147483648 ≤ orders[ide].orderProdId - 1;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:463: 
  accessing uninitialized left-value. assert \initialized((int *)*(prod + h));
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:463: 
  accessing uninitialized left-value. assert \initialized((int *)*(prod + i));
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:463: 
  out of bounds read. assert \valid_read((int *)*(prod + h));
[eva] using specification for function strcmp
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:463: 
  function strcmp: precondition 'valid_string_s1' got status unknown.
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:463: 
  function strcmp: precondition 'valid_string_s2' got status unknown.
[eva] FRAMAC_SHARE/libc/string.h:156: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function strcmp
[eva] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:463: 
  starting to merge loop iterations
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:463: 
  signed overflow. assert i + 1 ≤ 2147483647;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:463: 
  out of bounds read. assert \valid_read((int *)*(prod + i));
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:464: 
  accessing uninitialized left-value. assert \initialized((int *)*(prod + h));
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:464: 
  accessing uninitialized left-value. assert \initialized((int *)*(prod + j));
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:464: 
  out of bounds read. assert \valid_read((int *)*(prod + h));
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:464: 
  out of bounds read. assert \valid_read((int *)*(prod + j));
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:464: 
  function strcmp: precondition 'valid_string_s1' got status unknown.
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:464: 
  function strcmp: precondition 'valid_string_s2' got status unknown.
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:495: 
  accessing uninitialized left-value. assert \initialized((int *)*(prod + i));
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:495: 
  out of bounds read. assert \valid_read((int *)*(prod + i));
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:496: 
  accessing uninitialized left-value. assert \initialized((int *)*(prod + j));
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:496: 
  out of bounds read. assert \valid_read((int *)*(prod + j));
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:499: 
  accessing uninitialized left-value. assert \initialized(&(*(prod + i))[1]);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:500: 
  accessing uninitialized left-value. assert \initialized(&(*(prod + j))[1]);
[eva] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:462: 
  starting to merge loop iterations
[eva] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:464: 
  starting to merge loop iterations
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:464: 
  signed overflow. assert -2147483648 ≤ j - 1;
[eva:recursion] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:452: 
  detected recursive call of function quickSortByDesc.
[eva] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:452: User Error: 
  Recursive call to quickSortByDesc without assigns clause.
  Generating probably incomplete assigns to interpret the call. Try to increase
  the -eva-unroll-recursive-calls parameter or write a correct specification
  for function quickSortByDesc.
[kernel:annot:missing-spec] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:444: 
  Neither code nor specification for function quickSortByDesc, generating default assigns from the prototype
[eva] using specification for function quickSortByDesc
[eva:recursion] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:453: 
  detected recursive call of function quickSortByDesc.
[eva] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:453: 
  Using specification of function quickSortByDesc for recursive calls.
  Analysis of function quickSortByDesc is thus incomplete and its soundness
  relies on the written specification.
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:369: 
  accessing uninitialized left-value.
  assert \initialized(&tempOrderProd[i][1]);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:370: 
  accessing uninitialized left-value.
  assert \initialized(&tempOrderProd[i][0]);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:370: 
  accessing out of bounds index. assert 0 ≤ tempOrderProd[i][0];
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:370: 
  accessing out of bounds index. assert tempOrderProd[i][0] < 10000;
[eva] using specification for function printf_va_24
[eva] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:368: 
  starting to merge loop iterations
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:370: 
  accessing uninitialized left-value.
  assert \initialized(&tempOrderProd[i][1]);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:369: 
  accessing out of bounds index. assert i < 200;
[kernel] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:269: 
  more than 200(402) elements to enumerate. Approximating.
[kernel] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:270: 
  more than 200(402) elements to enumerate. Approximating.
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:427: 
  accessing uninitialized left-value. assert \initialized(&(prod + i)->price);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:427: 
  accessing uninitialized left-value. assert \initialized(&(prod + h)->price);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:427: 
  accessing uninitialized left-value. assert \initialized(&(prod + i)->id);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:427: 
  accessing uninitialized left-value. assert \initialized(&(prod + h)->id);
[eva] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:427: 
  starting to merge loop iterations
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:427: 
  accessing uninitialized left-value. assert \initialized(&(prod + i)->price);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:428: 
  accessing uninitialized left-value. assert \initialized(&(prod + j)->price);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:428: 
  accessing uninitialized left-value. assert \initialized(&(prod + j)->id);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:428: 
  accessing uninitialized left-value. assert \initialized(&(prod + h)->id);
[eva] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:426: 
  starting to merge loop iterations
[eva] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:428: 
  starting to merge loop iterations
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:428: 
  out of bounds read. assert \valid_read(&(prod + j)->price);
[eva:recursion] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:415: 
  detected recursive call of function quickSortByPrice.
[eva] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:415: User Error: 
  Recursive call to quickSortByPrice without assigns clause.
  Generating probably incomplete assigns to interpret the call. Try to increase
  the -eva-unroll-recursive-calls parameter or write a correct specification
  for function quickSortByPrice.
[kernel:annot:missing-spec] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:407: 
  Neither code nor specification for function quickSortByPrice, generating default assigns from the prototype
[eva] using specification for function quickSortByPrice
[eva:recursion] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:416: 
  detected recursive call of function quickSortByPrice.
[eva] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:416: 
  Using specification of function quickSortByPrice for recursive calls.
  Analysis of function quickSortByPrice is thus incomplete and its soundness
  relies on the written specification.
[eva] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:452: 
  Using specification of function quickSortByDesc for recursive calls.
  Analysis of function quickSortByDesc is thus incomplete and its soundness
  relies on the written specification.
[kernel] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:130: 
  more than 200(10000) elements to enumerate. Approximating.
[kernel] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:130: 
  more than 200(10000) locations to update in array. Approximating.
[kernel] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:131: 
  more than 200(10000) locations to update in array. Approximating.
[kernel] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:166: 
  more than 200(500) locations to update in array. Approximating.
[kernel] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:270: 
  more than 200(499) locations to update in array. Approximating.
[kernel] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:267: 
  more than 200(499) elements to enumerate. Approximating.
[kernel] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:269: 
  more than 200(100796) elements to enumerate. Approximating.
[kernel] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:270: 
  more than 200(499) elements to enumerate. Approximating.
[kernel] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:270: 
  more than 200(100796) elements to enumerate. Approximating.
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:427: 
  accessing uninitialized left-value. assert \initialized(&(prod + h)->price);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:427: 
  signed overflow. assert i + 1 ≤ 2147483647;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:427: 
  out of bounds read. assert \valid_read(&(prod + i)->price);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:428: 
  accessing uninitialized left-value. assert \initialized(&(prod + h)->price);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:428: 
  accessing uninitialized left-value. assert \initialized(&(prod + j)->price);
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:428: 
  accessing uninitialized left-value. assert \initialized(&(prod + h)->price);
[kernel] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:427: 
  more than 200(9998) elements to enumerate. Approximating.
[kernel] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:427: 
  more than 200(9998) elements to enumerate. Approximating.
[kernel] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:428: 
  more than 200(9998) elements to enumerate. Approximating.
[kernel] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:428: 
  more than 200(9998) elements to enumerate. Approximating.
[eva] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:415: 
  Using specification of function quickSortByPrice for recursive calls.
  Analysis of function quickSortByPrice is thus incomplete and its soundness
  relies on the written specification.
[kernel] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:345: 
  more than 200(9999) elements to enumerate. Approximating.
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:130: 
  function scanf_va_1: precondition \valid(param0) got status unknown.
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:130: 
  function scanf_va_1: precondition \valid(param1) got status unknown.
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:130: 
  function scanf_va_1: precondition \valid(param2) got status unknown.
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:130: 
  function scanf_va_1: precondition \valid(param3) got status unknown.
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:131: 
  accessing out of bounds index. assert productsId < 10000;
[eva:alarm] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:166: 
  accessing out of bounds index. assert ordersId < 500;
[kernel] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:270: 
  more than 200(500) locations to update in array. Approximating.
[kernel] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:427: 
  more than 200(9999) elements to enumerate. Approximating.
[kernel] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:427: 
  more than 200(9999) elements to enumerate. Approximating.
[kernel] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:428: 
  more than 200(9999) elements to enumerate. Approximating.
[eva] done for function main
[kernel] /home/fmarques/sbugs/projects/alunos/iaed_p1/394/proj1.c:428: 
  more than 200(9999) elements to enumerate. Approximating.
[scope:rm_asserts] removing 10 assertion(s)
[eva] ====== VALUES COMPUTED ======
[eva:final-states] Values at end of function init:
  products{[0..9998]{.id; .price; .weight; .stock; .desc[bits 0 to 503]#; .[bits 632 to 639]#}; [9999].id} ∈
          {-1; 0} repeated %32 
          [9999]{.price; .weight; .stock; .desc[0..62]; .[bits 632 to 639]} ∈
          {0}
  orders{[0..498]{.id; .cost; .weight; .orderProdId; .orderProd[0..199][0..1]}; [499].id} ∈
        {-1; 0}
        [499]{.cost; .weight; .orderProdId; .orderProd[0..199][0..1]} ∈ {0}
  i ∈ {500}
[eva:final-states] Values at end of function newOrder:
  orders[0].id ∈ [-1..499]
        {[0]{.cost; .weight; .orderProdId; .orderProd[0..199][0..1]}; [1..499]} ∈
        [--..--]
  ordersId ∈ [1..500]
  S___fc_stdout[0..1] ∈ [--..--]
[eva:final-states] Values at end of function addProduct:
  products[0].id ∈ [-1..2147483647]
          {[0]{.price; .weight; .stock; .desc[0..62]; .[bits 632 to 639]}; [1..9998]; [9999]{.id; .price; .weight; .stock; .desc[0]}} ∈
          [--..--]
          [9999]{.desc[1..62]; .[bits 632 to 639]} ∈ {0}
  productsId ∈ [1..10000]
  S___fc_stdin[0..1] ∈ [--..--]
  S___fc_stdout[0..1] ∈ [--..--]
[eva:final-states] Values at end of function addStock:
  products[0].id ∈ [-1..2147483647]
          {[0]{.price; .weight; .stock; .desc[0..62]; .[bits 632 to 639]}; [1..9998]; [9999]{.id; .price; .weight; .stock; .desc[0]}} ∈
          [--..--]
          [9999]{.desc[1..62]; .[bits 632 to 639]} ∈ {0}
  idp ∈ [0..9999]
  stock ∈ [--..--]
  S___fc_stdin[0..1] ∈ [--..--]
  S___fc_stdout[0..1] ∈ [--..--]
[eva:final-states] Values at end of function removeStock:
  products[0].id ∈ [-1..2147483647]
          {[0]{.price; .weight; .stock; .desc[0..62]; .[bits 632 to 639]}; [1..9998]; [9999]{.id; .price; .weight; .stock; .desc[0]}} ∈
          [--..--]
          [9999]{.desc[1..62]; .[bits 632 to 639]} ∈ {0}
  idp ∈ [0..9999]
  stock ∈ [--..--]
  S___fc_stdin[0..1] ∈ [--..--]
  S___fc_stdout[0..1] ∈ [--..--]
[eva:final-states] Values at end of function removeProductFromOrder:
  products[0].id ∈ [-1..2147483647]
          {[0]{.price; .weight; .stock; .desc[0..62]; .[bits 632 to 639]}; [1..9998]; [9999]{.id; .price; .weight; .stock; .desc[0]}} ∈
          [--..--]
          [9999]{.desc[1..62]; .[bits 632 to 639]} ∈ {0}
  orders[0].id ∈ [-1..499]
        {[0]{.cost; .weight; .orderProdId; .orderProd[0..199][0..1]}; [1..499]} ∈
        [--..--]
  ide ∈ [0..499]
  idp ∈ [--..--]
  i ∈ [0..200] or UNINITIALIZED
  S___fc_stdin[0..1] ∈ [--..--]
  S___fc_stdout[0..1] ∈ [--..--]
[eva:final-states] Values at end of function orderCost:
  ide ∈ [0..499]
  S___fc_stdin[0..1] ∈ [--..--]
  S___fc_stdout[0..1] ∈ [--..--]
[eva:final-states] Values at end of function changePrice:
  products[0].id ∈ [-1..2147483647]
          {[0]{.price; .weight; .stock; .desc[0..62]; .[bits 632 to 639]}; [1..9998]; [9999]{.id; .price; .weight; .stock; .desc[0]}} ∈
          [--..--]
          [9999]{.desc[1..62]; .[bits 632 to 639]} ∈ {0}
  orders[0].id ∈ [-1..499]
        {[0]{.cost; .weight; .orderProdId; .orderProd[0..199][0..1]}; [1..499]} ∈
        [--..--]
  idp ∈ [0..9999]
  price ∈ [--..--]
  i ∈ [0..500] or UNINITIALIZED
  j ∈ [0..200] or UNINITIALIZED
  prevPrice ∈ [--..--]
  S___fc_stdin[0..1] ∈ [--..--]
  S___fc_stdout[0..1] ∈ [--..--]
[eva:final-states] Values at end of function listOrderDescQtd:
  ide ∈ [0..499]
  idp ∈ [--..--]
  i ∈ [0..200] or UNINITIALIZED
  S___fc_stdin[0..1] ∈ [--..--]
  S___fc_stdout[0..1] ∈ [--..--]
[eva:final-states] Values at end of function listMostOrderId:
  idp ∈ [0..9999]
  i ∈ [1..500] or UNINITIALIZED
  j ∈ [0..200] or UNINITIALIZED
  maxId ∈ [0..499]
  maxProdId ∈ [0..199]
  tempQty ∈ [--..--]
  S___fc_stdin[0..1] ∈ [--..--]
  S___fc_stdout[0..1] ∈ [--..--]
[eva:final-states] Values at end of function swapProd:
  tempProducts[0..9999] ∈ [--..--] or UNINITIALIZED
  temp ∈ [--..--] or UNINITIALIZED
[eva:final-states] Values at end of function quickSortPartitionByPrice:
  tempProducts[0..9999] ∈ [--..--] or UNINITIALIZED
  i ∈ [0..9999]
  j ∈ [0..9999]
[eva:final-states] Values at end of function swapProdDesc:
  tempOrderProd[0..199][0..1] ∈ [--..--] or UNINITIALIZED
  temp ∈ [--..--]
[eva:final-states] Values at end of function quickSortPartitionByDesc:
  tempOrderProd[0..199][0..1] ∈ [--..--] or UNINITIALIZED
  i ∈ [0..199]
  j ∈ [-2147483648..2147483646]
[eva:final-states] Values at end of function updateValuesAddProductToOrder:
  products[0].id ∈ [-1..2147483647]
          {[0]{.price; .weight; .stock; .desc[0..62]; .[bits 632 to 639]}; [1..9998]; [9999]{.id; .price; .weight; .stock; .desc[0]}} ∈
          [--..--]
          [9999]{.desc[1..62]; .[bits 632 to 639]} ∈ {0}
  orders[0].id ∈ [-1..499]
        {[0]{.cost; .weight; .orderProdId; .orderProd[0..199][0..1]}; [1..499]} ∈
        [--..--]
[eva:final-states] Values at end of function addProductToOrder:
  products[0].id ∈ [-1..2147483647]
          {[0]{.price; .weight; .stock; .desc[0..62]; .[bits 632 to 639]}; [1..9998]; [9999]{.id; .price; .weight; .stock; .desc[0]}} ∈
          [--..--]
          [9999]{.desc[1..62]; .[bits 632 to 639]} ∈ {0}
  orders[0].id ∈ [-1..499]
        {[0]{.cost; .weight; .orderProdId; .orderProd[0..199][0..1]}; [1..499]} ∈
        [--..--]
  ide ∈ [0..499]
  idp ∈ [--..--]
  qty ∈ [--..--]
  i ∈ [0..200] or UNINITIALIZED
  S___fc_stdin[0..1] ∈ [--..--]
  S___fc_stdout[0..1] ∈ [--..--]
[eva:final-states] Values at end of function listOrderByDesc:
  i ∈ [0..200] or UNINITIALIZED
  ide ∈ [0..499]
  tempOrderProd[0..199][0..1] ∈ [--..--] or UNINITIALIZED
  S___fc_stdin[0..1] ∈ [--..--]
  S___fc_stdout[0..1] ∈ [--..--]
[eva:final-states] Values at end of function listProductsByPrice:
  i ∈ [0..10000]
  tempProducts[0..9999] ∈ [--..--] or UNINITIALIZED
  S___fc_stdout[0..1] ∈ [--..--]
[eva:final-states] Values at end of function main:
  products[0].id ∈ [-1..2147483647]
          {[0]{.price; .weight; .stock; .desc[0..62]; .[bits 632 to 639]}; [1..9998]; [9999]{.id; .price; .weight; .stock; .desc[0]}} ∈
          [--..--]
          [9999]{.desc[1..62]; .[bits 632 to 639]} ∈ {0}
  orders[0].id ∈ [-1..499]
        {[0]{.cost; .weight; .orderProdId; .orderProd[0..199][0..1]}; [1..499]} ∈
        [--..--]
  productsId ∈ [0..10000]
  ordersId ∈ [0..500]
  progRun ∈ {0}
  command ∈ [--..--] or UNINITIALIZED
  __retres ∈ {0}
  S___fc_stdin[0..1] ∈ [--..--]
  S___fc_stdout[0..1] ∈ [--..--]
[eva:final-states] Values at end of function quickSortByDesc:
  tempOrderProd[0..199][0..1] ∈ [--..--] or UNINITIALIZED
  i ∈ [0..199] or UNINITIALIZED
[eva:final-states] Values at end of function quickSortByPrice:
  tempProducts[0..9999] ∈ [--..--] or UNINITIALIZED
  i ∈ [0..9999] or UNINITIALIZED
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  21 functions analyzed (out of 24): 87% coverage.
  In these functions, 331 statements reached (out of 331): 100% coverage.
  ----------------------------------------------------------------------------
  Some errors and warnings have been raised during the analysis:
    by the Eva analyzer:      2 errors    0 warnings
    by the Frama-C kernel:    0 errors    0 warnings
  ----------------------------------------------------------------------------
  120 alarms generated by the analysis:
      45 integer overflows
      42 accesses out of bounds index
      25 accesses to uninitialized left-values
       8 invalid memory accesses
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    53 valid    10 unknown     0 invalid     63 total
  84% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[eva] User Error: Deferred error message was emitted during execution. See above messages for more information.
[kernel] Plug-in eva aborted: invalid user input.
