#!/usr/bin/env python3

import argparse
import sys, os

# This is not required if you've installed pycparser into
# your site-packages/ with setup.py
sys.path.extend(['.', '..'])

from pycparser import parse_file, c_generator
from visitors import *


def get_cmd_args():
	parser = argparse.ArgumentParser(description='Generate Symbolic Tests')

	parser.add_argument('-o', metavar='name', type=str, required=False, default='out.c',
						help='Output name')
	parser.add_argument('targetFile', metavar='file', type=str,
						help='The name of the target C file')
	return parser.parse_args()


class PreProcessor():

	def __init__(self, inputfile, outputfile):
		
		self.inputfile = inputfile
		self.outputfile = outputfile

		self.ast = parse_file(self.inputfile, use_cpp=True,
			cpp_path='gcc',
			cpp_args=['-E', '-Iloglib/fake_libc_include'])


	def gen(self):

		visitor = PreProcessVisitor()
		generated_ast = visitor.visit(self.ast)

		generator = c_generator.CGenerator()
		generated_string = generator.visit(generated_ast)

		#Write to file
		file = open(self.outputfile, "w")
		file.write(f'/*File generated by {os.path.basename(__file__)}*/\n\n')
		file.write(generated_string)



if __name__ == "__main__":

	#Command line arguments
	args = get_cmd_args()
	inputfile = args.targetFile
	outfile = args.o

	preprocessor = PreProcessor(inputfile,outfile)
	preprocessor.gen()
